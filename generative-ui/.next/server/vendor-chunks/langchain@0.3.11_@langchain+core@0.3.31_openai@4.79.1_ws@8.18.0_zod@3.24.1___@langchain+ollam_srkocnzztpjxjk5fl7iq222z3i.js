"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i";
exports.ids = ["vendor-chunks/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/agents.js":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/agents.js ***!
  \**************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Agent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.Agent),
/* harmony export */   AgentActionOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.AgentActionOutputParser),
/* harmony export */   AgentExecutor: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.AgentExecutor),
/* harmony export */   BaseMultiActionAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMultiActionAgent),
/* harmony export */   BaseSingleActionAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseSingleActionAgent),
/* harmony export */   ChatAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatAgent),
/* harmony export */   ChatAgentOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatAgentOutputParser),
/* harmony export */   ChatConversationalAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatConversationalAgent),
/* harmony export */   ChatConversationalAgentOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatConversationalAgentOutputParser),
/* harmony export */   ChatConversationalAgentOutputParserWithRetries: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatConversationalAgentOutputParserWithRetries),
/* harmony export */   JsonToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonToolkit),
/* harmony export */   LLMSingleActionAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.LLMSingleActionAgent),
/* harmony export */   OpenAIAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.OpenAIAgent),
/* harmony export */   OpenApiToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.OpenApiToolkit),
/* harmony export */   RequestsToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.RequestsToolkit),
/* harmony export */   RunnableAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableAgent),
/* harmony export */   StructuredChatAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredChatAgent),
/* harmony export */   StructuredChatOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredChatOutputParser),
/* harmony export */   StructuredChatOutputParserWithRetries: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredChatOutputParserWithRetries),
/* harmony export */   Toolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.Toolkit),
/* harmony export */   VectorStoreRouterToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.VectorStoreRouterToolkit),
/* harmony export */   VectorStoreToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.VectorStoreToolkit),
/* harmony export */   XMLAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.XMLAgent),
/* harmony export */   ZeroShotAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ZeroShotAgent),
/* harmony export */   ZeroShotAgentOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ZeroShotAgentOutputParser),
/* harmony export */   createJsonAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createJsonAgent),
/* harmony export */   createOpenAIFunctionsAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createOpenAIFunctionsAgent),
/* harmony export */   createOpenAIToolsAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createOpenAIToolsAgent),
/* harmony export */   createOpenApiAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createOpenApiAgent),
/* harmony export */   createReactAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createReactAgent),
/* harmony export */   createStructuredChatAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createStructuredChatAgent),
/* harmony export */   createToolCallingAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createToolCallingAgent),
/* harmony export */   createVectorStoreAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createVectorStoreAgent),
/* harmony export */   createVectorStoreRouterAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createVectorStoreRouterAgent),
/* harmony export */   createXmlAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createXmlAgent),
/* harmony export */   initializeAgentExecutor: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.initializeAgentExecutor),
/* harmony export */   initializeAgentExecutorWithOptions: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.initializeAgentExecutorWithOptions)
/* harmony export */ });
/* harmony import */ var _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/agents/index.js */ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* binding */ Agent),\n/* harmony export */   AgentRunnableSequence: () => (/* binding */ AgentRunnableSequence),\n/* harmony export */   BaseAgent: () => (/* binding */ BaseAgent),\n/* harmony export */   BaseMultiActionAgent: () => (/* binding */ BaseMultiActionAgent),\n/* harmony export */   BaseSingleActionAgent: () => (/* binding */ BaseSingleActionAgent),\n/* harmony export */   LLMSingleActionAgent: () => (/* binding */ LLMSingleActionAgent),\n/* harmony export */   RunnableAgent: () => (/* binding */ RunnableAgent),\n/* harmony export */   RunnableMultiActionAgent: () => (/* binding */ RunnableMultiActionAgent),\n/* harmony export */   RunnableSingleActionAgent: () => (/* binding */ RunnableSingleActionAgent),\n/* harmony export */   isRunnableAgent: () => (/* binding */ isRunnableAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n\n\n/**\n * Error class for parse errors in LangChain. Contains information about\n * the error message and the output that caused the error.\n */\nclass ParseError extends Error {\n    constructor(msg, output) {\n        super(msg);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n/**\n * Abstract base class for agents in LangChain. Provides common\n * functionality for agents, such as handling inputs and outputs.\n */\nclass BaseAgent extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    get returnValues() {\n        return [\"output\"];\n    }\n    get allowedTools() {\n        return undefined;\n    }\n    /**\n     * Return the string type key uniquely identifying this class of agent.\n     */\n    _agentType() {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Return response when agent has been stopped due to max iterations\n     */\n    returnStoppedResponse(earlyStoppingMethod, _steps, _inputs, _callbackManager) {\n        if (earlyStoppingMethod === \"force\") {\n            return Promise.resolve({\n                returnValues: { output: \"Agent stopped due to max iterations.\" },\n                log: \"\",\n            });\n        }\n        throw new Error(`Invalid stopping method: ${earlyStoppingMethod}`);\n    }\n    /**\n     * Prepare the agent for output, if needed\n     */\n    async prepareForOutput(_returnValues, _steps) {\n        return {};\n    }\n}\n/**\n * Abstract base class for single action agents in LangChain. Extends the\n * BaseAgent class and provides additional functionality specific to\n * single action agents.\n */\nclass BaseSingleActionAgent extends BaseAgent {\n    _agentActionType() {\n        return \"single\";\n    }\n}\n/**\n * Abstract base class for multi-action agents in LangChain. Extends the\n * BaseAgent class and provides additional functionality specific to\n * multi-action agents.\n */\nclass BaseMultiActionAgent extends BaseAgent {\n    _agentActionType() {\n        return \"multi\";\n    }\n}\nfunction isAgentAction(input) {\n    return !Array.isArray(input) && input?.tool !== undefined;\n}\nfunction isRunnableAgent(x) {\n    return (x.runnable !==\n        undefined);\n}\n// TODO: Remove in the future. Only for backwards compatibility.\n// Allows for the creation of runnables with properties that will\n// be passed to the agent executor constructor.\nclass AgentRunnableSequence extends _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableSequence {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"streamRunnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"singleAction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromRunnables([first, ...runnables], config) {\n        const sequence = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableSequence.from([first, ...runnables], config.name);\n        sequence.singleAction = config.singleAction;\n        sequence.streamRunnable = config.streamRunnable;\n        return sequence;\n    }\n    static isAgentRunnableSequence(x) {\n        return typeof x.singleAction === \"boolean\";\n    }\n}\n/**\n * Class representing a single-action agent powered by runnables.\n * Extends the BaseSingleActionAgent class and provides methods for\n * planning agent actions with runnables.\n */\nclass RunnableSingleActionAgent extends BaseSingleActionAgent {\n    get inputKeys() {\n        return [];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"runnable\"]\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Whether to stream from the runnable or not.\n         * If true, the underlying LLM is invoked in a streaming fashion to make it\n         * possible to get access to the individual LLM tokens when using\n         * `streamLog` with the Agent Executor. If false then LLM is invoked in a\n         * non-streaming fashion and individual LLM tokens will not be available\n         * in `streamLog`.\n         *\n         * Note that the runnable should still only stream a single action or\n         * finish chunk.\n         */\n        Object.defineProperty(this, \"streamRunnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"defaultRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RunnableAgent\"\n        });\n        this.runnable = fields.runnable;\n        this.defaultRunName =\n            fields.defaultRunName ?? this.runnable.name ?? this.defaultRunName;\n        this.streamRunnable = fields.streamRunnable ?? this.streamRunnable;\n    }\n    async plan(steps, inputs, callbackManager, config) {\n        const combinedInput = { ...inputs, steps };\n        const combinedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n            callbacks: callbackManager,\n            runName: this.defaultRunName,\n        });\n        if (this.streamRunnable) {\n            const stream = await this.runnable.stream(combinedInput, combinedConfig);\n            let finalOutput;\n            for await (const chunk of stream) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    throw new Error([\n                        `Multiple agent actions/finishes received in streamed agent output.`,\n                        `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                    ].join(\"\\n\"));\n                }\n            }\n            if (finalOutput === undefined) {\n                throw new Error([\n                    \"No streaming output received from underlying runnable.\",\n                    `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                ].join(\"\\n\"));\n            }\n            return finalOutput;\n        }\n        else {\n            return this.runnable.invoke(combinedInput, combinedConfig);\n        }\n    }\n}\n/**\n * Class representing a multi-action agent powered by runnables.\n * Extends the BaseMultiActionAgent class and provides methods for\n * planning agent actions with runnables.\n */\nclass RunnableMultiActionAgent extends BaseMultiActionAgent {\n    get inputKeys() {\n        return [];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"runnable\"]\n        });\n        // TODO: Rename input to \"intermediate_steps\"\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"defaultRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RunnableAgent\"\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streamRunnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.runnable = fields.runnable;\n        this.stop = fields.stop;\n        this.defaultRunName =\n            fields.defaultRunName ?? this.runnable.name ?? this.defaultRunName;\n        this.streamRunnable = fields.streamRunnable ?? this.streamRunnable;\n    }\n    async plan(steps, inputs, callbackManager, config) {\n        const combinedInput = { ...inputs, steps };\n        const combinedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n            callbacks: callbackManager,\n            runName: this.defaultRunName,\n        });\n        let output;\n        if (this.streamRunnable) {\n            const stream = await this.runnable.stream(combinedInput, combinedConfig);\n            let finalOutput;\n            for await (const chunk of stream) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    throw new Error([\n                        `Multiple agent actions/finishes received in streamed agent output.`,\n                        `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                    ].join(\"\\n\"));\n                }\n            }\n            if (finalOutput === undefined) {\n                throw new Error([\n                    \"No streaming output received from underlying runnable.\",\n                    `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                ].join(\"\\n\"));\n            }\n            output = finalOutput;\n        }\n        else {\n            output = await this.runnable.invoke(combinedInput, combinedConfig);\n        }\n        if (isAgentAction(output)) {\n            return [output];\n        }\n        return output;\n    }\n}\n/** @deprecated Renamed to RunnableMultiActionAgent. */\nclass RunnableAgent extends RunnableMultiActionAgent {\n}\n/**\n * Class representing a single action agent using a LLMChain in LangChain.\n * Extends the BaseSingleActionAgent class and provides methods for\n * planning agent actions based on LLMChain outputs.\n * @example\n * ```typescript\n * const customPromptTemplate = new CustomPromptTemplate({\n *   tools: [new Calculator()],\n *   inputVariables: [\"input\", \"agent_scratchpad\"],\n * });\n * const customOutputParser = new CustomOutputParser();\n * const agent = new LLMSingleActionAgent({\n *   llmChain: new LLMChain({\n *     prompt: customPromptTemplate,\n *     llm: new ChatOpenAI({ temperature: 0 }),\n *   }),\n *   outputParser: customOutputParser,\n *   stop: [\"\\nObservation\"],\n * });\n * const executor = new AgentExecutor({\n *   agent,\n *   tools: [new Calculator()],\n * });\n * const result = await executor.invoke({\n *   input:\n *     \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\",\n * });\n * ```\n */\nclass LLMSingleActionAgent extends BaseSingleActionAgent {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\"]\n        });\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.stop = input.stop;\n        this.llmChain = input.llmChain;\n        this.outputParser = input.outputParser;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys;\n    }\n    /**\n     * Decide what to do given some input.\n     *\n     * @param steps - Steps the LLM has taken so far, along with observations from each.\n     * @param inputs - User inputs.\n     * @param callbackManager - Callback manager.\n     *\n     * @returns Action specifying what tool to use.\n     */\n    async plan(steps, inputs, callbackManager) {\n        const output = await this.llmChain.call({\n            intermediate_steps: steps,\n            stop: this.stop,\n            ...inputs,\n        }, callbackManager);\n        return this.outputParser.parse(output[this.llmChain.outputKey], callbackManager);\n    }\n}\n/**\n * Class responsible for calling a language model and deciding an action.\n *\n * @remarks This is driven by an LLMChain. The prompt in the LLMChain *must*\n * include a variable called \"agent_scratchpad\" where the agent can put its\n * intermediary work.\n *\n * @deprecated Use {@link https://js.langchain.com/docs/modules/agents/agent_types/ | new agent creation methods}.\n */\nclass Agent extends BaseSingleActionAgent {\n    get allowedTools() {\n        return this._allowedTools;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys.filter((k) => k !== \"agent_scratchpad\");\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_allowedTools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        this.llmChain = input.llmChain;\n        this._allowedTools = input.allowedTools;\n        this.outputParser = input.outputParser;\n    }\n    /**\n     * Get the default output parser for this agent.\n     */\n    static getDefaultOutputParser(_fields) {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Create a prompt for this class\n     *\n     * @param _tools - List of tools the agent will have access to, used to format the prompt.\n     * @param _fields - Additional fields used to format the prompt.\n     *\n     * @returns A PromptTemplate assembled from the given tools and fields.\n     * */\n    static createPrompt(_tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _fields) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Construct an agent from an LLM and a list of tools */\n    static fromLLMAndTools(_llm, _tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _args) {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Validate that appropriate tools are passed in\n     */\n    static validateTools(_tools) { }\n    _stop() {\n        return [`\\n${this.observationPrefix()}`];\n    }\n    /**\n     * Name of tool to use to terminate the chain.\n     */\n    finishToolName() {\n        return \"Final Answer\";\n    }\n    /**\n     * Construct a scratchpad to let the agent continue its thought process\n     */\n    async constructScratchPad(steps) {\n        return steps.reduce((thoughts, { action, observation }) => thoughts +\n            [\n                action.log,\n                `${this.observationPrefix()}${observation}`,\n                this.llmPrefix(),\n            ].join(\"\\n\"), \"\");\n    }\n    async _plan(steps, inputs, suffix, callbackManager) {\n        const thoughts = await this.constructScratchPad(steps);\n        const newInputs = {\n            ...inputs,\n            agent_scratchpad: suffix ? `${thoughts}${suffix}` : thoughts,\n        };\n        if (this._stop().length !== 0) {\n            newInputs.stop = this._stop();\n        }\n        const output = await this.llmChain.predict(newInputs, callbackManager);\n        if (!this.outputParser) {\n            throw new Error(\"Output parser not set\");\n        }\n        return this.outputParser.parse(output, callbackManager);\n    }\n    /**\n     * Decide what to do given some input.\n     *\n     * @param steps - Steps the LLM has taken so far, along with observations from each.\n     * @param inputs - User inputs.\n     * @param callbackManager - Callback manager to use for this call.\n     *\n     * @returns Action specifying what tool to use.\n     */\n    plan(steps, inputs, callbackManager) {\n        return this._plan(steps, inputs, undefined, callbackManager);\n    }\n    /**\n     * Return response when agent has been stopped due to max iterations\n     */\n    async returnStoppedResponse(earlyStoppingMethod, steps, inputs, callbackManager) {\n        if (earlyStoppingMethod === \"force\") {\n            return {\n                returnValues: { output: \"Agent stopped due to max iterations.\" },\n                log: \"\",\n            };\n        }\n        if (earlyStoppingMethod === \"generate\") {\n            try {\n                const action = await this._plan(steps, inputs, \"\\n\\nI now need to return a final answer based on the previous steps:\", callbackManager);\n                if (\"returnValues\" in action) {\n                    return action;\n                }\n                return { returnValues: { output: action.log }, log: action.log };\n            }\n            catch (err) {\n                // fine to use instanceof because we're in the same module\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (!(err instanceof ParseError)) {\n                    throw err;\n                }\n                return { returnValues: { output: err.output }, log: err.output };\n            }\n        }\n        throw new Error(`Invalid stopping method: ${earlyStoppingMethod}`);\n    }\n    /**\n     * Load an agent from a json-like object describing it.\n     */\n    static async deserialize(data) {\n        switch (data._type) {\n            case \"zero-shot-react-description\": {\n                const { ZeroShotAgent } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./mrkl/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\"));\n                return ZeroShotAgent.deserialize(data);\n            }\n            default:\n                throw new Error(\"Unknown agent type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/index.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/index.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAgent: () => (/* binding */ ChatAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/prompt.js\");\n\n\n\n\n\nconst DEFAULT_HUMAN_MESSAGE_TEMPLATE = \"{input}\\n\\n{agent_scratchpad}\";\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain.agents.createStructuredChatAgent.html | createStructuredChatAgent method instead}.\n */\nclass ChatAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_2__.Agent {\n    static lc_name() {\n        return \"ChatAgent\";\n    }\n    constructor(input) {\n        const outputParser = input?.outputParser ?? ChatAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat\"]\n        });\n    }\n    _agentType() {\n        return \"chat-zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    /**\n     * Validates that all tools have descriptions. Throws an error if a tool\n     * without a description is found.\n     * @param tools Array of Tool instances to validate.\n     * @returns void\n     */\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Returns a default output parser for the ChatAgent.\n     * @param _fields Optional OutputParserArgs to customize the output parser.\n     * @returns ChatAgentOutputParser instance\n     */\n    static getDefaultOutputParser(_fields) {\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_3__.ChatAgentOutputParser();\n    }\n    /**\n     * Constructs the agent's scratchpad, which is a string representation of\n     * the agent's previous steps.\n     * @param steps Array of AgentStep instances representing the agent's previous steps.\n     * @returns Promise resolving to a string representing the agent's scratchpad.\n     */\n    async constructScratchPad(steps) {\n        const agentScratchpad = await super.constructScratchPad(steps);\n        if (agentScratchpad) {\n            return `This was your previous work (but I haven't seen any of it! I only see what you return as final answer):\\n${agentScratchpad}`;\n        }\n        return agentScratchpad;\n    }\n    /**\n     * Create prompt in the style of the zero shot agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.humanMessageTemplate - String to use directly as the human message template\n     * @param args.formatInstructions - Formattable string to use as the instructions template\n     */\n    static createPrompt(tools, args) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_4__.PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_4__.SUFFIX, humanMessageTemplate = DEFAULT_HUMAN_MESSAGE_TEMPLATE, formatInstructions = _prompt_js__WEBPACK_IMPORTED_MODULE_4__.FORMAT_INSTRUCTIONS, } = args ?? {};\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const template = [prefix, toolStrings, formatInstructions, suffix].join(\"\\n\\n\");\n        const messages = [\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(template),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(humanMessageTemplate),\n        ];\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\n    }\n    /**\n     * Creates a ChatAgent instance using a language model, tools, and\n     * optional arguments.\n     * @param llm BaseLanguageModelInterface instance to use in the agent.\n     * @param tools Array of Tool instances to include in the agent.\n     * @param args Optional arguments to customize the agent and prompt.\n     * @returns ChatAgent instance\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        ChatAgent.validateTools(tools);\n        const prompt = ChatAgent.createPrompt(tools, args);\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        const outputParser = args?.outputParser ?? ChatAgent.getDefaultOutputParser();\n        return new ChatAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/outputParser.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/outputParser.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAgentOutputParser: () => (/* binding */ ChatAgentOutputParser),\n/* harmony export */   FINAL_ANSWER_ACTION: () => (/* binding */ FINAL_ANSWER_ACTION)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/prompt.js\");\n\n\n\nconst FINAL_ANSWER_ACTION = \"Final Answer:\";\n/**\n * A class that extends the AgentActionOutputParser to parse the output of\n * the ChatAgent in LangChain. It checks if the output text contains the\n * final answer action or a JSON response, and parses it accordingly.\n * @example\n * ```typescript\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\n *     \"ai\",\n *     `{PREFIX}\n * {FORMAT_INSTRUCTIONS}\n * {SUFFIX}`,\n *   ],\n *   [\"human\", \"Question: {input}\"],\n * ]);\n * const runnableAgent = RunnableSequence.from([\n *   {\n *     input: (i: { input: string; steps: AgentStep[] }) => i.input,\n *     agent_scratchpad: (i: { input: string; steps: AgentStep[] }) =>\n *       formatLogToString(i.steps),\n *   },\n *   prompt,\n *   new OpenAI({ temperature: 0 }),\n *   new ChatAgentOutputParser(),\n * ]);\n *\n * const executor = AgentExecutor.fromAgentAndTools({\n *   agent: runnableAgent,\n *   tools: [new SerpAPI(), new Calculator()],\n * });\n *\n * const result = await executor.invoke({\n *   input:\n *     \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\",\n * });\n * ```\n */\nclass ChatAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat\"]\n        });\n    }\n    /**\n     * Parses the output text from the MRKL chain into an agent action or\n     * agent finish. If the text contains the final answer action or does not\n     * contain an action, it returns an AgentFinish with the output and log.\n     * If the text contains a JSON response, it returns the tool, toolInput,\n     * and log.\n     * @param text The output text from the MRKL chain.\n     * @returns An object that satisfies the AgentFinish interface or an object with the tool, toolInput, and log.\n     */\n    async parse(text) {\n        if (text.includes(FINAL_ANSWER_ACTION) || !text.includes(`\"action\":`)) {\n            const parts = text.split(FINAL_ANSWER_ACTION);\n            const output = parts[parts.length - 1].trim();\n            return { returnValues: { output }, log: text };\n        }\n        const action = text.includes(\"```\")\n            ? text.trim().split(/```(?:json)?/)[1]\n            : text.trim();\n        try {\n            const response = JSON.parse(action.trim());\n            return {\n                tool: response.action,\n                toolInput: response.action_input,\n                log: text,\n            };\n        }\n        catch {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Unable to parse JSON response from chat agent.\\n\\n${text}`);\n        }\n    }\n    /**\n     * Returns the format instructions used in the output parser for the\n     * ChatAgent class.\n     * @returns The format instructions as a string.\n     */\n    getFormatInstructions() {\n        return _prompt_js__WEBPACK_IMPORTED_MODULE_2__.FORMAT_INSTRUCTIONS;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvY2hhdC9vdXRwdXRQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUU7QUFDakI7QUFDSjtBQUMzQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxJQUFJO0FBQ0osSUFBSSxPQUFPO0FBQ1g7QUFDQSwyQkFBMkIsTUFBTTtBQUNqQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZUFBZSxvQkFBb0I7QUFDdkQsK0JBQStCLGVBQWUsb0JBQW9CO0FBQ2xFO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPLG9DQUFvQyw4REFBdUI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixnQkFBZ0IsUUFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpRkFBcUIsc0RBQXNELEtBQUs7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkRBQW1CO0FBQ2xDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2NoYXQvb3V0cHV0UGFyc2VyLmpzP2M4NzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3V0cHV0UGFyc2VyRXhjZXB0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuaW1wb3J0IHsgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi4vdHlwZXMuanNcIjtcbmltcG9ydCB7IEZPUk1BVF9JTlNUUlVDVElPTlMgfSBmcm9tIFwiLi9wcm9tcHQuanNcIjtcbmV4cG9ydCBjb25zdCBGSU5BTF9BTlNXRVJfQUNUSU9OID0gXCJGaW5hbCBBbnN3ZXI6XCI7XG4vKipcbiAqIEEgY2xhc3MgdGhhdCBleHRlbmRzIHRoZSBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB0byBwYXJzZSB0aGUgb3V0cHV0IG9mXG4gKiB0aGUgQ2hhdEFnZW50IGluIExhbmdDaGFpbi4gSXQgY2hlY2tzIGlmIHRoZSBvdXRwdXQgdGV4dCBjb250YWlucyB0aGVcbiAqIGZpbmFsIGFuc3dlciBhY3Rpb24gb3IgYSBKU09OIHJlc3BvbnNlLCBhbmQgcGFyc2VzIGl0IGFjY29yZGluZ2x5LlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IHByb21wdCA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tTWVzc2FnZXMoW1xuICogICBbXG4gKiAgICAgXCJhaVwiLFxuICogICAgIGB7UFJFRklYfVxuICoge0ZPUk1BVF9JTlNUUlVDVElPTlN9XG4gKiB7U1VGRklYfWAsXG4gKiAgIF0sXG4gKiAgIFtcImh1bWFuXCIsIFwiUXVlc3Rpb246IHtpbnB1dH1cIl0sXG4gKiBdKTtcbiAqIGNvbnN0IHJ1bm5hYmxlQWdlbnQgPSBSdW5uYWJsZVNlcXVlbmNlLmZyb20oW1xuICogICB7XG4gKiAgICAgaW5wdXQ6IChpOiB7IGlucHV0OiBzdHJpbmc7IHN0ZXBzOiBBZ2VudFN0ZXBbXSB9KSA9PiBpLmlucHV0LFxuICogICAgIGFnZW50X3NjcmF0Y2hwYWQ6IChpOiB7IGlucHV0OiBzdHJpbmc7IHN0ZXBzOiBBZ2VudFN0ZXBbXSB9KSA9PlxuICogICAgICAgZm9ybWF0TG9nVG9TdHJpbmcoaS5zdGVwcyksXG4gKiAgIH0sXG4gKiAgIHByb21wdCxcbiAqICAgbmV3IE9wZW5BSSh7IHRlbXBlcmF0dXJlOiAwIH0pLFxuICogICBuZXcgQ2hhdEFnZW50T3V0cHV0UGFyc2VyKCksXG4gKiBdKTtcbiAqXG4gKiBjb25zdCBleGVjdXRvciA9IEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICogICBhZ2VudDogcnVubmFibGVBZ2VudCxcbiAqICAgdG9vbHM6IFtuZXcgU2VycEFQSSgpLCBuZXcgQ2FsY3VsYXRvcigpXSxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGV4ZWN1dG9yLmludm9rZSh7XG4gKiAgIGlucHV0OlxuICogICAgIFwiV2hvIGlzIE9saXZpYSBXaWxkZSdzIGJveWZyaWVuZD8gV2hhdCBpcyBoaXMgY3VycmVudCBhZ2UgcmFpc2VkIHRvIHRoZSAwLjIzIHBvd2VyP1wiLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIENoYXRBZ2VudE91dHB1dFBhcnNlciBleHRlbmRzIEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5cIiwgXCJhZ2VudHNcIiwgXCJjaGF0XCJdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgdGhlIG91dHB1dCB0ZXh0IGZyb20gdGhlIE1SS0wgY2hhaW4gaW50byBhbiBhZ2VudCBhY3Rpb24gb3JcbiAgICAgKiBhZ2VudCBmaW5pc2guIElmIHRoZSB0ZXh0IGNvbnRhaW5zIHRoZSBmaW5hbCBhbnN3ZXIgYWN0aW9uIG9yIGRvZXMgbm90XG4gICAgICogY29udGFpbiBhbiBhY3Rpb24sIGl0IHJldHVybnMgYW4gQWdlbnRGaW5pc2ggd2l0aCB0aGUgb3V0cHV0IGFuZCBsb2cuXG4gICAgICogSWYgdGhlIHRleHQgY29udGFpbnMgYSBKU09OIHJlc3BvbnNlLCBpdCByZXR1cm5zIHRoZSB0b29sLCB0b29sSW5wdXQsXG4gICAgICogYW5kIGxvZy5cbiAgICAgKiBAcGFyYW0gdGV4dCBUaGUgb3V0cHV0IHRleHQgZnJvbSB0aGUgTVJLTCBjaGFpbi5cbiAgICAgKiBAcmV0dXJucyBBbiBvYmplY3QgdGhhdCBzYXRpc2ZpZXMgdGhlIEFnZW50RmluaXNoIGludGVyZmFjZSBvciBhbiBvYmplY3Qgd2l0aCB0aGUgdG9vbCwgdG9vbElucHV0LCBhbmQgbG9nLlxuICAgICAqL1xuICAgIGFzeW5jIHBhcnNlKHRleHQpIHtcbiAgICAgICAgaWYgKHRleHQuaW5jbHVkZXMoRklOQUxfQU5TV0VSX0FDVElPTikgfHwgIXRleHQuaW5jbHVkZXMoYFwiYWN0aW9uXCI6YCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnRzID0gdGV4dC5zcGxpdChGSU5BTF9BTlNXRVJfQUNUSU9OKTtcbiAgICAgICAgICAgIGNvbnN0IG91dHB1dCA9IHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdLnRyaW0oKTtcbiAgICAgICAgICAgIHJldHVybiB7IHJldHVyblZhbHVlczogeyBvdXRwdXQgfSwgbG9nOiB0ZXh0IH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWN0aW9uID0gdGV4dC5pbmNsdWRlcyhcImBgYFwiKVxuICAgICAgICAgICAgPyB0ZXh0LnRyaW0oKS5zcGxpdCgvYGBgKD86anNvbik/LylbMV1cbiAgICAgICAgICAgIDogdGV4dC50cmltKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IEpTT04ucGFyc2UoYWN0aW9uLnRyaW0oKSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHRvb2w6IHJlc3BvbnNlLmFjdGlvbixcbiAgICAgICAgICAgICAgICB0b29sSW5wdXQ6IHJlc3BvbnNlLmFjdGlvbl9pbnB1dCxcbiAgICAgICAgICAgICAgICBsb2c6IHRleHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBPdXRwdXRQYXJzZXJFeGNlcHRpb24oYFVuYWJsZSB0byBwYXJzZSBKU09OIHJlc3BvbnNlIGZyb20gY2hhdCBhZ2VudC5cXG5cXG4ke3RleHR9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgZm9ybWF0IGluc3RydWN0aW9ucyB1c2VkIGluIHRoZSBvdXRwdXQgcGFyc2VyIGZvciB0aGVcbiAgICAgKiBDaGF0QWdlbnQgY2xhc3MuXG4gICAgICogQHJldHVybnMgVGhlIGZvcm1hdCBpbnN0cnVjdGlvbnMgYXMgYSBzdHJpbmcuXG4gICAgICovXG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICByZXR1cm4gRk9STUFUX0lOU1RSVUNUSU9OUztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/prompt.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/prompt.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `Answer the following questions as best you can. You have access to the following tools:`;\nconst FORMAT_INSTRUCTIONS = `The way you use the tools is by specifying a json blob, denoted below by $JSON_BLOB\nSpecifically, this $JSON_BLOB should have a \"action\" key (with the name of the tool to use) and a \"action_input\" key (with the input to the tool going here). \nThe $JSON_BLOB should only contain a SINGLE action, do NOT return a list of multiple actions. Here is an example of a valid $JSON_BLOB:\n\n\\`\\`\\`\n{{\n  \"action\": \"calculator\",\n  \"action_input\": \"1 + 2\"\n}}\n\\`\\`\\`\n\nALWAYS use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: \n\\`\\`\\`\n$JSON_BLOB\n\\`\\`\\`\nObservation: the result of the action\n... (this Thought/Action/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\nconst SUFFIX = `Begin! Reminder to always use the exact characters \\`Final Answer\\` when responding.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvY2hhdC9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87QUFDQTtBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2NoYXQvcHJvbXB0LmpzPzQyNmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBSRUZJWCA9IGBBbnN3ZXIgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnMgYXMgYmVzdCB5b3UgY2FuLiBZb3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZvbGxvd2luZyB0b29sczpgO1xuZXhwb3J0IGNvbnN0IEZPUk1BVF9JTlNUUlVDVElPTlMgPSBgVGhlIHdheSB5b3UgdXNlIHRoZSB0b29scyBpcyBieSBzcGVjaWZ5aW5nIGEganNvbiBibG9iLCBkZW5vdGVkIGJlbG93IGJ5ICRKU09OX0JMT0JcblNwZWNpZmljYWxseSwgdGhpcyAkSlNPTl9CTE9CIHNob3VsZCBoYXZlIGEgXCJhY3Rpb25cIiBrZXkgKHdpdGggdGhlIG5hbWUgb2YgdGhlIHRvb2wgdG8gdXNlKSBhbmQgYSBcImFjdGlvbl9pbnB1dFwiIGtleSAod2l0aCB0aGUgaW5wdXQgdG8gdGhlIHRvb2wgZ29pbmcgaGVyZSkuIFxuVGhlICRKU09OX0JMT0Igc2hvdWxkIG9ubHkgY29udGFpbiBhIFNJTkdMRSBhY3Rpb24sIGRvIE5PVCByZXR1cm4gYSBsaXN0IG9mIG11bHRpcGxlIGFjdGlvbnMuIEhlcmUgaXMgYW4gZXhhbXBsZSBvZiBhIHZhbGlkICRKU09OX0JMT0I6XG5cblxcYFxcYFxcYFxue3tcbiAgXCJhY3Rpb25cIjogXCJjYWxjdWxhdG9yXCIsXG4gIFwiYWN0aW9uX2lucHV0XCI6IFwiMSArIDJcIlxufX1cblxcYFxcYFxcYFxuXG5BTFdBWVMgdXNlIHRoZSBmb2xsb3dpbmcgZm9ybWF0OlxuXG5RdWVzdGlvbjogdGhlIGlucHV0IHF1ZXN0aW9uIHlvdSBtdXN0IGFuc3dlclxuVGhvdWdodDogeW91IHNob3VsZCBhbHdheXMgdGhpbmsgYWJvdXQgd2hhdCB0byBkb1xuQWN0aW9uOiBcblxcYFxcYFxcYFxuJEpTT05fQkxPQlxuXFxgXFxgXFxgXG5PYnNlcnZhdGlvbjogdGhlIHJlc3VsdCBvZiB0aGUgYWN0aW9uXG4uLi4gKHRoaXMgVGhvdWdodC9BY3Rpb24vT2JzZXJ2YXRpb24gY2FuIHJlcGVhdCBOIHRpbWVzKVxuVGhvdWdodDogSSBub3cga25vdyB0aGUgZmluYWwgYW5zd2VyXG5GaW5hbCBBbnN3ZXI6IHRoZSBmaW5hbCBhbnN3ZXIgdG8gdGhlIG9yaWdpbmFsIGlucHV0IHF1ZXN0aW9uYDtcbmV4cG9ydCBjb25zdCBTVUZGSVggPSBgQmVnaW4hIFJlbWluZGVyIHRvIGFsd2F5cyB1c2UgdGhlIGV4YWN0IGNoYXJhY3RlcnMgXFxgRmluYWwgQW5zd2VyXFxgIHdoZW4gcmVzcG9uZGluZy5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/index.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/index.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatConversationalAgent: () => (/* binding */ ChatConversationalAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/prompt.js\");\n\n\n\n\n\n\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain.agents.createStructuredChatAgent.html | createStructuredChatAgent method instead}.\n */\nclass ChatConversationalAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_3__.Agent {\n    static lc_name() {\n        return \"ChatConversationalAgent\";\n    }\n    constructor(input) {\n        const outputParser = input.outputParser ?? ChatConversationalAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n    }\n    _agentType() {\n        return \"chat-conversational-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Constructs the agent scratchpad based on the agent steps. It returns an\n     * array of base messages representing the thoughts of the agent.\n     * @param steps The agent steps to construct the scratchpad from.\n     * @returns An array of base messages representing the thoughts of the agent.\n     */\n    async constructScratchPad(steps) {\n        const thoughts = [];\n        for (const step of steps) {\n            thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.AIMessage(step.action.log));\n            thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage((0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.TEMPLATE_TOOL_RESPONSE, \"f-string\", {\n                observation: step.observation,\n            })));\n        }\n        return thoughts;\n    }\n    /**\n     * Returns the default output parser for the ChatConversationalAgent\n     * class. It takes optional fields as arguments to customize the output\n     * parser.\n     * @param fields Optional fields to customize the output parser.\n     * @returns The default output parser for the ChatConversationalAgent class.\n     */\n    static getDefaultOutputParser(fields) {\n        if (fields?.llm) {\n            return _outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ChatConversationalAgentOutputParserWithRetries.fromLLM(fields.llm, {\n                toolNames: fields.toolNames,\n            });\n        }\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ChatConversationalAgentOutputParserWithRetries({\n            toolNames: fields?.toolNames,\n        });\n    }\n    /**\n     * Create prompt in the style of the ChatConversationAgent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.systemMessage - String to put before the list of tools.\n     * @param args.humanMessage - String to put after the list of tools.\n     * @param args.outputParser - Output parser to use for formatting.\n     */\n    static createPrompt(tools, args) {\n        const systemMessage = (args?.systemMessage ?? _prompt_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_PREFIX) + _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PREFIX_END;\n        const humanMessage = args?.humanMessage ?? _prompt_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_SUFFIX;\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const toolNames = tools.map((tool) => tool.name);\n        const outputParser = args?.outputParser ??\n            ChatConversationalAgent.getDefaultOutputParser({ toolNames });\n        const formatInstructions = outputParser.getFormatInstructions({\n            toolNames,\n        });\n        const renderedHumanMessage = (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(humanMessage, \"f-string\", {\n            format_instructions: formatInstructions,\n            tools: toolStrings,\n        });\n        const messages = [\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(systemMessage),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.MessagesPlaceholder(\"chat_history\"),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(renderedHumanMessage),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.MessagesPlaceholder(\"agent_scratchpad\"),\n        ];\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\n    }\n    /**\n     * Creates an instance of the ChatConversationalAgent class from a\n     * BaseLanguageModel and a set of tools. It takes optional arguments to\n     * customize the agent.\n     * @param llm The BaseLanguageModel to create the agent from.\n     * @param tools The set of tools to create the agent from.\n     * @param args Optional arguments to customize the agent.\n     * @returns An instance of the ChatConversationalAgent class.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        ChatConversationalAgent.validateTools(tools);\n        const outputParser = args?.outputParser ??\n            ChatConversationalAgent.getDefaultOutputParser({\n                llm,\n                toolNames: tools.map((tool) => tool.name),\n            });\n        const prompt = ChatConversationalAgent.createPrompt(tools, {\n            ...args,\n            outputParser,\n        });\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        return new ChatConversationalAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/outputParser.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/outputParser.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatConversationalAgentOutputParser: () => (/* binding */ ChatConversationalAgentOutputParser),\n/* harmony export */   ChatConversationalAgentOutputParserWithRetries: () => (/* binding */ ChatConversationalAgentOutputParserWithRetries)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/prompt.js\");\n/* harmony import */ var _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../output_parsers/fix.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/fix.js\");\n\n\n\n\n\n/**\n * Class that represents an output parser for the ChatConversationalAgent\n * class. It extends the AgentActionOutputParser class and provides\n * methods for parsing the output of the MRKL chain into agent actions.\n */\nclass ChatConversationalAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    /**\n     * Parses the given text into an AgentAction or AgentFinish object. If an\n     * output fixing parser is defined, uses it to parse the text.\n     * @param text Text to parse.\n     * @returns Promise that resolves to an AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        let jsonOutput = text.trim();\n        if (jsonOutput.includes(\"```json\") || jsonOutput.includes(\"```\")) {\n            const testString = jsonOutput.includes(\"```json\") ? \"```json\" : \"```\";\n            const firstIndex = jsonOutput.indexOf(testString);\n            const actionInputIndex = jsonOutput.indexOf(\"action_input\");\n            if (actionInputIndex > firstIndex) {\n                jsonOutput = jsonOutput\n                    .slice(firstIndex + testString.length)\n                    .trimStart();\n                const lastIndex = jsonOutput.lastIndexOf(\"```\");\n                if (lastIndex !== -1) {\n                    jsonOutput = jsonOutput.slice(0, lastIndex).trimEnd();\n                }\n            }\n        }\n        try {\n            const response = JSON.parse(jsonOutput);\n            const { action, action_input } = response;\n            if (action === \"Final Answer\") {\n                return { returnValues: { output: action_input }, log: text };\n            }\n            return { tool: action, toolInput: action_input, log: text };\n        }\n        catch (e) {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n        }\n    }\n    /**\n     * Returns the format instructions as a string. If the 'raw' option is\n     * true, returns the raw FORMAT_INSTRUCTIONS.\n     * @param options Options for getting the format instructions.\n     * @returns Format instructions as a string.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\n/**\n * Class that represents an output parser with retries for the\n * ChatConversationalAgent class. It extends the AgentActionOutputParser\n * class and provides methods for parsing the output of the MRKL chain\n * into agent actions with retry functionality.\n */\nclass ChatConversationalAgentOutputParserWithRetries extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n        Object.defineProperty(this, \"baseParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputFixingParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.toolNames = fields.toolNames ?? this.toolNames;\n        this.baseParser =\n            fields?.baseParser ??\n                new ChatConversationalAgentOutputParser({ toolNames: this.toolNames });\n        this.outputFixingParser = fields?.outputFixingParser;\n    }\n    /**\n     * Returns the format instructions as a string.\n     * @returns Format instructions as a string.\n     */\n    getFormatInstructions(options) {\n        if (options.raw) {\n            return _prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS;\n        }\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: options.toolNames.join(\", \"),\n        });\n    }\n    /**\n     * Parses the given text into an AgentAction or AgentFinish object.\n     * @param text Text to parse.\n     * @returns Promise that resolves to an AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        if (this.outputFixingParser !== undefined) {\n            return this.outputFixingParser.parse(text);\n        }\n        return this.baseParser.parse(text);\n    }\n    /**\n     * Static method to create a new\n     * ChatConversationalAgentOutputParserWithRetries from a BaseLanguageModelInterface\n     * and options. If no base parser is provided in the options, a new\n     * ChatConversationalAgentOutputParser is created. An OutputFixingParser\n     * is also created from the BaseLanguageModelInterface and the base parser.\n     * @param llm BaseLanguageModelInterface instance used to create the OutputFixingParser.\n     * @param options Options for creating the ChatConversationalAgentOutputParserWithRetries instance.\n     * @returns A new instance of ChatConversationalAgentOutputParserWithRetries.\n     */\n    static fromLLM(llm, options) {\n        const baseParser = options.baseParser ??\n            new ChatConversationalAgentOutputParser({\n                toolNames: options.toolNames ?? [],\n            });\n        const outputFixingParser = _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__.OutputFixingParser.fromLLM(llm, baseParser);\n        return new ChatConversationalAgentOutputParserWithRetries({\n            baseParser,\n            outputFixingParser,\n            toolNames: options.toolNames,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/prompt.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/prompt.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_PREFIX: () => (/* binding */ DEFAULT_PREFIX),\n/* harmony export */   DEFAULT_SUFFIX: () => (/* binding */ DEFAULT_SUFFIX),\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX_END: () => (/* binding */ PREFIX_END),\n/* harmony export */   TEMPLATE_TOOL_RESPONSE: () => (/* binding */ TEMPLATE_TOOL_RESPONSE)\n/* harmony export */ });\nconst DEFAULT_PREFIX = `Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful system that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.`;\nconst PREFIX_END = ` However, above all else, all responses must adhere to the format of RESPONSE FORMAT INSTRUCTIONS.`;\nconst FORMAT_INSTRUCTIONS = `RESPONSE FORMAT INSTRUCTIONS\n----------------------------\n\nOutput a JSON markdown code snippet containing a valid JSON object in one of two formats:\n\n**Option 1:**\nUse this if you want the human to use a tool.\nMarkdown code snippet formatted in the following schema:\n\n\\`\\`\\`json\n{{{{\n    \"action\": string, // The action to take. Must be one of [{tool_names}]\n    \"action_input\": string // The input to the action. May be a stringified object.\n}}}}\n\\`\\`\\`\n\n**Option #2:**\nUse this if you want to respond directly and conversationally to the human. Markdown code snippet formatted in the following schema:\n\n\\`\\`\\`json\n{{{{\n    \"action\": \"Final Answer\",\n    \"action_input\": string // You should put what you want to return to user here and make sure to use valid json newline characters.\n}}}}\n\\`\\`\\`\n\nFor both options, remember to always include the surrounding markdown code snippet delimiters (begin with \"\\`\\`\\`json\" and end with \"\\`\\`\\`\")!\n`;\nconst DEFAULT_SUFFIX = `TOOLS\n------\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\n\n{tools}\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\n\n{{input}}`;\nconst TEMPLATE_TOOL_RESPONSE = `TOOL RESPONSE:\n---------------------\n{observation}\n\nUSER'S INPUT\n--------------------\n\nOkay, so what is the response to my last comment? If using information obtained from the tools you must mention it explicitly without mentioning the tool names - I have forgotten all TOOL RESPONSES! Remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvY2hhdF9jb252by9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTzs7QUFFUDs7QUFFQTs7QUFFQTtBQUNPO0FBQ0E7QUFDUDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhEQUE4RCxXQUFXO0FBQ3pFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ087QUFDUDtBQUNBOztBQUVBLENBQUM7O0FBRUQsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxPQUFPO0FBQ0Y7QUFDUDtBQUNBLENBQUM7O0FBRUQ7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvY2hhdF9jb252by9wcm9tcHQuanM/Mzc3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgREVGQVVMVF9QUkVGSVggPSBgQXNzaXN0YW50IGlzIGEgbGFyZ2UgbGFuZ3VhZ2UgbW9kZWwgdHJhaW5lZCBieSBPcGVuQUkuXG5cbkFzc2lzdGFudCBpcyBkZXNpZ25lZCB0byBiZSBhYmxlIHRvIGFzc2lzdCB3aXRoIGEgd2lkZSByYW5nZSBvZiB0YXNrcywgZnJvbSBhbnN3ZXJpbmcgc2ltcGxlIHF1ZXN0aW9ucyB0byBwcm92aWRpbmcgaW4tZGVwdGggZXhwbGFuYXRpb25zIGFuZCBkaXNjdXNzaW9ucyBvbiBhIHdpZGUgcmFuZ2Ugb2YgdG9waWNzLiBBcyBhIGxhbmd1YWdlIG1vZGVsLCBBc3Npc3RhbnQgaXMgYWJsZSB0byBnZW5lcmF0ZSBodW1hbi1saWtlIHRleHQgYmFzZWQgb24gdGhlIGlucHV0IGl0IHJlY2VpdmVzLCBhbGxvd2luZyBpdCB0byBlbmdhZ2UgaW4gbmF0dXJhbC1zb3VuZGluZyBjb252ZXJzYXRpb25zIGFuZCBwcm92aWRlIHJlc3BvbnNlcyB0aGF0IGFyZSBjb2hlcmVudCBhbmQgcmVsZXZhbnQgdG8gdGhlIHRvcGljIGF0IGhhbmQuXG5cbkFzc2lzdGFudCBpcyBjb25zdGFudGx5IGxlYXJuaW5nIGFuZCBpbXByb3ZpbmcsIGFuZCBpdHMgY2FwYWJpbGl0aWVzIGFyZSBjb25zdGFudGx5IGV2b2x2aW5nLiBJdCBpcyBhYmxlIHRvIHByb2Nlc3MgYW5kIHVuZGVyc3RhbmQgbGFyZ2UgYW1vdW50cyBvZiB0ZXh0LCBhbmQgY2FuIHVzZSB0aGlzIGtub3dsZWRnZSB0byBwcm92aWRlIGFjY3VyYXRlIGFuZCBpbmZvcm1hdGl2ZSByZXNwb25zZXMgdG8gYSB3aWRlIHJhbmdlIG9mIHF1ZXN0aW9ucy4gQWRkaXRpb25hbGx5LCBBc3Npc3RhbnQgaXMgYWJsZSB0byBnZW5lcmF0ZSBpdHMgb3duIHRleHQgYmFzZWQgb24gdGhlIGlucHV0IGl0IHJlY2VpdmVzLCBhbGxvd2luZyBpdCB0byBlbmdhZ2UgaW4gZGlzY3Vzc2lvbnMgYW5kIHByb3ZpZGUgZXhwbGFuYXRpb25zIGFuZCBkZXNjcmlwdGlvbnMgb24gYSB3aWRlIHJhbmdlIG9mIHRvcGljcy5cblxuT3ZlcmFsbCwgQXNzaXN0YW50IGlzIGEgcG93ZXJmdWwgc3lzdGVtIHRoYXQgY2FuIGhlbHAgd2l0aCBhIHdpZGUgcmFuZ2Ugb2YgdGFza3MgYW5kIHByb3ZpZGUgdmFsdWFibGUgaW5zaWdodHMgYW5kIGluZm9ybWF0aW9uIG9uIGEgd2lkZSByYW5nZSBvZiB0b3BpY3MuIFdoZXRoZXIgeW91IG5lZWQgaGVscCB3aXRoIGEgc3BlY2lmaWMgcXVlc3Rpb24gb3IganVzdCB3YW50IHRvIGhhdmUgYSBjb252ZXJzYXRpb24gYWJvdXQgYSBwYXJ0aWN1bGFyIHRvcGljLCBBc3Npc3RhbnQgaXMgaGVyZSB0byBhc3Npc3QuYDtcbmV4cG9ydCBjb25zdCBQUkVGSVhfRU5EID0gYCBIb3dldmVyLCBhYm92ZSBhbGwgZWxzZSwgYWxsIHJlc3BvbnNlcyBtdXN0IGFkaGVyZSB0byB0aGUgZm9ybWF0IG9mIFJFU1BPTlNFIEZPUk1BVCBJTlNUUlVDVElPTlMuYDtcbmV4cG9ydCBjb25zdCBGT1JNQVRfSU5TVFJVQ1RJT05TID0gYFJFU1BPTlNFIEZPUk1BVCBJTlNUUlVDVElPTlNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuT3V0cHV0IGEgSlNPTiBtYXJrZG93biBjb2RlIHNuaXBwZXQgY29udGFpbmluZyBhIHZhbGlkIEpTT04gb2JqZWN0IGluIG9uZSBvZiB0d28gZm9ybWF0czpcblxuKipPcHRpb24gMToqKlxuVXNlIHRoaXMgaWYgeW91IHdhbnQgdGhlIGh1bWFuIHRvIHVzZSBhIHRvb2wuXG5NYXJrZG93biBjb2RlIHNuaXBwZXQgZm9ybWF0dGVkIGluIHRoZSBmb2xsb3dpbmcgc2NoZW1hOlxuXG5cXGBcXGBcXGBqc29uXG57e3t7XG4gICAgXCJhY3Rpb25cIjogc3RyaW5nLCAvLyBUaGUgYWN0aW9uIHRvIHRha2UuIE11c3QgYmUgb25lIG9mIFt7dG9vbF9uYW1lc31dXG4gICAgXCJhY3Rpb25faW5wdXRcIjogc3RyaW5nIC8vIFRoZSBpbnB1dCB0byB0aGUgYWN0aW9uLiBNYXkgYmUgYSBzdHJpbmdpZmllZCBvYmplY3QuXG59fX19XG5cXGBcXGBcXGBcblxuKipPcHRpb24gIzI6KipcblVzZSB0aGlzIGlmIHlvdSB3YW50IHRvIHJlc3BvbmQgZGlyZWN0bHkgYW5kIGNvbnZlcnNhdGlvbmFsbHkgdG8gdGhlIGh1bWFuLiBNYXJrZG93biBjb2RlIHNuaXBwZXQgZm9ybWF0dGVkIGluIHRoZSBmb2xsb3dpbmcgc2NoZW1hOlxuXG5cXGBcXGBcXGBqc29uXG57e3t7XG4gICAgXCJhY3Rpb25cIjogXCJGaW5hbCBBbnN3ZXJcIixcbiAgICBcImFjdGlvbl9pbnB1dFwiOiBzdHJpbmcgLy8gWW91IHNob3VsZCBwdXQgd2hhdCB5b3Ugd2FudCB0byByZXR1cm4gdG8gdXNlciBoZXJlIGFuZCBtYWtlIHN1cmUgdG8gdXNlIHZhbGlkIGpzb24gbmV3bGluZSBjaGFyYWN0ZXJzLlxufX19fVxuXFxgXFxgXFxgXG5cbkZvciBib3RoIG9wdGlvbnMsIHJlbWVtYmVyIHRvIGFsd2F5cyBpbmNsdWRlIHRoZSBzdXJyb3VuZGluZyBtYXJrZG93biBjb2RlIHNuaXBwZXQgZGVsaW1pdGVycyAoYmVnaW4gd2l0aCBcIlxcYFxcYFxcYGpzb25cIiBhbmQgZW5kIHdpdGggXCJcXGBcXGBcXGBcIikhXG5gO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfU1VGRklYID0gYFRPT0xTXG4tLS0tLS1cbkFzc2lzdGFudCBjYW4gYXNrIHRoZSB1c2VyIHRvIHVzZSB0b29scyB0byBsb29rIHVwIGluZm9ybWF0aW9uIHRoYXQgbWF5IGJlIGhlbHBmdWwgaW4gYW5zd2VyaW5nIHRoZSB1c2VycyBvcmlnaW5hbCBxdWVzdGlvbi4gVGhlIHRvb2xzIHRoZSBodW1hbiBjYW4gdXNlIGFyZTpcblxue3Rvb2xzfVxuXG57Zm9ybWF0X2luc3RydWN0aW9uc31cblxuVVNFUidTIElOUFVUXG4tLS0tLS0tLS0tLS0tLS0tLS0tLVxuSGVyZSBpcyB0aGUgdXNlcidzIGlucHV0IChyZW1lbWJlciB0byByZXNwb25kIHdpdGggYSBtYXJrZG93biBjb2RlIHNuaXBwZXQgb2YgYSBqc29uIGJsb2Igd2l0aCBhIHNpbmdsZSBhY3Rpb24sIGFuZCBOT1RISU5HIGVsc2UpOlxuXG57e2lucHV0fX1gO1xuZXhwb3J0IGNvbnN0IFRFTVBMQVRFX1RPT0xfUkVTUE9OU0UgPSBgVE9PTCBSRVNQT05TRTpcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLVxue29ic2VydmF0aW9ufVxuXG5VU0VSJ1MgSU5QVVRcbi0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbk9rYXksIHNvIHdoYXQgaXMgdGhlIHJlc3BvbnNlIHRvIG15IGxhc3QgY29tbWVudD8gSWYgdXNpbmcgaW5mb3JtYXRpb24gb2J0YWluZWQgZnJvbSB0aGUgdG9vbHMgeW91IG11c3QgbWVudGlvbiBpdCBleHBsaWNpdGx5IHdpdGhvdXQgbWVudGlvbmluZyB0aGUgdG9vbCBuYW1lcyAtIEkgaGF2ZSBmb3Jnb3R0ZW4gYWxsIFRPT0wgUkVTUE9OU0VTISBSZW1lbWJlciB0byByZXNwb25kIHdpdGggYSBtYXJrZG93biBjb2RlIHNuaXBwZXQgb2YgYSBqc29uIGJsb2Igd2l0aCBhIHNpbmdsZSBhY3Rpb24sIGFuZCBOT1RISU5HIGVsc2UuYDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js ***!
  \****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentExecutor: () => (/* binding */ AgentExecutor),\n/* harmony export */   AgentExecutorIterator: () => (/* binding */ AgentExecutorIterator),\n/* harmony export */   ExceptionTool: () => (/* binding */ ExceptionTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/callbacks/manager */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/callbacks/manager.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _chains_base_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chains/base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\");\n\n\n\n\n\n\n\nclass AgentExecutorIterator extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_4__.Serializable {\n    get finalOutputs() {\n        return this._finalOutputs;\n    }\n    /** Intended to be used as a setter method, needs to be async. */\n    async setFinalOutputs(value) {\n        this._finalOutputs = undefined;\n        if (value) {\n            const preparedOutputs = await this.agentExecutor.prepOutputs(this.inputs, value, true);\n            this._finalOutputs = preparedOutputs;\n        }\n    }\n    get nameToToolMap() {\n        const toolMap = this.agentExecutor.tools.map((tool) => ({\n            [tool.name]: tool,\n        }));\n        return Object.assign({}, ...toolMap);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"executor_iterator\"]\n        });\n        Object.defineProperty(this, \"agentExecutor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"runName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_finalOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"intermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"iterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        this.agentExecutor = fields.agentExecutor;\n        this.inputs = fields.inputs;\n        this.callbacks = fields.callbacks;\n        this.tags = fields.tags;\n        this.metadata = fields.metadata;\n        this.runName = fields.runName;\n        this.runManager = fields.runManager;\n        this.config = fields.config;\n    }\n    /**\n     * Reset the iterator to its initial state, clearing intermediate steps,\n     * iterations, and the final output.\n     */\n    reset() {\n        this.intermediateSteps = [];\n        this.iterations = 0;\n        this._finalOutputs = undefined;\n    }\n    updateIterations() {\n        this.iterations += 1;\n    }\n    async *streamIterator() {\n        this.reset();\n        // Loop to handle iteration\n        while (true) {\n            try {\n                if (this.iterations === 0) {\n                    await this.onFirstStep();\n                }\n                const result = await this._callNext();\n                yield result;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                if (\"message\" in e &&\n                    e.message.startsWith(\"Final outputs already reached: \")) {\n                    if (!this.finalOutputs) {\n                        throw e;\n                    }\n                    return this.finalOutputs;\n                }\n                if (this.runManager) {\n                    await this.runManager.handleChainError(e);\n                }\n                throw e;\n            }\n        }\n    }\n    /**\n     * Perform any necessary setup for the first step\n     * of the asynchronous iterator.\n     */\n    async onFirstStep() {\n        if (this.iterations === 0) {\n            const callbackManager = await _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_2__.CallbackManager.configure(this.callbacks ?? this.config?.callbacks, this.agentExecutor.callbacks, this.tags ?? this.config?.tags, this.agentExecutor.tags, this.metadata ?? this.config?.metadata, this.agentExecutor.metadata, {\n                verbose: this.agentExecutor.verbose,\n            });\n            this.runManager = await callbackManager?.handleChainStart(this.agentExecutor.toJSON(), this.inputs, this.config?.runId, undefined, this.tags ?? this.config?.tags, this.metadata ?? this.config?.metadata, this.runName ?? this.config?.runName);\n            if (this.config !== undefined) {\n                delete this.config.runId;\n            }\n        }\n    }\n    /**\n     * Execute the next step in the chain using the\n     * AgentExecutor's _takeNextStep method.\n     */\n    async _executeNextStep(runManager) {\n        return this.agentExecutor._takeNextStep(this.nameToToolMap, this.inputs, this.intermediateSteps, runManager, this.config);\n    }\n    /**\n     * Process the output of the next step,\n     * handling AgentFinish and tool return cases.\n     */\n    async _processNextStepOutput(nextStepOutput, runManager) {\n        if (\"returnValues\" in nextStepOutput) {\n            const output = await this.agentExecutor._return(nextStepOutput, this.intermediateSteps, runManager);\n            if (this.runManager) {\n                await this.runManager.handleChainEnd(output);\n            }\n            await this.setFinalOutputs(output);\n            return output;\n        }\n        this.intermediateSteps = this.intermediateSteps.concat(nextStepOutput);\n        let output = {};\n        if (Array.isArray(nextStepOutput) && nextStepOutput.length === 1) {\n            const nextStep = nextStepOutput[0];\n            const toolReturn = await this.agentExecutor._getToolReturn(nextStep);\n            if (toolReturn) {\n                output = await this.agentExecutor._return(toolReturn, this.intermediateSteps, runManager);\n                await this.runManager?.handleChainEnd(output);\n                await this.setFinalOutputs(output);\n            }\n        }\n        output = { intermediateSteps: nextStepOutput };\n        return output;\n    }\n    async _stop() {\n        const output = await this.agentExecutor.agent.returnStoppedResponse(this.agentExecutor.earlyStoppingMethod, this.intermediateSteps, this.inputs);\n        const returnedOutput = await this.agentExecutor._return(output, this.intermediateSteps, this.runManager);\n        await this.setFinalOutputs(returnedOutput);\n        await this.runManager?.handleChainEnd(returnedOutput);\n        return returnedOutput;\n    }\n    async _callNext() {\n        // final output already reached: stopiteration (final output)\n        if (this.finalOutputs) {\n            throw new Error(`Final outputs already reached: ${JSON.stringify(this.finalOutputs, null, 2)}`);\n        }\n        // timeout/max iterations: stopiteration (stopped response)\n        if (!this.agentExecutor.shouldContinueGetter(this.iterations)) {\n            return this._stop();\n        }\n        const nextStepOutput = await this._executeNextStep(this.runManager);\n        const output = await this._processNextStepOutput(nextStepOutput, this.runManager);\n        this.updateIterations();\n        return output;\n    }\n}\n/**\n * Tool that just returns the query.\n * Used for exception tracking.\n */\nclass ExceptionTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"_Exception\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Exception tool\"\n        });\n    }\n    async _call(query) {\n        return query;\n    }\n}\n/**\n * A chain managing an agent using tools.\n * @augments BaseChain\n * @example\n * ```typescript\n *\n * const executor = AgentExecutor.fromAgentAndTools({\n *   agent: async () => loadAgentFromLangchainHub(),\n *   tools: [new SerpAPI(), new Calculator()],\n *   returnIntermediateSteps: true,\n * });\n *\n * const result = await executor.invoke({\n *   input: `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`,\n * });\n *\n * ```\n */\nclass AgentExecutor extends _chains_base_js__WEBPACK_IMPORTED_MODULE_6__.BaseChain {\n    static lc_name() {\n        return \"AgentExecutor\";\n    }\n    get lc_namespace() {\n        return [\"langchain\", \"agents\", \"executor\"];\n    }\n    get inputKeys() {\n        return this.agent.inputKeys;\n    }\n    get outputKeys() {\n        return this.agent.returnValues;\n    }\n    constructor(input) {\n        let agent;\n        let returnOnlyOutputs = true;\n        if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.Runnable.isRunnable(input.agent)) {\n            if (_agent_js__WEBPACK_IMPORTED_MODULE_5__.AgentRunnableSequence.isAgentRunnableSequence(input.agent)) {\n                if (input.agent.singleAction) {\n                    agent = new _agent_js__WEBPACK_IMPORTED_MODULE_5__.RunnableSingleActionAgent({\n                        runnable: input.agent,\n                        streamRunnable: input.agent.streamRunnable,\n                    });\n                }\n                else {\n                    agent = new _agent_js__WEBPACK_IMPORTED_MODULE_5__.RunnableMultiActionAgent({\n                        runnable: input.agent,\n                        streamRunnable: input.agent.streamRunnable,\n                    });\n                }\n            }\n            else {\n                agent = new _agent_js__WEBPACK_IMPORTED_MODULE_5__.RunnableMultiActionAgent({ runnable: input.agent });\n            }\n            // TODO: Update BaseChain implementation on breaking change\n            returnOnlyOutputs = false;\n        }\n        else {\n            if ((0,_agent_js__WEBPACK_IMPORTED_MODULE_5__.isRunnableAgent)(input.agent)) {\n                returnOnlyOutputs = false;\n            }\n            agent = input.agent;\n        }\n        super(input);\n        Object.defineProperty(this, \"agent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 15\n        });\n        Object.defineProperty(this, \"earlyStoppingMethod\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"force\"\n        });\n        // TODO: Update BaseChain implementation on breaking change to include this\n        Object.defineProperty(this, \"returnOnlyOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * How to handle errors raised by the agent's output parser.\n          Defaults to `False`, which raises the error.\n      \n          If `true`, the error will be sent back to the LLM as an observation.\n          If a string, the string itself will be sent to the LLM as an observation.\n          If a callable function, the function will be called with the exception\n          as an argument, and the result of that function will be passed to the agent\n          as an observation.\n         */\n        Object.defineProperty(this, \"handleParsingErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"handleToolRuntimeErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.agent = agent;\n        this.tools = input.tools;\n        this.handleParsingErrors =\n            input.handleParsingErrors ?? this.handleParsingErrors;\n        this.handleToolRuntimeErrors = input.handleToolRuntimeErrors;\n        this.returnOnlyOutputs = returnOnlyOutputs;\n        if (this.agent._agentActionType() === \"multi\") {\n            for (const tool of this.tools) {\n                if (tool.returnDirect) {\n                    throw new Error(`Tool with return direct ${tool.name} not supported for multi-action agent.`);\n                }\n            }\n        }\n        this.returnIntermediateSteps =\n            input.returnIntermediateSteps ?? this.returnIntermediateSteps;\n        this.maxIterations = input.maxIterations ?? this.maxIterations;\n        this.earlyStoppingMethod =\n            input.earlyStoppingMethod ?? this.earlyStoppingMethod;\n    }\n    /** Create from agent and a list of tools. */\n    static fromAgentAndTools(fields) {\n        return new AgentExecutor(fields);\n    }\n    get shouldContinueGetter() {\n        return this.shouldContinue.bind(this);\n    }\n    /**\n     * Method that checks if the agent execution should continue based on the\n     * number of iterations.\n     * @param iterations The current number of iterations.\n     * @returns A boolean indicating whether the agent execution should continue.\n     */\n    shouldContinue(iterations) {\n        return this.maxIterations === undefined || iterations < this.maxIterations;\n    }\n    /** @ignore */\n    async _call(inputs, runManager, config) {\n        const toolsByName = Object.fromEntries(this.tools.map((t) => [t.name.toLowerCase(), t]));\n        const steps = [];\n        let iterations = 0;\n        const getOutput = async (finishStep) => {\n            const { returnValues } = finishStep;\n            const additional = await this.agent.prepareForOutput(returnValues, steps);\n            await runManager?.handleAgentEnd(finishStep);\n            let response;\n            if (this.returnIntermediateSteps) {\n                response = { ...returnValues, intermediateSteps: steps, ...additional };\n            }\n            else {\n                response = { ...returnValues, ...additional };\n            }\n            if (!this.returnOnlyOutputs) {\n                response = { ...inputs, ...response };\n            }\n            return response;\n        };\n        while (this.shouldContinue(iterations)) {\n            let output;\n            try {\n                output = await this.agent.plan(steps, inputs, runManager?.getChild(), config);\n            }\n            catch (e) {\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (e instanceof _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_3__.OutputParserException) {\n                    let observation;\n                    let text = e.message;\n                    if (this.handleParsingErrors === true) {\n                        if (e.sendToLLM) {\n                            observation = e.observation;\n                            text = e.llmOutput ?? \"\";\n                        }\n                        else {\n                            observation = \"Invalid or incomplete response\";\n                        }\n                    }\n                    else if (typeof this.handleParsingErrors === \"string\") {\n                        observation = this.handleParsingErrors;\n                    }\n                    else if (typeof this.handleParsingErrors === \"function\") {\n                        observation = this.handleParsingErrors(e);\n                    }\n                    else {\n                        throw e;\n                    }\n                    output = {\n                        tool: \"_Exception\",\n                        toolInput: observation,\n                        log: text,\n                    };\n                }\n                else {\n                    throw e;\n                }\n            }\n            // Check if the agent has finished\n            if (\"returnValues\" in output) {\n                return getOutput(output);\n            }\n            let actions;\n            if (Array.isArray(output)) {\n                actions = output;\n            }\n            else {\n                actions = [output];\n            }\n            const newSteps = await Promise.all(actions.map(async (action) => {\n                await runManager?.handleAgentAction(action);\n                const tool = action.tool === \"_Exception\"\n                    ? new ExceptionTool()\n                    : toolsByName[action.tool?.toLowerCase()];\n                let observation;\n                try {\n                    observation = tool\n                        ? await tool.invoke(action.toolInput, (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, { callbacks: runManager?.getChild() }))\n                        : `${action.tool} is not a valid tool, try another one.`;\n                    if (typeof observation !== \"string\") {\n                        throw new Error(\"Received unsupported non-string response from tool call.\");\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (e) {\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (e instanceof _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.ToolInputParsingException) {\n                        if (this.handleParsingErrors === true) {\n                            observation =\n                                \"Invalid or incomplete tool input. Please try again.\";\n                        }\n                        else if (typeof this.handleParsingErrors === \"string\") {\n                            observation = this.handleParsingErrors;\n                        }\n                        else if (typeof this.handleParsingErrors === \"function\") {\n                            observation = this.handleParsingErrors(e);\n                        }\n                        else {\n                            throw e;\n                        }\n                        observation = await new ExceptionTool().call(observation, runManager?.getChild());\n                        return { action, observation: observation ?? \"\" };\n                    }\n                    else if (this.handleToolRuntimeErrors !== undefined) {\n                        observation = this.handleToolRuntimeErrors(e);\n                    }\n                }\n                return { action, observation: observation ?? \"\" };\n            }));\n            steps.push(...newSteps);\n            const lastStep = steps[steps.length - 1];\n            const lastTool = toolsByName[lastStep.action.tool?.toLowerCase()];\n            if (lastTool?.returnDirect) {\n                return getOutput({\n                    returnValues: { [this.agent.returnValues[0]]: lastStep.observation },\n                    log: \"\",\n                });\n            }\n            iterations += 1;\n        }\n        const finish = await this.agent.returnStoppedResponse(this.earlyStoppingMethod, steps, inputs);\n        return getOutput(finish);\n    }\n    async _takeNextStep(nameToolMap, inputs, intermediateSteps, runManager, config) {\n        let output;\n        try {\n            output = await this.agent.plan(intermediateSteps, inputs, runManager?.getChild(), config);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (e instanceof _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_3__.OutputParserException) {\n                let observation;\n                let text = e.message;\n                if (this.handleParsingErrors === true) {\n                    if (e.sendToLLM) {\n                        observation = e.observation;\n                        text = e.llmOutput ?? \"\";\n                    }\n                    else {\n                        observation = \"Invalid or incomplete response\";\n                    }\n                }\n                else if (typeof this.handleParsingErrors === \"string\") {\n                    observation = this.handleParsingErrors;\n                }\n                else if (typeof this.handleParsingErrors === \"function\") {\n                    observation = this.handleParsingErrors(e);\n                }\n                else {\n                    throw e;\n                }\n                output = {\n                    tool: \"_Exception\",\n                    toolInput: observation,\n                    log: text,\n                };\n            }\n            else {\n                throw e;\n            }\n        }\n        if (\"returnValues\" in output) {\n            return output;\n        }\n        let actions;\n        if (Array.isArray(output)) {\n            actions = output;\n        }\n        else {\n            actions = [output];\n        }\n        const result = [];\n        for (const agentAction of actions) {\n            let observation = \"\";\n            if (runManager) {\n                await runManager?.handleAgentAction(agentAction);\n            }\n            if (agentAction.tool in nameToolMap) {\n                const tool = nameToolMap[agentAction.tool];\n                try {\n                    observation = await tool.call(agentAction.toolInput, runManager?.getChild());\n                    if (typeof observation !== \"string\") {\n                        throw new Error(\"Received unsupported non-string response from tool call.\");\n                    }\n                }\n                catch (e) {\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (e instanceof _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.ToolInputParsingException) {\n                        if (this.handleParsingErrors === true) {\n                            observation =\n                                \"Invalid or incomplete tool input. Please try again.\";\n                        }\n                        else if (typeof this.handleParsingErrors === \"string\") {\n                            observation = this.handleParsingErrors;\n                        }\n                        else if (typeof this.handleParsingErrors === \"function\") {\n                            observation = this.handleParsingErrors(e);\n                        }\n                        else {\n                            throw e;\n                        }\n                        observation = await new ExceptionTool().call(observation, runManager?.getChild());\n                    }\n                }\n            }\n            else {\n                observation = `${agentAction.tool} is not a valid tool, try another available tool: ${Object.keys(nameToolMap).join(\", \")}`;\n            }\n            result.push({\n                action: agentAction,\n                observation,\n            });\n        }\n        return result;\n    }\n    async _return(output, intermediateSteps, runManager) {\n        if (runManager) {\n            await runManager.handleAgentEnd(output);\n        }\n        const finalOutput = output.returnValues;\n        if (this.returnIntermediateSteps) {\n            finalOutput.intermediateSteps = intermediateSteps;\n        }\n        return finalOutput;\n    }\n    async _getToolReturn(nextStepOutput) {\n        const { action, observation } = nextStepOutput;\n        const nameToolMap = Object.fromEntries(this.tools.map((t) => [t.name.toLowerCase(), t]));\n        const [returnValueKey = \"output\"] = this.agent.returnValues;\n        // Invalid tools won't be in the map, so we return False.\n        if (action.tool in nameToolMap) {\n            if (nameToolMap[action.tool].returnDirect) {\n                return {\n                    returnValues: { [returnValueKey]: observation },\n                    log: \"\",\n                };\n            }\n        }\n        return null;\n    }\n    _returnStoppedResponse(earlyStoppingMethod) {\n        if (earlyStoppingMethod === \"force\") {\n            return {\n                returnValues: {\n                    output: \"Agent stopped due to iteration limit or time limit.\",\n                },\n                log: \"\",\n            };\n        }\n        throw new Error(`Got unsupported early_stopping_method: ${earlyStoppingMethod}`);\n    }\n    async *_streamIterator(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    inputs, options) {\n        const agentExecutorIterator = new AgentExecutorIterator({\n            inputs,\n            agentExecutor: this,\n            config: options,\n            // TODO: Deprecate these other parameters\n            metadata: options?.metadata,\n            tags: options?.tags,\n            callbacks: options?.callbacks,\n        });\n        const iterator = agentExecutorIterator.streamIterator();\n        for await (const step of iterator) {\n            if (!step) {\n                continue;\n            }\n            yield step;\n        }\n    }\n    _chainType() {\n        return \"agent_executor\";\n    }\n    serialize() {\n        throw new Error(\"Cannot serialize an AgentExecutor\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/log.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/log.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatLogToString: () => (/* binding */ formatLogToString)\n/* harmony export */ });\n/**\n * Construct the scratchpad that lets the agent continue its thought process.\n * @param intermediateSteps\n * @param observationPrefix\n * @param llmPrefix\n * @returns a string with the formatted observations and agent logs\n */\nfunction formatLogToString(intermediateSteps, observationPrefix = \"Observation: \", llmPrefix = \"Thought: \") {\n    const formattedSteps = intermediateSteps.reduce((thoughts, { action, observation }) => thoughts +\n        [action.log, `\\n${observationPrefix}${observation}`, llmPrefix].join(\"\\n\"), \"\");\n    return formattedSteps;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQvbG9nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUVBQWlFLHFCQUFxQjtBQUN0RiwwQkFBMEIsa0JBQWtCLEVBQUUsWUFBWTtBQUMxRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9mb3JtYXRfc2NyYXRjaHBhZC9sb2cuanM/OTVlYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnN0cnVjdCB0aGUgc2NyYXRjaHBhZCB0aGF0IGxldHMgdGhlIGFnZW50IGNvbnRpbnVlIGl0cyB0aG91Z2h0IHByb2Nlc3MuXG4gKiBAcGFyYW0gaW50ZXJtZWRpYXRlU3RlcHNcbiAqIEBwYXJhbSBvYnNlcnZhdGlvblByZWZpeFxuICogQHBhcmFtIGxsbVByZWZpeFxuICogQHJldHVybnMgYSBzdHJpbmcgd2l0aCB0aGUgZm9ybWF0dGVkIG9ic2VydmF0aW9ucyBhbmQgYWdlbnQgbG9nc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0TG9nVG9TdHJpbmcoaW50ZXJtZWRpYXRlU3RlcHMsIG9ic2VydmF0aW9uUHJlZml4ID0gXCJPYnNlcnZhdGlvbjogXCIsIGxsbVByZWZpeCA9IFwiVGhvdWdodDogXCIpIHtcbiAgICBjb25zdCBmb3JtYXR0ZWRTdGVwcyA9IGludGVybWVkaWF0ZVN0ZXBzLnJlZHVjZSgodGhvdWdodHMsIHsgYWN0aW9uLCBvYnNlcnZhdGlvbiB9KSA9PiB0aG91Z2h0cyArXG4gICAgICAgIFthY3Rpb24ubG9nLCBgXFxuJHtvYnNlcnZhdGlvblByZWZpeH0ke29ic2VydmF0aW9ufWAsIGxsbVByZWZpeF0uam9pbihcIlxcblwiKSwgXCJcIik7XG4gICAgcmV0dXJuIGZvcm1hdHRlZFN0ZXBzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatForOpenAIFunctions: () => (/* binding */ formatForOpenAIFunctions),\n/* harmony export */   formatToOpenAIFunctionMessages: () => (/* binding */ formatToOpenAIFunctionMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chat_convo_prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chat_convo/prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/prompt.js\");\n\n\n\n/**\n * Format a list of AgentSteps into a list of BaseMessage instances for\n * agents that use OpenAI's API. Helpful for passing in previous agent\n * step context into new iterations.\n *\n * @deprecated Use formatToOpenAIFunctionMessages instead.\n * @param steps A list of AgentSteps to format.\n * @returns A list of BaseMessages.\n */\nfunction formatForOpenAIFunctions(steps) {\n    const thoughts = [];\n    for (const step of steps) {\n        thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.AIMessage(step.action.log));\n        thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.HumanMessage((0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_chat_convo_prompt_js__WEBPACK_IMPORTED_MODULE_2__.TEMPLATE_TOOL_RESPONSE, \"f-string\", {\n            observation: step.observation,\n        })));\n    }\n    return thoughts;\n}\n/**\n * Format a list of AgentSteps into a list of BaseMessage instances for\n * agents that use OpenAI's API. Helpful for passing in previous agent\n * step context into new iterations.\n *\n * @param steps A list of AgentSteps to format.\n * @returns A list of BaseMessages.\n */\nfunction formatToOpenAIFunctionMessages(steps) {\n    return steps.flatMap(({ action, observation }) => {\n        if (\"messageLog\" in action && action.messageLog !== undefined) {\n            const log = action.messageLog;\n            return log.concat(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.FunctionMessage(observation, action.tool));\n        }\n        else {\n            return [new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.AIMessage(action.log)];\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQvb3BlbmFpX2Z1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRjtBQUM1QjtBQUNRO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDBCQUEwQiwrREFBUztBQUNuQywwQkFBMEIsa0VBQVksQ0FBQyx1RUFBYyxDQUFDLHlFQUFzQjtBQUM1RTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIscUJBQXFCO0FBQ2pEO0FBQ0E7QUFDQSxrQ0FBa0MscUVBQWU7QUFDakQ7QUFDQTtBQUNBLHdCQUF3QiwrREFBUztBQUNqQztBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQvb3BlbmFpX2Z1bmN0aW9ucy5qcz84Y2Y0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFJTWVzc2FnZSwgSHVtYW5NZXNzYWdlLCBGdW5jdGlvbk1lc3NhZ2UsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgcmVuZGVyVGVtcGxhdGUgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Byb21wdHNcIjtcbmltcG9ydCB7IFRFTVBMQVRFX1RPT0xfUkVTUE9OU0UgfSBmcm9tIFwiLi4vY2hhdF9jb252by9wcm9tcHQuanNcIjtcbi8qKlxuICogRm9ybWF0IGEgbGlzdCBvZiBBZ2VudFN0ZXBzIGludG8gYSBsaXN0IG9mIEJhc2VNZXNzYWdlIGluc3RhbmNlcyBmb3JcbiAqIGFnZW50cyB0aGF0IHVzZSBPcGVuQUkncyBBUEkuIEhlbHBmdWwgZm9yIHBhc3NpbmcgaW4gcHJldmlvdXMgYWdlbnRcbiAqIHN0ZXAgY29udGV4dCBpbnRvIG5ldyBpdGVyYXRpb25zLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSBmb3JtYXRUb09wZW5BSUZ1bmN0aW9uTWVzc2FnZXMgaW5zdGVhZC5cbiAqIEBwYXJhbSBzdGVwcyBBIGxpc3Qgb2YgQWdlbnRTdGVwcyB0byBmb3JtYXQuXG4gKiBAcmV0dXJucyBBIGxpc3Qgb2YgQmFzZU1lc3NhZ2VzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0Rm9yT3BlbkFJRnVuY3Rpb25zKHN0ZXBzKSB7XG4gICAgY29uc3QgdGhvdWdodHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHN0ZXAgb2Ygc3RlcHMpIHtcbiAgICAgICAgdGhvdWdodHMucHVzaChuZXcgQUlNZXNzYWdlKHN0ZXAuYWN0aW9uLmxvZykpO1xuICAgICAgICB0aG91Z2h0cy5wdXNoKG5ldyBIdW1hbk1lc3NhZ2UocmVuZGVyVGVtcGxhdGUoVEVNUExBVEVfVE9PTF9SRVNQT05TRSwgXCJmLXN0cmluZ1wiLCB7XG4gICAgICAgICAgICBvYnNlcnZhdGlvbjogc3RlcC5vYnNlcnZhdGlvbixcbiAgICAgICAgfSkpKTtcbiAgICB9XG4gICAgcmV0dXJuIHRob3VnaHRzO1xufVxuLyoqXG4gKiBGb3JtYXQgYSBsaXN0IG9mIEFnZW50U3RlcHMgaW50byBhIGxpc3Qgb2YgQmFzZU1lc3NhZ2UgaW5zdGFuY2VzIGZvclxuICogYWdlbnRzIHRoYXQgdXNlIE9wZW5BSSdzIEFQSS4gSGVscGZ1bCBmb3IgcGFzc2luZyBpbiBwcmV2aW91cyBhZ2VudFxuICogc3RlcCBjb250ZXh0IGludG8gbmV3IGl0ZXJhdGlvbnMuXG4gKlxuICogQHBhcmFtIHN0ZXBzIEEgbGlzdCBvZiBBZ2VudFN0ZXBzIHRvIGZvcm1hdC5cbiAqIEByZXR1cm5zIEEgbGlzdCBvZiBCYXNlTWVzc2FnZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUb09wZW5BSUZ1bmN0aW9uTWVzc2FnZXMoc3RlcHMpIHtcbiAgICByZXR1cm4gc3RlcHMuZmxhdE1hcCgoeyBhY3Rpb24sIG9ic2VydmF0aW9uIH0pID0+IHtcbiAgICAgICAgaWYgKFwibWVzc2FnZUxvZ1wiIGluIGFjdGlvbiAmJiBhY3Rpb24ubWVzc2FnZUxvZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBsb2cgPSBhY3Rpb24ubWVzc2FnZUxvZztcbiAgICAgICAgICAgIHJldHVybiBsb2cuY29uY2F0KG5ldyBGdW5jdGlvbk1lc3NhZ2Uob2JzZXJ2YXRpb24sIGFjdGlvbi50b29sKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW25ldyBBSU1lc3NhZ2UoYWN0aW9uLmxvZyldO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatToOpenAIToolMessages: () => (/* reexport safe */ _tool_calling_js__WEBPACK_IMPORTED_MODULE_0__.formatToToolMessages)\n/* harmony export */ });\n/* harmony import */ var _tool_calling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool_calling.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQvb3BlbmFpX3Rvb2xzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVGO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9mb3JtYXRfc2NyYXRjaHBhZC9vcGVuYWlfdG9vbHMuanM/NmQzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXRUb1Rvb2xNZXNzYWdlcyBhcyBmb3JtYXRUb09wZW5BSVRvb2xNZXNzYWdlcyB9IGZyb20gXCIuL3Rvb2xfY2FsbGluZy5qc1wiO1xuZXhwb3J0IHsgZm9ybWF0VG9PcGVuQUlUb29sTWVzc2FnZXMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _createToolMessage: () => (/* binding */ _createToolMessage),\n/* harmony export */   formatToToolMessages: () => (/* binding */ formatToToolMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n\n/**\n * Convert agent action and observation into a function message.\n * @param agentAction - The tool invocation request from the agent\n * @param observation - The result of the tool invocation\n * @returns FunctionMessage that corresponds to the original tool invocation\n */\nfunction _createToolMessage(step) {\n    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.ToolMessage({\n        tool_call_id: step.action.toolCallId,\n        content: step.observation,\n        additional_kwargs: { name: step.action.tool },\n    });\n}\nfunction formatToToolMessages(steps) {\n    return steps.flatMap(({ action, observation }) => {\n        if (\"messageLog\" in action && action.messageLog !== undefined) {\n            const log = action.messageLog;\n            return log.concat(_createToolMessage({ action, observation }));\n        }\n        else {\n            return [new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.AIMessage(action.log)];\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQvdG9vbF9jYWxsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsaUVBQVc7QUFDMUI7QUFDQTtBQUNBLDZCQUE2Qix3QkFBd0I7QUFDckQsS0FBSztBQUNMO0FBQ087QUFDUCw0QkFBNEIscUJBQXFCO0FBQ2pEO0FBQ0E7QUFDQSxtREFBbUQscUJBQXFCO0FBQ3hFO0FBQ0E7QUFDQSx3QkFBd0IsK0RBQVM7QUFDakM7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL3Rvb2xfY2FsbGluZy5qcz9kMjk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFJTWVzc2FnZSwgVG9vbE1lc3NhZ2UgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lc3NhZ2VzXCI7XG4vKipcbiAqIENvbnZlcnQgYWdlbnQgYWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBpbnRvIGEgZnVuY3Rpb24gbWVzc2FnZS5cbiAqIEBwYXJhbSBhZ2VudEFjdGlvbiAtIFRoZSB0b29sIGludm9jYXRpb24gcmVxdWVzdCBmcm9tIHRoZSBhZ2VudFxuICogQHBhcmFtIG9ic2VydmF0aW9uIC0gVGhlIHJlc3VsdCBvZiB0aGUgdG9vbCBpbnZvY2F0aW9uXG4gKiBAcmV0dXJucyBGdW5jdGlvbk1lc3NhZ2UgdGhhdCBjb3JyZXNwb25kcyB0byB0aGUgb3JpZ2luYWwgdG9vbCBpbnZvY2F0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBfY3JlYXRlVG9vbE1lc3NhZ2Uoc3RlcCkge1xuICAgIHJldHVybiBuZXcgVG9vbE1lc3NhZ2Uoe1xuICAgICAgICB0b29sX2NhbGxfaWQ6IHN0ZXAuYWN0aW9uLnRvb2xDYWxsSWQsXG4gICAgICAgIGNvbnRlbnQ6IHN0ZXAub2JzZXJ2YXRpb24sXG4gICAgICAgIGFkZGl0aW9uYWxfa3dhcmdzOiB7IG5hbWU6IHN0ZXAuYWN0aW9uLnRvb2wgfSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUb1Rvb2xNZXNzYWdlcyhzdGVwcykge1xuICAgIHJldHVybiBzdGVwcy5mbGF0TWFwKCh7IGFjdGlvbiwgb2JzZXJ2YXRpb24gfSkgPT4ge1xuICAgICAgICBpZiAoXCJtZXNzYWdlTG9nXCIgaW4gYWN0aW9uICYmIGFjdGlvbi5tZXNzYWdlTG9nICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvZyA9IGFjdGlvbi5tZXNzYWdlTG9nO1xuICAgICAgICAgICAgcmV0dXJuIGxvZy5jb25jYXQoX2NyZWF0ZVRvb2xNZXNzYWdlKHsgYWN0aW9uLCBvYnNlcnZhdGlvbiB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW25ldyBBSU1lc3NhZ2UoYWN0aW9uLmxvZyldO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/xml.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/xml.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatXml: () => (/* binding */ formatXml)\n/* harmony export */ });\nfunction formatXml(intermediateSteps) {\n    let log = \"\";\n    for (const step of intermediateSteps) {\n        const { action, observation } = step;\n        log += `<tool>${action.tool}</tool><tool_input>${action.toolInput}\\n</tool_input><observation>${observation}</observation>`;\n    }\n    return log;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQveG1sLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQSxnQkFBZ0Isc0JBQXNCO0FBQ3RDLHdCQUF3QixZQUFZLHFCQUFxQixpQkFBaUIsOEJBQThCLFlBQVk7QUFDcEg7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9mb3JtYXRfc2NyYXRjaHBhZC94bWwuanM/NTYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZm9ybWF0WG1sKGludGVybWVkaWF0ZVN0ZXBzKSB7XG4gICAgbGV0IGxvZyA9IFwiXCI7XG4gICAgZm9yIChjb25zdCBzdGVwIG9mIGludGVybWVkaWF0ZVN0ZXBzKSB7XG4gICAgICAgIGNvbnN0IHsgYWN0aW9uLCBvYnNlcnZhdGlvbiB9ID0gc3RlcDtcbiAgICAgICAgbG9nICs9IGA8dG9vbD4ke2FjdGlvbi50b29sfTwvdG9vbD48dG9vbF9pbnB1dD4ke2FjdGlvbi50b29sSW5wdXR9XFxuPC90b29sX2lucHV0PjxvYnNlcnZhdGlvbj4ke29ic2VydmF0aW9ufTwvb2JzZXJ2YXRpb24+YDtcbiAgICB9XG4gICAgcmV0dXJuIGxvZztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/xml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/helpers.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/helpers.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializeHelper: () => (/* binding */ deserializeHelper)\n/* harmony export */ });\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n\nconst deserializeHelper = async (llm, tools, data, fromLLMAndTools, fromConstructor) => {\n    if (data.load_from_llm_and_tools) {\n        if (!llm) {\n            throw new Error(\"Loading from llm and tools, llm must be provided.\");\n        }\n        if (!tools) {\n            throw new Error(\"Loading from llm and tools, tools must be provided.\");\n        }\n        return fromLLMAndTools(llm, tools, data);\n    }\n    if (!data.llm_chain) {\n        throw new Error(\"Loading from constructor, llm_chain must be provided.\");\n    }\n    const llmChain = await _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain.deserialize(data.llm_chain);\n    return fromConstructor({ ...data, llmChain });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUMzQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwwREFBUTtBQUNuQyw2QkFBNkIsbUJBQW1CO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9oZWxwZXJzLmpzP2FhMjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTExNQ2hhaW4gfSBmcm9tIFwiLi4vY2hhaW5zL2xsbV9jaGFpbi5qc1wiO1xuZXhwb3J0IGNvbnN0IGRlc2VyaWFsaXplSGVscGVyID0gYXN5bmMgKGxsbSwgdG9vbHMsIGRhdGEsIGZyb21MTE1BbmRUb29scywgZnJvbUNvbnN0cnVjdG9yKSA9PiB7XG4gICAgaWYgKGRhdGEubG9hZF9mcm9tX2xsbV9hbmRfdG9vbHMpIHtcbiAgICAgICAgaWYgKCFsbG0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkxvYWRpbmcgZnJvbSBsbG0gYW5kIHRvb2xzLCBsbG0gbXVzdCBiZSBwcm92aWRlZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0b29scykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9hZGluZyBmcm9tIGxsbSBhbmQgdG9vbHMsIHRvb2xzIG11c3QgYmUgcHJvdmlkZWQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmcm9tTExNQW5kVG9vbHMobGxtLCB0b29scywgZGF0YSk7XG4gICAgfVxuICAgIGlmICghZGF0YS5sbG1fY2hhaW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9hZGluZyBmcm9tIGNvbnN0cnVjdG9yLCBsbG1fY2hhaW4gbXVzdCBiZSBwcm92aWRlZC5cIik7XG4gICAgfVxuICAgIGNvbnN0IGxsbUNoYWluID0gYXdhaXQgTExNQ2hhaW4uZGVzZXJpYWxpemUoZGF0YS5sbG1fY2hhaW4pO1xuICAgIHJldHVybiBmcm9tQ29uc3RydWN0b3IoeyAuLi5kYXRhLCBsbG1DaGFpbiB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/index.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/index.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.Agent),\n/* harmony export */   AgentActionOutputParser: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.AgentActionOutputParser),\n/* harmony export */   AgentExecutor: () => (/* reexport safe */ _executor_js__WEBPACK_IMPORTED_MODULE_7__.AgentExecutor),\n/* harmony export */   BaseMultiActionAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.BaseMultiActionAgent),\n/* harmony export */   BaseSingleActionAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.BaseSingleActionAgent),\n/* harmony export */   ChatAgent: () => (/* reexport safe */ _chat_index_js__WEBPACK_IMPORTED_MODULE_3__.ChatAgent),\n/* harmony export */   ChatAgentOutputParser: () => (/* reexport safe */ _chat_outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ChatAgentOutputParser),\n/* harmony export */   ChatConversationalAgent: () => (/* reexport safe */ _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_5__.ChatConversationalAgent),\n/* harmony export */   ChatConversationalAgentOutputParser: () => (/* reexport safe */ _chat_convo_outputParser_js__WEBPACK_IMPORTED_MODULE_6__.ChatConversationalAgentOutputParser),\n/* harmony export */   ChatConversationalAgentOutputParserWithRetries: () => (/* reexport safe */ _chat_convo_outputParser_js__WEBPACK_IMPORTED_MODULE_6__.ChatConversationalAgentOutputParserWithRetries),\n/* harmony export */   JsonToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.JsonToolkit),\n/* harmony export */   LLMSingleActionAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.LLMSingleActionAgent),\n/* harmony export */   OpenAIAgent: () => (/* reexport safe */ _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_14__.OpenAIAgent),\n/* harmony export */   OpenApiToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.OpenApiToolkit),\n/* harmony export */   RequestsToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.RequestsToolkit),\n/* harmony export */   RunnableAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.RunnableAgent),\n/* harmony export */   StructuredChatAgent: () => (/* reexport safe */ _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_12__.StructuredChatAgent),\n/* harmony export */   StructuredChatOutputParser: () => (/* reexport safe */ _structured_chat_outputParser_js__WEBPACK_IMPORTED_MODULE_13__.StructuredChatOutputParser),\n/* harmony export */   StructuredChatOutputParserWithRetries: () => (/* reexport safe */ _structured_chat_outputParser_js__WEBPACK_IMPORTED_MODULE_13__.StructuredChatOutputParserWithRetries),\n/* harmony export */   Toolkit: () => (/* reexport safe */ _toolkits_base_js__WEBPACK_IMPORTED_MODULE_2__.Toolkit),\n/* harmony export */   VectorStoreRouterToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreRouterToolkit),\n/* harmony export */   VectorStoreToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreToolkit),\n/* harmony export */   XMLAgent: () => (/* reexport safe */ _xml_index_js__WEBPACK_IMPORTED_MODULE_17__.XMLAgent),\n/* harmony export */   ZeroShotAgent: () => (/* reexport safe */ _mrkl_index_js__WEBPACK_IMPORTED_MODULE_9__.ZeroShotAgent),\n/* harmony export */   ZeroShotAgentOutputParser: () => (/* reexport safe */ _mrkl_outputParser_js__WEBPACK_IMPORTED_MODULE_10__.ZeroShotAgentOutputParser),\n/* harmony export */   createJsonAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createJsonAgent),\n/* harmony export */   createOpenAIFunctionsAgent: () => (/* reexport safe */ _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_14__.createOpenAIFunctionsAgent),\n/* harmony export */   createOpenAIToolsAgent: () => (/* reexport safe */ _openai_tools_index_js__WEBPACK_IMPORTED_MODULE_15__.createOpenAIToolsAgent),\n/* harmony export */   createOpenApiAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createOpenApiAgent),\n/* harmony export */   createReactAgent: () => (/* reexport safe */ _react_index_js__WEBPACK_IMPORTED_MODULE_18__.createReactAgent),\n/* harmony export */   createStructuredChatAgent: () => (/* reexport safe */ _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_12__.createStructuredChatAgent),\n/* harmony export */   createToolCallingAgent: () => (/* reexport safe */ _tool_calling_index_js__WEBPACK_IMPORTED_MODULE_16__.createToolCallingAgent),\n/* harmony export */   createVectorStoreAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createVectorStoreAgent),\n/* harmony export */   createVectorStoreRouterAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createVectorStoreRouterAgent),\n/* harmony export */   createXmlAgent: () => (/* reexport safe */ _xml_index_js__WEBPACK_IMPORTED_MODULE_17__.createXmlAgent),\n/* harmony export */   initializeAgentExecutor: () => (/* reexport safe */ _initialize_js__WEBPACK_IMPORTED_MODULE_8__.initializeAgentExecutor),\n/* harmony export */   initializeAgentExecutorWithOptions: () => (/* reexport safe */ _initialize_js__WEBPACK_IMPORTED_MODULE_8__.initializeAgentExecutorWithOptions)\n/* harmony export */ });\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toolkits/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/index.js\");\n/* harmony import */ var _toolkits_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toolkits/base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/base.js\");\n/* harmony import */ var _chat_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chat/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/index.js\");\n/* harmony import */ var _chat_outputParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chat/outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/outputParser.js\");\n/* harmony import */ var _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chat_convo/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/index.js\");\n/* harmony import */ var _chat_convo_outputParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chat_convo/outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/outputParser.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./executor.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js\");\n/* harmony import */ var _initialize_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./initialize.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/initialize.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mrkl/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _mrkl_outputParser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./mrkl/outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/outputParser.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./structured_chat/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/index.js\");\n/* harmony import */ var _structured_chat_outputParser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./structured_chat/outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/outputParser.js\");\n/* harmony import */ var _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./openai_functions/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/index.js\");\n/* harmony import */ var _openai_tools_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./openai_tools/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/index.js\");\n/* harmony import */ var _tool_calling_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tool_calling/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/index.js\");\n/* harmony import */ var _xml_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./xml/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/index.js\");\n/* harmony import */ var _react_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./react/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0g7QUFDdUc7QUFDaEw7QUFDQTtBQUNrQjtBQUNFO0FBQ21FO0FBQ3RGO0FBQ2lEO0FBQzlDO0FBQ2tCO0FBQ2I7QUFDdUM7QUFDMEI7QUFDaEM7QUFDckI7QUFDQTtBQUNQO0FBQ04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2luZGV4LmpzPzU2YmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQWdlbnQsIEJhc2VTaW5nbGVBY3Rpb25BZ2VudCwgQmFzZU11bHRpQWN0aW9uQWdlbnQsIFJ1bm5hYmxlQWdlbnQsIExMTVNpbmdsZUFjdGlvbkFnZW50LCB9IGZyb20gXCIuL2FnZW50LmpzXCI7XG5leHBvcnQgeyBKc29uVG9vbGtpdCwgT3BlbkFwaVRvb2xraXQsIFJlcXVlc3RzVG9vbGtpdCwgVmVjdG9yU3RvcmVSb3V0ZXJUb29sa2l0LCBWZWN0b3JTdG9yZVRvb2xraXQsIGNyZWF0ZUpzb25BZ2VudCwgY3JlYXRlT3BlbkFwaUFnZW50LCBjcmVhdGVWZWN0b3JTdG9yZUFnZW50LCBjcmVhdGVWZWN0b3JTdG9yZVJvdXRlckFnZW50LCB9IGZyb20gXCIuL3Rvb2xraXRzL2luZGV4LmpzXCI7XG5leHBvcnQgeyBUb29sa2l0IH0gZnJvbSBcIi4vdG9vbGtpdHMvYmFzZS5qc1wiO1xuZXhwb3J0IHsgQ2hhdEFnZW50LCB9IGZyb20gXCIuL2NoYXQvaW5kZXguanNcIjtcbmV4cG9ydCB7IENoYXRBZ2VudE91dHB1dFBhcnNlciB9IGZyb20gXCIuL2NoYXQvb3V0cHV0UGFyc2VyLmpzXCI7XG5leHBvcnQgeyBDaGF0Q29udmVyc2F0aW9uYWxBZ2VudCwgfSBmcm9tIFwiLi9jaGF0X2NvbnZvL2luZGV4LmpzXCI7XG5leHBvcnQgeyBDaGF0Q29udmVyc2F0aW9uYWxBZ2VudE91dHB1dFBhcnNlciwgQ2hhdENvbnZlcnNhdGlvbmFsQWdlbnRPdXRwdXRQYXJzZXJXaXRoUmV0cmllcywgfSBmcm9tIFwiLi9jaGF0X2NvbnZvL291dHB1dFBhcnNlci5qc1wiO1xuZXhwb3J0IHsgQWdlbnRFeGVjdXRvciB9IGZyb20gXCIuL2V4ZWN1dG9yLmpzXCI7XG5leHBvcnQgeyBpbml0aWFsaXplQWdlbnRFeGVjdXRvciwgaW5pdGlhbGl6ZUFnZW50RXhlY3V0b3JXaXRoT3B0aW9ucywgfSBmcm9tIFwiLi9pbml0aWFsaXplLmpzXCI7XG5leHBvcnQgeyBaZXJvU2hvdEFnZW50LCB9IGZyb20gXCIuL21ya2wvaW5kZXguanNcIjtcbmV4cG9ydCB7IFplcm9TaG90QWdlbnRPdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi9tcmtsL291dHB1dFBhcnNlci5qc1wiO1xuZXhwb3J0IHsgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIsIH0gZnJvbSBcIi4vdHlwZXMuanNcIjtcbmV4cG9ydCB7IFN0cnVjdHVyZWRDaGF0QWdlbnQsIGNyZWF0ZVN0cnVjdHVyZWRDaGF0QWdlbnQsIH0gZnJvbSBcIi4vc3RydWN0dXJlZF9jaGF0L2luZGV4LmpzXCI7XG5leHBvcnQgeyBTdHJ1Y3R1cmVkQ2hhdE91dHB1dFBhcnNlciwgU3RydWN0dXJlZENoYXRPdXRwdXRQYXJzZXJXaXRoUmV0cmllcywgfSBmcm9tIFwiLi9zdHJ1Y3R1cmVkX2NoYXQvb3V0cHV0UGFyc2VyLmpzXCI7XG5leHBvcnQgeyBPcGVuQUlBZ2VudCwgY3JlYXRlT3BlbkFJRnVuY3Rpb25zQWdlbnQsIH0gZnJvbSBcIi4vb3BlbmFpX2Z1bmN0aW9ucy9pbmRleC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlT3BlbkFJVG9vbHNBZ2VudCwgfSBmcm9tIFwiLi9vcGVuYWlfdG9vbHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVRvb2xDYWxsaW5nQWdlbnQsIH0gZnJvbSBcIi4vdG9vbF9jYWxsaW5nL2luZGV4LmpzXCI7XG5leHBvcnQgeyBYTUxBZ2VudCwgY3JlYXRlWG1sQWdlbnQsIH0gZnJvbSBcIi4veG1sL2luZGV4LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVSZWFjdEFnZW50LCB9IGZyb20gXCIuL3JlYWN0L2luZGV4LmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/initialize.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/initialize.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAgentExecutor: () => (/* binding */ initializeAgentExecutor),\n/* harmony export */   initializeAgentExecutorWithOptions: () => (/* binding */ initializeAgentExecutorWithOptions)\n/* harmony export */ });\n/* harmony import */ var _memory_buffer_memory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../memory/buffer_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/buffer_memory.js\");\n/* harmony import */ var _chat_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat/index.js\");\n/* harmony import */ var _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat_convo/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/chat_convo/index.js\");\n/* harmony import */ var _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./structured_chat/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/index.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./executor.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mrkl/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./openai_functions/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/index.js\");\n/* harmony import */ var _xml_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./xml/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/index.js\");\n\n\n\n\n\n\n\n\n/**\n * @deprecated See {@link https://js.langchain.com/docs/modules/agents/agent_types/ | new agent creation docs}.\n */\nconst initializeAgentExecutor = async (tools, llm, _agentType, _verbose, _callbackManager) => {\n    const agentType = _agentType ?? \"zero-shot-react-description\";\n    const verbose = _verbose;\n    const callbackManager = _callbackManager;\n    switch (agentType) {\n        case \"zero-shot-react-description\":\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                agent: _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__.ZeroShotAgent.fromLLMAndTools(llm, tools),\n                tools,\n                returnIntermediateSteps: true,\n                verbose,\n                callbackManager,\n            });\n        case \"chat-zero-shot-react-description\":\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                agent: _chat_index_js__WEBPACK_IMPORTED_MODULE_1__.ChatAgent.fromLLMAndTools(llm, tools),\n                tools,\n                returnIntermediateSteps: true,\n                verbose,\n                callbackManager,\n            });\n        case \"chat-conversational-react-description\":\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                agent: _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_2__.ChatConversationalAgent.fromLLMAndTools(llm, tools),\n                tools,\n                verbose,\n                callbackManager,\n            });\n        default:\n            throw new Error(\"Unknown agent type\");\n    }\n};\n/** @deprecated See {@link https://js.langchain.com/docs/modules/agents/agent_types/ | new agent creation docs}. */\nasync function initializeAgentExecutorWithOptions(tools, llm, options = {\n    agentType: llm._modelType() === \"base_chat_model\"\n        ? \"chat-zero-shot-react-description\"\n        : \"zero-shot-react-description\",\n}) {\n    // Note this tools cast is safe as the overload signatures prevent\n    // the function from being called with a StructuredTool[] when\n    // the agentType is not in InitializeAgentExecutorOptionsStructured\n    switch (options.agentType) {\n        case \"zero-shot-react-description\": {\n            const { agentArgs, tags, ...rest } = options;\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"zero-shot-react-description\"],\n                agent: _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__.ZeroShotAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n        }\n        case \"chat-zero-shot-react-description\": {\n            const { agentArgs, tags, ...rest } = options;\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"chat-zero-shot-react-description\"],\n                agent: _chat_index_js__WEBPACK_IMPORTED_MODULE_1__.ChatAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n        }\n        case \"chat-conversational-react-description\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"chat-conversational-react-description\"],\n                agent: _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_2__.ChatConversationalAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory: memory ??\n                    new _memory_buffer_memory_js__WEBPACK_IMPORTED_MODULE_0__.BufferMemory({\n                        returnMessages: true,\n                        memoryKey: \"chat_history\",\n                        inputKey: \"input\",\n                        outputKey: \"output\",\n                    }),\n                ...rest,\n            });\n            return executor;\n        }\n        case \"xml\": {\n            const { agentArgs, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"xml\"],\n                agent: _xml_index_js__WEBPACK_IMPORTED_MODULE_7__.XMLAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n            return executor;\n        }\n        case \"structured-chat-zero-shot-react-description\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"structured-chat-zero-shot-react-description\"],\n                agent: _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_3__.StructuredChatAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory,\n                ...rest,\n            });\n            return executor;\n        }\n        case \"openai-functions\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"openai-functions\"],\n                agent: _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_6__.OpenAIAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory: memory ??\n                    new _memory_buffer_memory_js__WEBPACK_IMPORTED_MODULE_0__.BufferMemory({\n                        returnMessages: true,\n                        memoryKey: \"chat_history\",\n                        inputKey: \"input\",\n                        outputKey: \"output\",\n                    }),\n                ...rest,\n            });\n            return executor;\n        }\n        default: {\n            throw new Error(\"Unknown agent type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvaW5pdGlhbGl6ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTBEO0FBQ2Q7QUFDb0I7QUFDQztBQUNuQjtBQUNFO0FBQ1U7QUFDaEI7QUFDMUM7QUFDQSxvQkFBb0IsMEZBQTBGO0FBQzlHO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFhO0FBQ2hDLHVCQUF1Qix5REFBYTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLG1CQUFtQix1REFBYTtBQUNoQyx1QkFBdUIscURBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQkFBbUIsdURBQWE7QUFDaEMsdUJBQXVCLHlFQUF1QjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMEZBQTBGO0FBQ3hHO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkJBQTJCO0FBQy9DLG1CQUFtQix1REFBYTtBQUNoQztBQUNBLHVCQUF1Qix5REFBYTtBQUNwQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxvQkFBb0IsMkJBQTJCO0FBQy9DLG1CQUFtQix1REFBYTtBQUNoQztBQUNBLHVCQUF1QixxREFBUztBQUNoQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxvQkFBb0IsbUNBQW1DO0FBQ3ZELDZCQUE2Qix1REFBYTtBQUMxQztBQUNBLHVCQUF1Qix5RUFBdUI7QUFDOUM7QUFDQTtBQUNBLHdCQUF3QixrRUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkJBQTJCO0FBQy9DLDZCQUE2Qix1REFBYTtBQUMxQztBQUNBLHVCQUF1QixtREFBUTtBQUMvQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQ0FBbUM7QUFDdkQsNkJBQTZCLHVEQUFhO0FBQzFDO0FBQ0EsdUJBQXVCLDBFQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1DQUFtQztBQUN2RCw2QkFBNkIsdURBQWE7QUFDMUM7QUFDQSx1QkFBdUIsbUVBQVc7QUFDbEM7QUFDQTtBQUNBLHdCQUF3QixrRUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvaW5pdGlhbGl6ZS5qcz8xZjJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlck1lbW9yeSB9IGZyb20gXCIuLi9tZW1vcnkvYnVmZmVyX21lbW9yeS5qc1wiO1xuaW1wb3J0IHsgQ2hhdEFnZW50IH0gZnJvbSBcIi4vY2hhdC9pbmRleC5qc1wiO1xuaW1wb3J0IHsgQ2hhdENvbnZlcnNhdGlvbmFsQWdlbnQgfSBmcm9tIFwiLi9jaGF0X2NvbnZvL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVkQ2hhdEFnZW50IH0gZnJvbSBcIi4vc3RydWN0dXJlZF9jaGF0L2luZGV4LmpzXCI7XG5pbXBvcnQgeyBBZ2VudEV4ZWN1dG9yIH0gZnJvbSBcIi4vZXhlY3V0b3IuanNcIjtcbmltcG9ydCB7IFplcm9TaG90QWdlbnQgfSBmcm9tIFwiLi9tcmtsL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBPcGVuQUlBZ2VudCB9IGZyb20gXCIuL29wZW5haV9mdW5jdGlvbnMvaW5kZXguanNcIjtcbmltcG9ydCB7IFhNTEFnZW50IH0gZnJvbSBcIi4veG1sL2luZGV4LmpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFNlZSB7QGxpbmsgaHR0cHM6Ly9qcy5sYW5nY2hhaW4uY29tL2RvY3MvbW9kdWxlcy9hZ2VudHMvYWdlbnRfdHlwZXMvIHwgbmV3IGFnZW50IGNyZWF0aW9uIGRvY3N9LlxuICovXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUFnZW50RXhlY3V0b3IgPSBhc3luYyAodG9vbHMsIGxsbSwgX2FnZW50VHlwZSwgX3ZlcmJvc2UsIF9jYWxsYmFja01hbmFnZXIpID0+IHtcbiAgICBjb25zdCBhZ2VudFR5cGUgPSBfYWdlbnRUeXBlID8/IFwiemVyby1zaG90LXJlYWN0LWRlc2NyaXB0aW9uXCI7XG4gICAgY29uc3QgdmVyYm9zZSA9IF92ZXJib3NlO1xuICAgIGNvbnN0IGNhbGxiYWNrTWFuYWdlciA9IF9jYWxsYmFja01hbmFnZXI7XG4gICAgc3dpdGNoIChhZ2VudFR5cGUpIHtcbiAgICAgICAgY2FzZSBcInplcm8tc2hvdC1yZWFjdC1kZXNjcmlwdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICAgICAgICAgICAgICAgIGFnZW50OiBaZXJvU2hvdEFnZW50LmZyb21MTE1BbmRUb29scyhsbG0sIHRvb2xzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICByZXR1cm5JbnRlcm1lZGlhdGVTdGVwczogdHJ1ZSxcbiAgICAgICAgICAgICAgICB2ZXJib3NlLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrTWFuYWdlcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIFwiY2hhdC16ZXJvLXNob3QtcmVhY3QtZGVzY3JpcHRpb25cIjpcbiAgICAgICAgICAgIHJldHVybiBBZ2VudEV4ZWN1dG9yLmZyb21BZ2VudEFuZFRvb2xzKHtcbiAgICAgICAgICAgICAgICBhZ2VudDogQ2hhdEFnZW50LmZyb21MTE1BbmRUb29scyhsbG0sIHRvb2xzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICByZXR1cm5JbnRlcm1lZGlhdGVTdGVwczogdHJ1ZSxcbiAgICAgICAgICAgICAgICB2ZXJib3NlLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrTWFuYWdlcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIFwiY2hhdC1jb252ZXJzYXRpb25hbC1yZWFjdC1kZXNjcmlwdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICAgICAgICAgICAgICAgIGFnZW50OiBDaGF0Q29udmVyc2F0aW9uYWxBZ2VudC5mcm9tTExNQW5kVG9vbHMobGxtLCB0b29scyksXG4gICAgICAgICAgICAgICAgdG9vbHMsXG4gICAgICAgICAgICAgICAgdmVyYm9zZSxcbiAgICAgICAgICAgICAgICBjYWxsYmFja01hbmFnZXIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gYWdlbnQgdHlwZVwiKTtcbiAgICB9XG59O1xuLyoqIEBkZXByZWNhdGVkIFNlZSB7QGxpbmsgaHR0cHM6Ly9qcy5sYW5nY2hhaW4uY29tL2RvY3MvbW9kdWxlcy9hZ2VudHMvYWdlbnRfdHlwZXMvIHwgbmV3IGFnZW50IGNyZWF0aW9uIGRvY3N9LiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemVBZ2VudEV4ZWN1dG9yV2l0aE9wdGlvbnModG9vbHMsIGxsbSwgb3B0aW9ucyA9IHtcbiAgICBhZ2VudFR5cGU6IGxsbS5fbW9kZWxUeXBlKCkgPT09IFwiYmFzZV9jaGF0X21vZGVsXCJcbiAgICAgICAgPyBcImNoYXQtemVyby1zaG90LXJlYWN0LWRlc2NyaXB0aW9uXCJcbiAgICAgICAgOiBcInplcm8tc2hvdC1yZWFjdC1kZXNjcmlwdGlvblwiLFxufSkge1xuICAgIC8vIE5vdGUgdGhpcyB0b29scyBjYXN0IGlzIHNhZmUgYXMgdGhlIG92ZXJsb2FkIHNpZ25hdHVyZXMgcHJldmVudFxuICAgIC8vIHRoZSBmdW5jdGlvbiBmcm9tIGJlaW5nIGNhbGxlZCB3aXRoIGEgU3RydWN0dXJlZFRvb2xbXSB3aGVuXG4gICAgLy8gdGhlIGFnZW50VHlwZSBpcyBub3QgaW4gSW5pdGlhbGl6ZUFnZW50RXhlY3V0b3JPcHRpb25zU3RydWN0dXJlZFxuICAgIHN3aXRjaCAob3B0aW9ucy5hZ2VudFR5cGUpIHtcbiAgICAgICAgY2FzZSBcInplcm8tc2hvdC1yZWFjdC1kZXNjcmlwdGlvblwiOiB7XG4gICAgICAgICAgICBjb25zdCB7IGFnZW50QXJncywgdGFncywgLi4ucmVzdCB9ID0gb3B0aW9ucztcbiAgICAgICAgICAgIHJldHVybiBBZ2VudEV4ZWN1dG9yLmZyb21BZ2VudEFuZFRvb2xzKHtcbiAgICAgICAgICAgICAgICB0YWdzOiBbLi4uKHRhZ3MgPz8gW10pLCBcInplcm8tc2hvdC1yZWFjdC1kZXNjcmlwdGlvblwiXSxcbiAgICAgICAgICAgICAgICBhZ2VudDogWmVyb1Nob3RBZ2VudC5mcm9tTExNQW5kVG9vbHMobGxtLCB0b29scywgYWdlbnRBcmdzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImNoYXQtemVyby1zaG90LXJlYWN0LWRlc2NyaXB0aW9uXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHsgYWdlbnRBcmdzLCB0YWdzLCAuLi5yZXN0IH0gPSBvcHRpb25zO1xuICAgICAgICAgICAgcmV0dXJuIEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICAgICAgICAgICAgICAgIHRhZ3M6IFsuLi4odGFncyA/PyBbXSksIFwiY2hhdC16ZXJvLXNob3QtcmVhY3QtZGVzY3JpcHRpb25cIl0sXG4gICAgICAgICAgICAgICAgYWdlbnQ6IENoYXRBZ2VudC5mcm9tTExNQW5kVG9vbHMobGxtLCB0b29scywgYWdlbnRBcmdzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImNoYXQtY29udmVyc2F0aW9uYWwtcmVhY3QtZGVzY3JpcHRpb25cIjoge1xuICAgICAgICAgICAgY29uc3QgeyBhZ2VudEFyZ3MsIG1lbW9yeSwgdGFncywgLi4ucmVzdCB9ID0gb3B0aW9ucztcbiAgICAgICAgICAgIGNvbnN0IGV4ZWN1dG9yID0gQWdlbnRFeGVjdXRvci5mcm9tQWdlbnRBbmRUb29scyh7XG4gICAgICAgICAgICAgICAgdGFnczogWy4uLih0YWdzID8/IFtdKSwgXCJjaGF0LWNvbnZlcnNhdGlvbmFsLXJlYWN0LWRlc2NyaXB0aW9uXCJdLFxuICAgICAgICAgICAgICAgIGFnZW50OiBDaGF0Q29udmVyc2F0aW9uYWxBZ2VudC5mcm9tTExNQW5kVG9vbHMobGxtLCB0b29scywgYWdlbnRBcmdzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICBtZW1vcnk6IG1lbW9yeSA/P1xuICAgICAgICAgICAgICAgICAgICBuZXcgQnVmZmVyTWVtb3J5KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybk1lc3NhZ2VzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVtb3J5S2V5OiBcImNoYXRfaGlzdG9yeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXRLZXk6IFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dEtleTogXCJvdXRwdXRcIixcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGV4ZWN1dG9yO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJ4bWxcIjoge1xuICAgICAgICAgICAgY29uc3QgeyBhZ2VudEFyZ3MsIHRhZ3MsIC4uLnJlc3QgfSA9IG9wdGlvbnM7XG4gICAgICAgICAgICBjb25zdCBleGVjdXRvciA9IEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICAgICAgICAgICAgICAgIHRhZ3M6IFsuLi4odGFncyA/PyBbXSksIFwieG1sXCJdLFxuICAgICAgICAgICAgICAgIGFnZW50OiBYTUxBZ2VudC5mcm9tTExNQW5kVG9vbHMobGxtLCB0b29scywgYWdlbnRBcmdzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZXhlY3V0b3I7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcInN0cnVjdHVyZWQtY2hhdC16ZXJvLXNob3QtcmVhY3QtZGVzY3JpcHRpb25cIjoge1xuICAgICAgICAgICAgY29uc3QgeyBhZ2VudEFyZ3MsIG1lbW9yeSwgdGFncywgLi4ucmVzdCB9ID0gb3B0aW9ucztcbiAgICAgICAgICAgIGNvbnN0IGV4ZWN1dG9yID0gQWdlbnRFeGVjdXRvci5mcm9tQWdlbnRBbmRUb29scyh7XG4gICAgICAgICAgICAgICAgdGFnczogWy4uLih0YWdzID8/IFtdKSwgXCJzdHJ1Y3R1cmVkLWNoYXQtemVyby1zaG90LXJlYWN0LWRlc2NyaXB0aW9uXCJdLFxuICAgICAgICAgICAgICAgIGFnZW50OiBTdHJ1Y3R1cmVkQ2hhdEFnZW50LmZyb21MTE1BbmRUb29scyhsbG0sIHRvb2xzLCBhZ2VudEFyZ3MpLFxuICAgICAgICAgICAgICAgIHRvb2xzLFxuICAgICAgICAgICAgICAgIG1lbW9yeSxcbiAgICAgICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZXhlY3V0b3I7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIm9wZW5haS1mdW5jdGlvbnNcIjoge1xuICAgICAgICAgICAgY29uc3QgeyBhZ2VudEFyZ3MsIG1lbW9yeSwgdGFncywgLi4ucmVzdCB9ID0gb3B0aW9ucztcbiAgICAgICAgICAgIGNvbnN0IGV4ZWN1dG9yID0gQWdlbnRFeGVjdXRvci5mcm9tQWdlbnRBbmRUb29scyh7XG4gICAgICAgICAgICAgICAgdGFnczogWy4uLih0YWdzID8/IFtdKSwgXCJvcGVuYWktZnVuY3Rpb25zXCJdLFxuICAgICAgICAgICAgICAgIGFnZW50OiBPcGVuQUlBZ2VudC5mcm9tTExNQW5kVG9vbHMobGxtLCB0b29scywgYWdlbnRBcmdzKSxcbiAgICAgICAgICAgICAgICB0b29scyxcbiAgICAgICAgICAgICAgICBtZW1vcnk6IG1lbW9yeSA/P1xuICAgICAgICAgICAgICAgICAgICBuZXcgQnVmZmVyTWVtb3J5KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybk1lc3NhZ2VzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVtb3J5S2V5OiBcImNoYXRfaGlzdG9yeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXRLZXk6IFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dEtleTogXCJvdXRwdXRcIixcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGV4ZWN1dG9yO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gYWdlbnQgdHlwZVwiKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/initialize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZeroShotAgent: () => (/* binding */ ZeroShotAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/helpers.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/prompt.js\");\n\n\n\n\n\n\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n * @example\n * ```typescript\n *\n * const agent = new ZeroShotAgent({\n *   llmChain: new LLMChain({\n *     llm: new ChatOpenAI({ temperature: 0 }),\n *     prompt: ZeroShotAgent.createPrompt([new SerpAPI(), new Calculator()], {\n *       prefix: `Answer the following questions as best you can, but speaking as a pirate might speak. You have access to the following tools:`,\n *       suffix: `Begin! Remember to speak as a pirate when giving your final answer. Use lots of \"Args\"\n * Question: {input}\n * {agent_scratchpad}`,\n *       inputVariables: [\"input\", \"agent_scratchpad\"],\n *     }),\n *   }),\n *   allowedTools: [\"search\", \"calculator\"],\n * });\n *\n * const result = await agent.invoke({\n *   input: `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`,\n * });\n * ```\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain.agents.createReactAgent.html | createReactAgent method instead}.\n */\nclass ZeroShotAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_2__.Agent {\n    static lc_name() {\n        return \"ZeroShotAgent\";\n    }\n    constructor(input) {\n        const outputParser = input?.outputParser ?? ZeroShotAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"mrkl\"]\n        });\n    }\n    _agentType() {\n        return \"zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    /**\n     * Returns the default output parser for the ZeroShotAgent.\n     * @param fields Optional arguments for the output parser.\n     * @returns An instance of ZeroShotAgentOutputParser.\n     */\n    static getDefaultOutputParser(fields) {\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgentOutputParser(fields);\n    }\n    /**\n     * Validates the tools for the ZeroShotAgent. Throws an error if any tool\n     * does not have a description.\n     * @param tools List of tools to validate.\n     */\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Create prompt in the style of the zero shot agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.inputVariables - List of input variables the final prompt will expect.\n     */\n    static createPrompt(tools, args) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const toolNames = tools.map((tool) => tool.name);\n        const formatInstructions = (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: toolNames,\n        });\n        const template = [prefix, toolStrings, formatInstructions, suffix].join(\"\\n\\n\");\n        return new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n            template,\n            inputVariables,\n        });\n    }\n    /**\n     * Creates a ZeroShotAgent from a Large Language Model and a set of tools.\n     * @param llm The Large Language Model to use.\n     * @param tools The tools for the agent to use.\n     * @param args Optional arguments for creating the agent.\n     * @returns A new instance of ZeroShotAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        ZeroShotAgent.validateTools(tools);\n        const prompt = ZeroShotAgent.createPrompt(tools, args);\n        const outputParser = args?.outputParser ?? ZeroShotAgent.getDefaultOutputParser();\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        return new ZeroShotAgent({\n            llmChain: chain,\n            allowedTools: tools.map((t) => t.name),\n            outputParser,\n        });\n    }\n    static async deserialize(data) {\n        const { llm, tools, ...rest } = data;\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.deserializeHelper)(llm, tools, rest, (llm, tools, args) => ZeroShotAgent.fromLLMAndTools(llm, tools, {\n            prefix: args.prefix,\n            suffix: args.suffix,\n            inputVariables: args.input_variables,\n        }), (args) => new ZeroShotAgent(args));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/outputParser.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/outputParser.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FINAL_ANSWER_ACTION: () => (/* binding */ FINAL_ANSWER_ACTION),\n/* harmony export */   ZeroShotAgentOutputParser: () => (/* binding */ ZeroShotAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/prompt.js\");\n\n\n\nconst FINAL_ANSWER_ACTION = \"Final Answer:\";\n/**\n * A class that extends `AgentActionOutputParser` to provide a custom\n * implementation for parsing the output of a ZeroShotAgent action.\n */\nclass ZeroShotAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"mrkl\"]\n        });\n        Object.defineProperty(this, \"finishToolName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.finishToolName = fields?.finishToolName || FINAL_ANSWER_ACTION;\n    }\n    /**\n     * Parses the text output of an agent action, extracting the tool, tool\n     * input, and output.\n     * @param text The text output of an agent action.\n     * @returns An object containing the tool, tool input, and output extracted from the text, along with the original text as a log.\n     */\n    async parse(text) {\n        if (text.includes(this.finishToolName)) {\n            const parts = text.split(this.finishToolName);\n            const output = parts[parts.length - 1].trim();\n            return {\n                returnValues: { output },\n                log: text,\n            };\n        }\n        const match = /Action:([\\s\\S]*?)(?:\\nAction Input:([\\s\\S]*?))?$/.exec(text);\n        if (!match) {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse LLM output: ${text}`);\n        }\n        return {\n            tool: match[1].trim(),\n            toolInput: match[2]\n                ? match[2].trim().replace(/^(\"+)(.*?)(\\1)$/, \"$2\")\n                : \"\",\n            log: text,\n        };\n    }\n    /**\n     * Returns the format instructions for parsing the output of an agent\n     * action in the style of the ZeroShotAgent.\n     * @returns The format instructions for parsing the output.\n     */\n    getFormatInstructions() {\n        return _prompt_js__WEBPACK_IMPORTED_MODULE_2__.FORMAT_INSTRUCTIONS;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvbXJrbC9vdXRwdXRQYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUU7QUFDakI7QUFDSjtBQUMzQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sd0NBQXdDLDhEQUF1QjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpRkFBcUIsZ0NBQWdDLEtBQUs7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyREFBbUI7QUFDbEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvbXJrbC9vdXRwdXRQYXJzZXIuanM/Y2ZhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPdXRwdXRQYXJzZXJFeGNlcHRpb24gfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG5pbXBvcnQgeyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB9IGZyb20gXCIuLi90eXBlcy5qc1wiO1xuaW1wb3J0IHsgRk9STUFUX0lOU1RSVUNUSU9OUyB9IGZyb20gXCIuL3Byb21wdC5qc1wiO1xuZXhwb3J0IGNvbnN0IEZJTkFMX0FOU1dFUl9BQ1RJT04gPSBcIkZpbmFsIEFuc3dlcjpcIjtcbi8qKlxuICogQSBjbGFzcyB0aGF0IGV4dGVuZHMgYEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyYCB0byBwcm92aWRlIGEgY3VzdG9tXG4gKiBpbXBsZW1lbnRhdGlvbiBmb3IgcGFyc2luZyB0aGUgb3V0cHV0IG9mIGEgWmVyb1Nob3RBZ2VudCBhY3Rpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBaZXJvU2hvdEFnZW50T3V0cHV0UGFyc2VyIGV4dGVuZHMgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcImFnZW50c1wiLCBcIm1ya2xcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImZpbmlzaFRvb2xOYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZmluaXNoVG9vbE5hbWUgPSBmaWVsZHM/LmZpbmlzaFRvb2xOYW1lIHx8IEZJTkFMX0FOU1dFUl9BQ1RJT047XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgdGV4dCBvdXRwdXQgb2YgYW4gYWdlbnQgYWN0aW9uLCBleHRyYWN0aW5nIHRoZSB0b29sLCB0b29sXG4gICAgICogaW5wdXQsIGFuZCBvdXRwdXQuXG4gICAgICogQHBhcmFtIHRleHQgVGhlIHRleHQgb3V0cHV0IG9mIGFuIGFnZW50IGFjdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgdG9vbCwgdG9vbCBpbnB1dCwgYW5kIG91dHB1dCBleHRyYWN0ZWQgZnJvbSB0aGUgdGV4dCwgYWxvbmcgd2l0aCB0aGUgb3JpZ2luYWwgdGV4dCBhcyBhIGxvZy5cbiAgICAgKi9cbiAgICBhc3luYyBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIGlmICh0ZXh0LmluY2x1ZGVzKHRoaXMuZmluaXNoVG9vbE5hbWUpKSB7XG4gICAgICAgICAgICBjb25zdCBwYXJ0cyA9IHRleHQuc3BsaXQodGhpcy5maW5pc2hUb29sTmFtZSk7XG4gICAgICAgICAgICBjb25zdCBvdXRwdXQgPSBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXS50cmltKCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHVyblZhbHVlczogeyBvdXRwdXQgfSxcbiAgICAgICAgICAgICAgICBsb2c6IHRleHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1hdGNoID0gL0FjdGlvbjooW1xcc1xcU10qPykoPzpcXG5BY3Rpb24gSW5wdXQ6KFtcXHNcXFNdKj8pKT8kLy5leGVjKHRleHQpO1xuICAgICAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgT3V0cHV0UGFyc2VyRXhjZXB0aW9uKGBDb3VsZCBub3QgcGFyc2UgTExNIG91dHB1dDogJHt0ZXh0fWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b29sOiBtYXRjaFsxXS50cmltKCksXG4gICAgICAgICAgICB0b29sSW5wdXQ6IG1hdGNoWzJdXG4gICAgICAgICAgICAgICAgPyBtYXRjaFsyXS50cmltKCkucmVwbGFjZSgvXihcIispKC4qPykoXFwxKSQvLCBcIiQyXCIpXG4gICAgICAgICAgICAgICAgOiBcIlwiLFxuICAgICAgICAgICAgbG9nOiB0ZXh0LFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIGZvciBwYXJzaW5nIHRoZSBvdXRwdXQgb2YgYW4gYWdlbnRcbiAgICAgKiBhY3Rpb24gaW4gdGhlIHN0eWxlIG9mIHRoZSBaZXJvU2hvdEFnZW50LlxuICAgICAqIEByZXR1cm5zIFRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIGZvciBwYXJzaW5nIHRoZSBvdXRwdXQuXG4gICAgICovXG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICByZXR1cm4gRk9STUFUX0lOU1RSVUNUSU9OUztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/prompt.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/prompt.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `Answer the following questions as best you can. You have access to the following tools:`;\nconst FORMAT_INSTRUCTIONS = `Use the following format in your response:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\nconst SUFFIX = `Begin!\n\nQuestion: {input}\nThought:{agent_scratchpad}`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvbXJrbC9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87QUFDQTs7QUFFUDtBQUNBO0FBQ0EsK0NBQStDLFdBQVc7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQLFdBQVc7QUFDWCxTQUFTLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvbXJrbC9wcm9tcHQuanM/YTdjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUFJFRklYID0gYEFuc3dlciB0aGUgZm9sbG93aW5nIHF1ZXN0aW9ucyBhcyBiZXN0IHlvdSBjYW4uIFlvdSBoYXZlIGFjY2VzcyB0byB0aGUgZm9sbG93aW5nIHRvb2xzOmA7XG5leHBvcnQgY29uc3QgRk9STUFUX0lOU1RSVUNUSU9OUyA9IGBVc2UgdGhlIGZvbGxvd2luZyBmb3JtYXQgaW4geW91ciByZXNwb25zZTpcblxuUXVlc3Rpb246IHRoZSBpbnB1dCBxdWVzdGlvbiB5b3UgbXVzdCBhbnN3ZXJcblRob3VnaHQ6IHlvdSBzaG91bGQgYWx3YXlzIHRoaW5rIGFib3V0IHdoYXQgdG8gZG9cbkFjdGlvbjogdGhlIGFjdGlvbiB0byB0YWtlLCBzaG91bGQgYmUgb25lIG9mIFt7dG9vbF9uYW1lc31dXG5BY3Rpb24gSW5wdXQ6IHRoZSBpbnB1dCB0byB0aGUgYWN0aW9uXG5PYnNlcnZhdGlvbjogdGhlIHJlc3VsdCBvZiB0aGUgYWN0aW9uXG4uLi4gKHRoaXMgVGhvdWdodC9BY3Rpb24vQWN0aW9uIElucHV0L09ic2VydmF0aW9uIGNhbiByZXBlYXQgTiB0aW1lcylcblRob3VnaHQ6IEkgbm93IGtub3cgdGhlIGZpbmFsIGFuc3dlclxuRmluYWwgQW5zd2VyOiB0aGUgZmluYWwgYW5zd2VyIHRvIHRoZSBvcmlnaW5hbCBpbnB1dCBxdWVzdGlvbmA7XG5leHBvcnQgY29uc3QgU1VGRklYID0gYEJlZ2luIVxuXG5RdWVzdGlvbjoge2lucHV0fVxuVGhvdWdodDp7YWdlbnRfc2NyYXRjaHBhZH1gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai/output_parser.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai/output_parser.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIFunctionsAgentOutputParser: () => (/* reexport safe */ _openai_functions_output_parser_js__WEBPACK_IMPORTED_MODULE_0__.OpenAIFunctionsAgentOutputParser),\n/* harmony export */   OpenAIToolsAgentOutputParser: () => (/* reexport safe */ _openai_tools_output_parser_js__WEBPACK_IMPORTED_MODULE_1__.OpenAIToolsAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _openai_functions_output_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../openai_functions/output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/output_parser.js\");\n/* harmony import */ var _openai_tools_output_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../openai_tools/output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/output_parser.js\");\n// console.warn([\n//   `[WARNING]: The root \"langchain/agents/openai/output_parser\" entrypoint is deprecated.`,\n//   `Please use either \"langchain/agents/openai/output_parser\" specific entrypoint instead.`\n// ].join(\"\\n\"));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpL291dHB1dF9wYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haS9vdXRwdXRfcGFyc2VyLmpzPzU3NTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc29sZS53YXJuKFtcbi8vICAgYFtXQVJOSU5HXTogVGhlIHJvb3QgXCJsYW5nY2hhaW4vYWdlbnRzL29wZW5haS9vdXRwdXRfcGFyc2VyXCIgZW50cnlwb2ludCBpcyBkZXByZWNhdGVkLmAsXG4vLyAgIGBQbGVhc2UgdXNlIGVpdGhlciBcImxhbmdjaGFpbi9hZ2VudHMvb3BlbmFpL291dHB1dF9wYXJzZXJcIiBzcGVjaWZpYyBlbnRyeXBvaW50IGluc3RlYWQuYFxuLy8gXS5qb2luKFwiXFxuXCIpKTtcbmV4cG9ydCAqIGZyb20gXCIuLi9vcGVuYWlfZnVuY3Rpb25zL291dHB1dF9wYXJzZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuLi9vcGVuYWlfdG9vbHMvb3V0cHV0X3BhcnNlci5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/index.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/index.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIAgent: () => (/* binding */ OpenAIAgent),\n/* harmony export */   _formatIntermediateSteps: () => (/* binding */ _formatIntermediateSteps),\n/* harmony export */   createOpenAIFunctionsAgent: () => (/* binding */ createOpenAIFunctionsAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/utils/function_calling.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _openai_output_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../openai/output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai/output_parser.js\");\n/* harmony import */ var _format_scratchpad_openai_functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../format_scratchpad/openai_functions.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Checks if the given action is a FunctionsAgentAction.\n * @param action The action to check.\n * @returns True if the action is a FunctionsAgentAction, false otherwise.\n */\nfunction isFunctionsAgentAction(action) {\n    return action.messageLog !== undefined;\n}\nfunction _convertAgentStepToMessages(action, observation) {\n    if (isFunctionsAgentAction(action) && action.messageLog !== undefined) {\n        return action.messageLog?.concat(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__.FunctionMessage(observation, action.tool));\n    }\n    else {\n        return [new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__.AIMessage(action.log)];\n    }\n}\nfunction _formatIntermediateSteps(intermediateSteps) {\n    return intermediateSteps.flatMap(({ action, observation }) => _convertAgentStepToMessages(action, observation));\n}\n/**\n * Class representing an agent for the OpenAI chat model in LangChain. It\n * extends the Agent class and provides additional functionality specific\n * to the OpenAIAgent type.\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain.agents.createOpenAIFunctionsAgent.html | createOpenAIFunctionsAgent method instead}.\n */\nclass OpenAIAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_4__.Agent {\n    static lc_name() {\n        return \"OpenAIAgent\";\n    }\n    _agentType() {\n        return \"openai-functions\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    constructor(input) {\n        super({ ...input, outputParser: undefined });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new _openai_output_parser_js__WEBPACK_IMPORTED_MODULE_7__.OpenAIFunctionsAgentOutputParser()\n        });\n        this.tools = input.tools;\n    }\n    /**\n     * Creates a prompt for the OpenAIAgent using the provided tools and\n     * fields.\n     * @param _tools The tools to be used in the prompt.\n     * @param fields Optional fields for creating the prompt.\n     * @returns A BasePromptTemplate object representing the created prompt.\n     */\n    static createPrompt(_tools, fields) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PREFIX } = fields || {};\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.ChatPromptTemplate.fromMessages([\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.SystemMessagePromptTemplate.fromTemplate(prefix),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.MessagesPlaceholder(\"chat_history\"),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.MessagesPlaceholder(\"agent_scratchpad\"),\n        ]);\n    }\n    /**\n     * Creates an OpenAIAgent from a BaseLanguageModel and a list of tools.\n     * @param llm The BaseLanguageModel to use.\n     * @param tools The tools to be used by the agent.\n     * @param args Optional arguments for creating the agent.\n     * @returns An instance of OpenAIAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        OpenAIAgent.validateTools(tools);\n        if (llm._modelType() !== \"base_chat_model\" || llm._llmType() !== \"openai\") {\n            throw new Error(\"OpenAIAgent requires an OpenAI chat model\");\n        }\n        const prompt = OpenAIAgent.createPrompt(tools, args);\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_6__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new OpenAIAgent({\n            llmChain: chain,\n            allowedTools: tools.map((t) => t.name),\n            tools,\n        });\n    }\n    /**\n     * Constructs a scratch pad from a list of agent steps.\n     * @param steps The steps to include in the scratch pad.\n     * @returns A string or a list of BaseMessages representing the constructed scratch pad.\n     */\n    async constructScratchPad(steps) {\n        return _formatIntermediateSteps(steps);\n    }\n    /**\n     * Plans the next action or finish state of the agent based on the\n     * provided steps, inputs, and optional callback manager.\n     * @param steps The steps to consider in planning.\n     * @param inputs The inputs to consider in planning.\n     * @param callbackManager Optional CallbackManager to use in planning.\n     * @returns A Promise that resolves to an AgentAction or AgentFinish object representing the planned action or finish state.\n     */\n    async plan(steps, inputs, callbackManager) {\n        // Add scratchpad and stop to inputs\n        const thoughts = await this.constructScratchPad(steps);\n        const newInputs = {\n            ...inputs,\n            agent_scratchpad: thoughts,\n        };\n        if (this._stop().length !== 0) {\n            newInputs.stop = this._stop();\n        }\n        // Split inputs between prompt and llm\n        const llm = this.llmChain.llm;\n        const valuesForPrompt = { ...newInputs };\n        const valuesForLLM = {\n            functions: this.tools.map((tool) => (0,_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAIFunction)(tool)),\n        };\n        const callKeys = \"callKeys\" in this.llmChain.llm ? this.llmChain.llm.callKeys : [];\n        for (const key of callKeys) {\n            if (key in inputs) {\n                valuesForLLM[key] =\n                    inputs[key];\n                delete valuesForPrompt[key];\n            }\n        }\n        const promptValue = await this.llmChain.prompt.formatPromptValue(valuesForPrompt);\n        const message = await llm.invoke(promptValue.toChatMessages(), {\n            ...valuesForLLM,\n            callbacks: callbackManager,\n        });\n        return this.outputParser.parseAIMessage(message);\n    }\n}\n/**\n * Create an agent that uses OpenAI-style function calling.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createOpenAIFunctionsAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/openai-functions-agent\n * const prompt = await pull<ChatPromptTemplate>(\n *   \"hwchase17/openai-functions-agent\"\n * );\n *\n * const llm = new ChatOpenAI({\n *   temperature: 0,\n * });\n *\n * const agent = await createOpenAIFunctionsAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   chat_history: [\n *     new HumanMessage(\"hi! my name is cob\"),\n *     new AIMessage(\"Hello Cob! How can I assist you today?\"),\n *   ],\n * });\n * ```\n */\nasync function createOpenAIFunctionsAgent({ llm, tools, prompt, streamRunnable, }) {\n    if (!prompt.inputVariables.includes(\"agent_scratchpad\")) {\n        throw new Error([\n            `Prompt must have an input variable named \"agent_scratchpad\".`,\n            `Found ${JSON.stringify(prompt.inputVariables)} instead.`,\n        ].join(\"\\n\"));\n    }\n    const llmWithTools = llm.bind({\n        functions: tools.map((tool) => (0,_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAIFunction)(tool)),\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_openai_functions_js__WEBPACK_IMPORTED_MODULE_8__.formatToOpenAIFunctionMessages)(input.steps),\n        }),\n        prompt,\n        llmWithTools,\n        new _openai_output_parser_js__WEBPACK_IMPORTED_MODULE_7__.OpenAIFunctionsAgentOutputParser(),\n    ], {\n        name: \"OpenAIFunctionsAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX2Z1bmN0aW9ucy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBZ0U7QUFDaUI7QUFDVjtBQUNxRTtBQUNqRjtBQUN0QjtBQUNnQjtBQUMwQjtBQUNXO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHFFQUFlO0FBQzVEO0FBQ0E7QUFDQSxvQkFBb0IsK0RBQVM7QUFDN0I7QUFDQTtBQUNPO0FBQ1Asd0NBQXdDLHFCQUFxQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMElBQTBJO0FBQ2xLO0FBQ08sMEJBQTBCLDRDQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1DQUFtQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0ZBQWdDO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTLDhDQUFNLEdBQUc7QUFDbEMsZUFBZSx1RUFBa0I7QUFDakMsWUFBWSxnRkFBMkI7QUFDdkMsZ0JBQWdCLHdFQUFtQjtBQUNuQyxZQUFZLCtFQUEwQixnQkFBZ0IsTUFBTTtBQUM1RCxnQkFBZ0Isd0VBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwREFBUTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBLGdEQUFnRCwrRkFBdUI7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw0Q0FBNEM7QUFDeEQsWUFBWSxPQUFPO0FBQ25CLGlCQUFpQixxQkFBcUI7QUFDdEMsWUFBWSwwQkFBMEI7QUFDdEM7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sNENBQTRDLHFDQUFxQztBQUN4RjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QywrRkFBdUI7QUFDOUQsS0FBSztBQUNMLGtCQUFrQiw0REFBcUI7QUFDdkMsUUFBUSwwRUFBbUI7QUFDM0IseUNBQXlDLHNHQUE4QjtBQUN2RSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVksc0ZBQWdDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV9mdW5jdGlvbnMvaW5kZXguanM/NjYzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdW5uYWJsZVBhc3N0aHJvdWdoIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9ydW5uYWJsZXNcIjtcbmltcG9ydCB7IGNvbnZlcnRUb09wZW5BSUZ1bmN0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS91dGlscy9mdW5jdGlvbl9jYWxsaW5nXCI7XG5pbXBvcnQgeyBBSU1lc3NhZ2UsIEZ1bmN0aW9uTWVzc2FnZSwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lc3NhZ2VzXCI7XG5pbXBvcnQgeyBDaGF0UHJvbXB0VGVtcGxhdGUsIEh1bWFuTWVzc2FnZVByb21wdFRlbXBsYXRlLCBNZXNzYWdlc1BsYWNlaG9sZGVyLCBTeXN0ZW1NZXNzYWdlUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBBZ2VudCwgQWdlbnRSdW5uYWJsZVNlcXVlbmNlIH0gZnJvbSBcIi4uL2FnZW50LmpzXCI7XG5pbXBvcnQgeyBQUkVGSVggfSBmcm9tIFwiLi9wcm9tcHQuanNcIjtcbmltcG9ydCB7IExMTUNoYWluIH0gZnJvbSBcIi4uLy4uL2NoYWlucy9sbG1fY2hhaW4uanNcIjtcbmltcG9ydCB7IE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyLCB9IGZyb20gXCIuLi9vcGVuYWkvb3V0cHV0X3BhcnNlci5qc1wiO1xuaW1wb3J0IHsgZm9ybWF0VG9PcGVuQUlGdW5jdGlvbk1lc3NhZ2VzIH0gZnJvbSBcIi4uL2Zvcm1hdF9zY3JhdGNocGFkL29wZW5haV9mdW5jdGlvbnMuanNcIjtcbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBhY3Rpb24gaXMgYSBGdW5jdGlvbnNBZ2VudEFjdGlvbi5cbiAqIEBwYXJhbSBhY3Rpb24gVGhlIGFjdGlvbiB0byBjaGVjay5cbiAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGFjdGlvbiBpcyBhIEZ1bmN0aW9uc0FnZW50QWN0aW9uLCBmYWxzZSBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb25zQWdlbnRBY3Rpb24oYWN0aW9uKSB7XG4gICAgcmV0dXJuIGFjdGlvbi5tZXNzYWdlTG9nICE9PSB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBfY29udmVydEFnZW50U3RlcFRvTWVzc2FnZXMoYWN0aW9uLCBvYnNlcnZhdGlvbikge1xuICAgIGlmIChpc0Z1bmN0aW9uc0FnZW50QWN0aW9uKGFjdGlvbikgJiYgYWN0aW9uLm1lc3NhZ2VMb2cgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gYWN0aW9uLm1lc3NhZ2VMb2c/LmNvbmNhdChuZXcgRnVuY3Rpb25NZXNzYWdlKG9ic2VydmF0aW9uLCBhY3Rpb24udG9vbCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFtuZXcgQUlNZXNzYWdlKGFjdGlvbi5sb2cpXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gX2Zvcm1hdEludGVybWVkaWF0ZVN0ZXBzKGludGVybWVkaWF0ZVN0ZXBzKSB7XG4gICAgcmV0dXJuIGludGVybWVkaWF0ZVN0ZXBzLmZsYXRNYXAoKHsgYWN0aW9uLCBvYnNlcnZhdGlvbiB9KSA9PiBfY29udmVydEFnZW50U3RlcFRvTWVzc2FnZXMoYWN0aW9uLCBvYnNlcnZhdGlvbikpO1xufVxuLyoqXG4gKiBDbGFzcyByZXByZXNlbnRpbmcgYW4gYWdlbnQgZm9yIHRoZSBPcGVuQUkgY2hhdCBtb2RlbCBpbiBMYW5nQ2hhaW4uIEl0XG4gKiBleHRlbmRzIHRoZSBBZ2VudCBjbGFzcyBhbmQgcHJvdmlkZXMgYWRkaXRpb25hbCBmdW5jdGlvbmFsaXR5IHNwZWNpZmljXG4gKiB0byB0aGUgT3BlbkFJQWdlbnQgdHlwZS5cbiAqXG4gKiBAZGVwcmVjYXRlZCBVc2UgdGhlIHtAbGluayBodHRwczovL2FwaS5qcy5sYW5nY2hhaW4uY29tL2Z1bmN0aW9ucy9sYW5nY2hhaW4uYWdlbnRzLmNyZWF0ZU9wZW5BSUZ1bmN0aW9uc0FnZW50Lmh0bWwgfCBjcmVhdGVPcGVuQUlGdW5jdGlvbnNBZ2VudCBtZXRob2QgaW5zdGVhZH0uXG4gKi9cbmV4cG9ydCBjbGFzcyBPcGVuQUlBZ2VudCBleHRlbmRzIEFnZW50IHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiT3BlbkFJQWdlbnRcIjtcbiAgICB9XG4gICAgX2FnZW50VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwib3BlbmFpLWZ1bmN0aW9uc1wiO1xuICAgIH1cbiAgICBvYnNlcnZhdGlvblByZWZpeCgpIHtcbiAgICAgICAgcmV0dXJuIFwiT2JzZXJ2YXRpb246IFwiO1xuICAgIH1cbiAgICBsbG1QcmVmaXgoKSB7XG4gICAgICAgIHJldHVybiBcIlRob3VnaHQ6XCI7XG4gICAgfVxuICAgIF9zdG9wKCkge1xuICAgICAgICByZXR1cm4gW1wiT2JzZXJ2YXRpb246XCJdO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICBzdXBlcih7IC4uLmlucHV0LCBvdXRwdXRQYXJzZXI6IHVuZGVmaW5lZCB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5cIiwgXCJhZ2VudHNcIiwgXCJvcGVuYWlcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRvb2xzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm91dHB1dFBhcnNlclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbmV3IE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyKClcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudG9vbHMgPSBpbnB1dC50b29scztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHByb21wdCBmb3IgdGhlIE9wZW5BSUFnZW50IHVzaW5nIHRoZSBwcm92aWRlZCB0b29scyBhbmRcbiAgICAgKiBmaWVsZHMuXG4gICAgICogQHBhcmFtIF90b29scyBUaGUgdG9vbHMgdG8gYmUgdXNlZCBpbiB0aGUgcHJvbXB0LlxuICAgICAqIEBwYXJhbSBmaWVsZHMgT3B0aW9uYWwgZmllbGRzIGZvciBjcmVhdGluZyB0aGUgcHJvbXB0LlxuICAgICAqIEByZXR1cm5zIEEgQmFzZVByb21wdFRlbXBsYXRlIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIGNyZWF0ZWQgcHJvbXB0LlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVQcm9tcHQoX3Rvb2xzLCBmaWVsZHMpIHtcbiAgICAgICAgY29uc3QgeyBwcmVmaXggPSBQUkVGSVggfSA9IGZpZWxkcyB8fCB7fTtcbiAgICAgICAgcmV0dXJuIENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tTWVzc2FnZXMoW1xuICAgICAgICAgICAgU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShwcmVmaXgpLFxuICAgICAgICAgICAgbmV3IE1lc3NhZ2VzUGxhY2Vob2xkZXIoXCJjaGF0X2hpc3RvcnlcIiksXG4gICAgICAgICAgICBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7aW5wdXR9XCIpLFxuICAgICAgICAgICAgbmV3IE1lc3NhZ2VzUGxhY2Vob2xkZXIoXCJhZ2VudF9zY3JhdGNocGFkXCIpLFxuICAgICAgICBdKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBPcGVuQUlBZ2VudCBmcm9tIGEgQmFzZUxhbmd1YWdlTW9kZWwgYW5kIGEgbGlzdCBvZiB0b29scy5cbiAgICAgKiBAcGFyYW0gbGxtIFRoZSBCYXNlTGFuZ3VhZ2VNb2RlbCB0byB1c2UuXG4gICAgICogQHBhcmFtIHRvb2xzIFRoZSB0b29scyB0byBiZSB1c2VkIGJ5IHRoZSBhZ2VudC5cbiAgICAgKiBAcGFyYW0gYXJncyBPcHRpb25hbCBhcmd1bWVudHMgZm9yIGNyZWF0aW5nIHRoZSBhZ2VudC5cbiAgICAgKiBAcmV0dXJucyBBbiBpbnN0YW5jZSBvZiBPcGVuQUlBZ2VudC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUxMTUFuZFRvb2xzKGxsbSwgdG9vbHMsIGFyZ3MpIHtcbiAgICAgICAgT3BlbkFJQWdlbnQudmFsaWRhdGVUb29scyh0b29scyk7XG4gICAgICAgIGlmIChsbG0uX21vZGVsVHlwZSgpICE9PSBcImJhc2VfY2hhdF9tb2RlbFwiIHx8IGxsbS5fbGxtVHlwZSgpICE9PSBcIm9wZW5haVwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJPcGVuQUlBZ2VudCByZXF1aXJlcyBhbiBPcGVuQUkgY2hhdCBtb2RlbFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9tcHQgPSBPcGVuQUlBZ2VudC5jcmVhdGVQcm9tcHQodG9vbHMsIGFyZ3MpO1xuICAgICAgICBjb25zdCBjaGFpbiA9IG5ldyBMTE1DaGFpbih7XG4gICAgICAgICAgICBwcm9tcHQsXG4gICAgICAgICAgICBsbG0sXG4gICAgICAgICAgICBjYWxsYmFja3M6IGFyZ3M/LmNhbGxiYWNrcyxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgT3BlbkFJQWdlbnQoe1xuICAgICAgICAgICAgbGxtQ2hhaW46IGNoYWluLFxuICAgICAgICAgICAgYWxsb3dlZFRvb2xzOiB0b29scy5tYXAoKHQpID0+IHQubmFtZSksXG4gICAgICAgICAgICB0b29scyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYSBzY3JhdGNoIHBhZCBmcm9tIGEgbGlzdCBvZiBhZ2VudCBzdGVwcy5cbiAgICAgKiBAcGFyYW0gc3RlcHMgVGhlIHN0ZXBzIHRvIGluY2x1ZGUgaW4gdGhlIHNjcmF0Y2ggcGFkLlxuICAgICAqIEByZXR1cm5zIEEgc3RyaW5nIG9yIGEgbGlzdCBvZiBCYXNlTWVzc2FnZXMgcmVwcmVzZW50aW5nIHRoZSBjb25zdHJ1Y3RlZCBzY3JhdGNoIHBhZC5cbiAgICAgKi9cbiAgICBhc3luYyBjb25zdHJ1Y3RTY3JhdGNoUGFkKHN0ZXBzKSB7XG4gICAgICAgIHJldHVybiBfZm9ybWF0SW50ZXJtZWRpYXRlU3RlcHMoc3RlcHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQbGFucyB0aGUgbmV4dCBhY3Rpb24gb3IgZmluaXNoIHN0YXRlIG9mIHRoZSBhZ2VudCBiYXNlZCBvbiB0aGVcbiAgICAgKiBwcm92aWRlZCBzdGVwcywgaW5wdXRzLCBhbmQgb3B0aW9uYWwgY2FsbGJhY2sgbWFuYWdlci5cbiAgICAgKiBAcGFyYW0gc3RlcHMgVGhlIHN0ZXBzIHRvIGNvbnNpZGVyIGluIHBsYW5uaW5nLlxuICAgICAqIEBwYXJhbSBpbnB1dHMgVGhlIGlucHV0cyB0byBjb25zaWRlciBpbiBwbGFubmluZy5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2tNYW5hZ2VyIE9wdGlvbmFsIENhbGxiYWNrTWFuYWdlciB0byB1c2UgaW4gcGxhbm5pbmcuXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2ggb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgcGxhbm5lZCBhY3Rpb24gb3IgZmluaXNoIHN0YXRlLlxuICAgICAqL1xuICAgIGFzeW5jIHBsYW4oc3RlcHMsIGlucHV0cywgY2FsbGJhY2tNYW5hZ2VyKSB7XG4gICAgICAgIC8vIEFkZCBzY3JhdGNocGFkIGFuZCBzdG9wIHRvIGlucHV0c1xuICAgICAgICBjb25zdCB0aG91Z2h0cyA9IGF3YWl0IHRoaXMuY29uc3RydWN0U2NyYXRjaFBhZChzdGVwcyk7XG4gICAgICAgIGNvbnN0IG5ld0lucHV0cyA9IHtcbiAgICAgICAgICAgIC4uLmlucHV0cyxcbiAgICAgICAgICAgIGFnZW50X3NjcmF0Y2hwYWQ6IHRob3VnaHRzLFxuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5fc3RvcCgpLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgbmV3SW5wdXRzLnN0b3AgPSB0aGlzLl9zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU3BsaXQgaW5wdXRzIGJldHdlZW4gcHJvbXB0IGFuZCBsbG1cbiAgICAgICAgY29uc3QgbGxtID0gdGhpcy5sbG1DaGFpbi5sbG07XG4gICAgICAgIGNvbnN0IHZhbHVlc0ZvclByb21wdCA9IHsgLi4ubmV3SW5wdXRzIH07XG4gICAgICAgIGNvbnN0IHZhbHVlc0ZvckxMTSA9IHtcbiAgICAgICAgICAgIGZ1bmN0aW9uczogdGhpcy50b29scy5tYXAoKHRvb2wpID0+IGNvbnZlcnRUb09wZW5BSUZ1bmN0aW9uKHRvb2wpKSxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgY2FsbEtleXMgPSBcImNhbGxLZXlzXCIgaW4gdGhpcy5sbG1DaGFpbi5sbG0gPyB0aGlzLmxsbUNoYWluLmxsbS5jYWxsS2V5cyA6IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBjYWxsS2V5cykge1xuICAgICAgICAgICAgaWYgKGtleSBpbiBpbnB1dHMpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXNGb3JMTE1ba2V5XSA9XG4gICAgICAgICAgICAgICAgICAgIGlucHV0c1trZXldO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSB2YWx1ZXNGb3JQcm9tcHRba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9tcHRWYWx1ZSA9IGF3YWl0IHRoaXMubGxtQ2hhaW4ucHJvbXB0LmZvcm1hdFByb21wdFZhbHVlKHZhbHVlc0ZvclByb21wdCk7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBhd2FpdCBsbG0uaW52b2tlKHByb21wdFZhbHVlLnRvQ2hhdE1lc3NhZ2VzKCksIHtcbiAgICAgICAgICAgIC4uLnZhbHVlc0ZvckxMTSxcbiAgICAgICAgICAgIGNhbGxiYWNrczogY2FsbGJhY2tNYW5hZ2VyLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0UGFyc2VyLnBhcnNlQUlNZXNzYWdlKG1lc3NhZ2UpO1xuICAgIH1cbn1cbi8qKlxuICogQ3JlYXRlIGFuIGFnZW50IHRoYXQgdXNlcyBPcGVuQUktc3R5bGUgZnVuY3Rpb24gY2FsbGluZy5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1zIHJlcXVpcmVkIHRvIGNyZWF0ZSB0aGUgYWdlbnQuIEluY2x1ZGVzIGFuIExMTSwgdG9vbHMsIGFuZCBwcm9tcHQuXG4gKiBAcmV0dXJucyBBIHJ1bm5hYmxlIHNlcXVlbmNlIHJlcHJlc2VudGluZyBhbiBhZ2VudC4gSXQgdGFrZXMgYXMgaW5wdXQgYWxsIHRoZSBzYW1lIGlucHV0XG4gKiAgICAgdmFyaWFibGVzIGFzIHRoZSBwcm9tcHQgcGFzc2VkIGluIGRvZXMuIEl0IHJldHVybnMgYXMgb3V0cHV0IGVpdGhlciBhblxuICogICAgIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBZ2VudEV4ZWN1dG9yLCBjcmVhdGVPcGVuQUlGdW5jdGlvbnNBZ2VudCB9IGZyb20gXCJsYW5nY2hhaW4vYWdlbnRzXCI7XG4gKiBpbXBvcnQgeyBwdWxsIH0gZnJvbSBcImxhbmdjaGFpbi9odWJcIjtcbiAqIGltcG9ydCB0eXBlIHsgQ2hhdFByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG4gKiBpbXBvcnQgeyBBSU1lc3NhZ2UsIEh1bWFuTWVzc2FnZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbiAqXG4gKiBpbXBvcnQgeyBDaGF0T3BlbkFJIH0gZnJvbSBcIkBsYW5nY2hhaW4vb3BlbmFpXCI7XG4gKlxuICogLy8gRGVmaW5lIHRoZSB0b29scyB0aGUgYWdlbnQgd2lsbCBoYXZlIGFjY2VzcyB0by5cbiAqIGNvbnN0IHRvb2xzID0gWy4uLl07XG4gKlxuICogLy8gR2V0IHRoZSBwcm9tcHQgdG8gdXNlIC0geW91IGNhbiBtb2RpZnkgdGhpcyFcbiAqIC8vIElmIHlvdSB3YW50IHRvIHNlZSB0aGUgcHJvbXB0IGluIGZ1bGwsIHlvdSBjYW4gYXQ6XG4gKiAvLyBodHRwczovL3NtaXRoLmxhbmdjaGFpbi5jb20vaHViL2h3Y2hhc2UxNy9vcGVuYWktZnVuY3Rpb25zLWFnZW50XG4gKiBjb25zdCBwcm9tcHQgPSBhd2FpdCBwdWxsPENoYXRQcm9tcHRUZW1wbGF0ZT4oXG4gKiAgIFwiaHdjaGFzZTE3L29wZW5haS1mdW5jdGlvbnMtYWdlbnRcIlxuICogKTtcbiAqXG4gKiBjb25zdCBsbG0gPSBuZXcgQ2hhdE9wZW5BSSh7XG4gKiAgIHRlbXBlcmF0dXJlOiAwLFxuICogfSk7XG4gKlxuICogY29uc3QgYWdlbnQgPSBhd2FpdCBjcmVhdGVPcGVuQUlGdW5jdGlvbnNBZ2VudCh7XG4gKiAgIGxsbSxcbiAqICAgdG9vbHMsXG4gKiAgIHByb21wdCxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IGFnZW50RXhlY3V0b3IgPSBuZXcgQWdlbnRFeGVjdXRvcih7XG4gKiAgIGFnZW50LFxuICogICB0b29scyxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFnZW50RXhlY3V0b3IuaW52b2tlKHtcbiAqICAgaW5wdXQ6IFwid2hhdCBpcyBMYW5nQ2hhaW4/XCIsXG4gKiB9KTtcbiAqXG4gKiAvLyBXaXRoIGNoYXQgaGlzdG9yeVxuICogY29uc3QgcmVzdWx0MiA9IGF3YWl0IGFnZW50RXhlY3V0b3IuaW52b2tlKHtcbiAqICAgaW5wdXQ6IFwid2hhdCdzIG15IG5hbWU/XCIsXG4gKiAgIGNoYXRfaGlzdG9yeTogW1xuICogICAgIG5ldyBIdW1hbk1lc3NhZ2UoXCJoaSEgbXkgbmFtZSBpcyBjb2JcIiksXG4gKiAgICAgbmV3IEFJTWVzc2FnZShcIkhlbGxvIENvYiEgSG93IGNhbiBJIGFzc2lzdCB5b3UgdG9kYXk/XCIpLFxuICogICBdLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9wZW5BSUZ1bmN0aW9uc0FnZW50KHsgbGxtLCB0b29scywgcHJvbXB0LCBzdHJlYW1SdW5uYWJsZSwgfSkge1xuICAgIGlmICghcHJvbXB0LmlucHV0VmFyaWFibGVzLmluY2x1ZGVzKFwiYWdlbnRfc2NyYXRjaHBhZFwiKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoW1xuICAgICAgICAgICAgYFByb21wdCBtdXN0IGhhdmUgYW4gaW5wdXQgdmFyaWFibGUgbmFtZWQgXCJhZ2VudF9zY3JhdGNocGFkXCIuYCxcbiAgICAgICAgICAgIGBGb3VuZCAke0pTT04uc3RyaW5naWZ5KHByb21wdC5pbnB1dFZhcmlhYmxlcyl9IGluc3RlYWQuYCxcbiAgICAgICAgXS5qb2luKFwiXFxuXCIpKTtcbiAgICB9XG4gICAgY29uc3QgbGxtV2l0aFRvb2xzID0gbGxtLmJpbmQoe1xuICAgICAgICBmdW5jdGlvbnM6IHRvb2xzLm1hcCgodG9vbCkgPT4gY29udmVydFRvT3BlbkFJRnVuY3Rpb24odG9vbCkpLFxuICAgIH0pO1xuICAgIGNvbnN0IGFnZW50ID0gQWdlbnRSdW5uYWJsZVNlcXVlbmNlLmZyb21SdW5uYWJsZXMoW1xuICAgICAgICBSdW5uYWJsZVBhc3N0aHJvdWdoLmFzc2lnbih7XG4gICAgICAgICAgICBhZ2VudF9zY3JhdGNocGFkOiAoaW5wdXQpID0+IGZvcm1hdFRvT3BlbkFJRnVuY3Rpb25NZXNzYWdlcyhpbnB1dC5zdGVwcyksXG4gICAgICAgIH0pLFxuICAgICAgICBwcm9tcHQsXG4gICAgICAgIGxsbVdpdGhUb29scyxcbiAgICAgICAgbmV3IE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyKCksXG4gICAgXSwge1xuICAgICAgICBuYW1lOiBcIk9wZW5BSUZ1bmN0aW9uc0FnZW50XCIsXG4gICAgICAgIHN0cmVhbVJ1bm5hYmxlLFxuICAgICAgICBzaW5nbGVBY3Rpb246IHRydWUsXG4gICAgfSk7XG4gICAgcmV0dXJuIGFnZW50O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/output_parser.js":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/output_parser.js ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIFunctionsAgentOutputParser: () => (/* binding */ OpenAIFunctionsAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n\n\n\n/**\n * @example\n * ```typescript\n *\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\"ai\", \"You are a helpful assistant\"],\n *   [\"human\", \"{input}\"],\n *   new MessagesPlaceholder(\"agent_scratchpad\"),\n * ]);\n *\n * const modelWithFunctions = new ChatOpenAI({\n *   modelName: \"gpt-4\",\n *   temperature: 0,\n * }).bind({\n *   functions: tools.map((tool) => convertToOpenAIFunction(tool)),\n * });\n *\n * const runnableAgent = RunnableSequence.from([\n *   {\n *     input: (i) => i.input,\n *     agent_scratchpad: (i) => formatAgentSteps(i.steps),\n *   },\n *   prompt,\n *   modelWithFunctions,\n *   new OpenAIFunctionsAgentOutputParser(),\n * ]);\n *\n * const result = await runnableAgent.invoke({\n *   input: \"What is the weather in New York?\",\n *   steps: agentSteps,\n * });\n *\n * ```\n */\nclass OpenAIFunctionsAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n    }\n    static lc_name() {\n        return \"OpenAIFunctionsAgentOutputParser\";\n    }\n    async parse(text) {\n        throw new Error(`OpenAIFunctionsAgentOutputParser can only parse messages.\\nPassed input: ${text}`);\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0] && (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(generations[0].message)) {\n            return this.parseAIMessage(generations[0].message);\n        }\n        throw new Error(\"parseResult on OpenAIFunctionsAgentOutputParser only works on ChatGeneration output\");\n    }\n    /**\n     * Parses the output message into a FunctionsAgentAction or AgentFinish\n     * object.\n     * @param message The BaseMessage to parse.\n     * @returns A FunctionsAgentAction or AgentFinish object.\n     */\n    parseAIMessage(message) {\n        if (message.content && typeof message.content !== \"string\") {\n            throw new Error(\"This agent cannot parse non-string model responses.\");\n        }\n        if (message.additional_kwargs.function_call) {\n            // eslint-disable-next-line prefer-destructuring\n            const function_call = message.additional_kwargs.function_call;\n            try {\n                const toolInput = function_call.arguments\n                    ? JSON.parse(function_call.arguments)\n                    : {};\n                return {\n                    tool: function_call.name,\n                    toolInput,\n                    log: `Invoking \"${function_call.name}\" with ${function_call.arguments ?? \"{}\"}\\n${message.content}`,\n                    messageLog: [message],\n                };\n            }\n            catch (error) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse function arguments from chat model response. Text: \"${function_call.arguments}\". ${error}`);\n            }\n        }\n        else {\n            return {\n                returnValues: { output: message.content },\n                log: message.content,\n            };\n        }\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside OpenAIFunctionsAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX2Z1bmN0aW9ucy9vdXRwdXRfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFDYztBQUNqQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNPLCtDQUErQyw4REFBdUI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9HQUFvRyxLQUFLO0FBQ3pHO0FBQ0E7QUFDQSwyQ0FBMkMsdUVBQWE7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1CQUFtQixTQUFTLDhCQUE4QixFQUFFLElBQUksZ0JBQWdCO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGlGQUFxQix3RUFBd0Usd0JBQXdCLEtBQUssTUFBTTtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx5QkFBeUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX2Z1bmN0aW9ucy9vdXRwdXRfcGFyc2VyLmpzP2M0NzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCYXNlTWVzc2FnZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbmltcG9ydCB7IE91dHB1dFBhcnNlckV4Y2VwdGlvbiB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvb3V0cHV0X3BhcnNlcnNcIjtcbmltcG9ydCB7IEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4uL3R5cGVzLmpzXCI7XG4vKipcbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKlxuICogY29uc3QgcHJvbXB0ID0gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhbXG4gKiAgIFtcImFpXCIsIFwiWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50XCJdLFxuICogICBbXCJodW1hblwiLCBcIntpbnB1dH1cIl0sXG4gKiAgIG5ldyBNZXNzYWdlc1BsYWNlaG9sZGVyKFwiYWdlbnRfc2NyYXRjaHBhZFwiKSxcbiAqIF0pO1xuICpcbiAqIGNvbnN0IG1vZGVsV2l0aEZ1bmN0aW9ucyA9IG5ldyBDaGF0T3BlbkFJKHtcbiAqICAgbW9kZWxOYW1lOiBcImdwdC00XCIsXG4gKiAgIHRlbXBlcmF0dXJlOiAwLFxuICogfSkuYmluZCh7XG4gKiAgIGZ1bmN0aW9uczogdG9vbHMubWFwKCh0b29sKSA9PiBjb252ZXJ0VG9PcGVuQUlGdW5jdGlvbih0b29sKSksXG4gKiB9KTtcbiAqXG4gKiBjb25zdCBydW5uYWJsZUFnZW50ID0gUnVubmFibGVTZXF1ZW5jZS5mcm9tKFtcbiAqICAge1xuICogICAgIGlucHV0OiAoaSkgPT4gaS5pbnB1dCxcbiAqICAgICBhZ2VudF9zY3JhdGNocGFkOiAoaSkgPT4gZm9ybWF0QWdlbnRTdGVwcyhpLnN0ZXBzKSxcbiAqICAgfSxcbiAqICAgcHJvbXB0LFxuICogICBtb2RlbFdpdGhGdW5jdGlvbnMsXG4gKiAgIG5ldyBPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlcigpLFxuICogXSk7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgcnVubmFibGVBZ2VudC5pbnZva2Uoe1xuICogICBpbnB1dDogXCJXaGF0IGlzIHRoZSB3ZWF0aGVyIGluIE5ldyBZb3JrP1wiLFxuICogICBzdGVwczogYWdlbnRTdGVwcyxcbiAqIH0pO1xuICpcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXIgZXh0ZW5kcyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwiYWdlbnRzXCIsIFwib3BlbmFpXCJdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXJcIjtcbiAgICB9XG4gICAgYXN5bmMgcGFyc2UodGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyIGNhbiBvbmx5IHBhcnNlIG1lc3NhZ2VzLlxcblBhc3NlZCBpbnB1dDogJHt0ZXh0fWApO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZVJlc3VsdChnZW5lcmF0aW9ucykge1xuICAgICAgICBpZiAoXCJtZXNzYWdlXCIgaW4gZ2VuZXJhdGlvbnNbMF0gJiYgaXNCYXNlTWVzc2FnZShnZW5lcmF0aW9uc1swXS5tZXNzYWdlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VBSU1lc3NhZ2UoZ2VuZXJhdGlvbnNbMF0ubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicGFyc2VSZXN1bHQgb24gT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXIgb25seSB3b3JrcyBvbiBDaGF0R2VuZXJhdGlvbiBvdXRwdXRcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgb3V0cHV0IG1lc3NhZ2UgaW50byBhIEZ1bmN0aW9uc0FnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoXG4gICAgICogb2JqZWN0LlxuICAgICAqIEBwYXJhbSBtZXNzYWdlIFRoZSBCYXNlTWVzc2FnZSB0byBwYXJzZS5cbiAgICAgKiBAcmV0dXJucyBBIEZ1bmN0aW9uc0FnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoIG9iamVjdC5cbiAgICAgKi9cbiAgICBwYXJzZUFJTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIGlmIChtZXNzYWdlLmNvbnRlbnQgJiYgdHlwZW9mIG1lc3NhZ2UuY29udGVudCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBhZ2VudCBjYW5ub3QgcGFyc2Ugbm9uLXN0cmluZyBtb2RlbCByZXNwb25zZXMuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtZXNzYWdlLmFkZGl0aW9uYWxfa3dhcmdzLmZ1bmN0aW9uX2NhbGwpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICAgICAgY29uc3QgZnVuY3Rpb25fY2FsbCA9IG1lc3NhZ2UuYWRkaXRpb25hbF9rd2FyZ3MuZnVuY3Rpb25fY2FsbDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdG9vbElucHV0ID0gZnVuY3Rpb25fY2FsbC5hcmd1bWVudHNcbiAgICAgICAgICAgICAgICAgICAgPyBKU09OLnBhcnNlKGZ1bmN0aW9uX2NhbGwuYXJndW1lbnRzKVxuICAgICAgICAgICAgICAgICAgICA6IHt9O1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHRvb2w6IGZ1bmN0aW9uX2NhbGwubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdG9vbElucHV0LFxuICAgICAgICAgICAgICAgICAgICBsb2c6IGBJbnZva2luZyBcIiR7ZnVuY3Rpb25fY2FsbC5uYW1lfVwiIHdpdGggJHtmdW5jdGlvbl9jYWxsLmFyZ3VtZW50cyA/PyBcInt9XCJ9XFxuJHttZXNzYWdlLmNvbnRlbnR9YCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUxvZzogW21lc3NhZ2VdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3V0cHV0UGFyc2VyRXhjZXB0aW9uKGBGYWlsZWQgdG8gcGFyc2UgZnVuY3Rpb24gYXJndW1lbnRzIGZyb20gY2hhdCBtb2RlbCByZXNwb25zZS4gVGV4dDogXCIke2Z1bmN0aW9uX2NhbGwuYXJndW1lbnRzfVwiLiAke2Vycm9yfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZXM6IHsgb3V0cHV0OiBtZXNzYWdlLmNvbnRlbnQgfSxcbiAgICAgICAgICAgICAgICBsb2c6IG1lc3NhZ2UuY29udGVudCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZXRGb3JtYXRJbnN0cnVjdGlvbnMgbm90IGltcGxlbWVudGVkIGluc2lkZSBPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlci5cIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/prompt.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/prompt.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `You are a helpful AI assistant.`;\nconst SUFFIX = ``;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX2Z1bmN0aW9ucy9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9vcGVuYWlfZnVuY3Rpb25zL3Byb21wdC5qcz80NjA2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQUkVGSVggPSBgWW91IGFyZSBhIGhlbHBmdWwgQUkgYXNzaXN0YW50LmA7XG5leHBvcnQgY29uc3QgU1VGRklYID0gYGA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/index.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/index.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIToolsAgentOutputParser: () => (/* reexport safe */ _output_parser_js__WEBPACK_IMPORTED_MODULE_3__.OpenAIToolsAgentOutputParser),\n/* harmony export */   createOpenAIToolsAgent: () => (/* binding */ createOpenAIToolsAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/utils/function_calling.js\");\n/* harmony import */ var _format_scratchpad_openai_tools_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format_scratchpad/openai_tools.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/output_parser.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n\n\n\n\n\n\n/**\n * Create an agent that uses OpenAI-style tool calling.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createOpenAIToolsAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/openai-tools-agent\n * const prompt = await pull<ChatPromptTemplate>(\n *   \"hwchase17/openai-tools-agent\"\n * );\n *\n * const llm = new ChatOpenAI({\n *   temperature: 0,\n *   modelName: \"gpt-3.5-turbo-1106\",\n * });\n *\n * const agent = await createOpenAIToolsAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   chat_history: [\n *     new HumanMessage(\"hi! my name is cob\"),\n *     new AIMessage(\"Hello Cob! How can I assist you today?\"),\n *   ],\n * });\n * ```\n */\nasync function createOpenAIToolsAgent({ llm, tools, prompt, streamRunnable, }) {\n    if (!prompt.inputVariables.includes(\"agent_scratchpad\")) {\n        throw new Error([\n            `Prompt must have an input variable named \"agent_scratchpad\".`,\n            `Found ${JSON.stringify(prompt.inputVariables)} instead.`,\n        ].join(\"\\n\"));\n    }\n    const modelWithTools = llm.bind({\n        tools: tools.map((tool) => (0,_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAITool)(tool)),\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_openai_tools_js__WEBPACK_IMPORTED_MODULE_2__.formatToOpenAIToolMessages)(input.steps),\n        }),\n        prompt,\n        modelWithTools,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_3__.OpenAIToolsAgentOutputParser(),\n    ], {\n        name: \"OpenAIToolsAgent\",\n        streamRunnable,\n        singleAction: false,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX3Rvb2xzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBZ0U7QUFDYTtBQUNLO0FBQ2Y7QUFDZjtBQUNaO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0NBQXdDO0FBQ3BELFlBQVksT0FBTztBQUNuQixpQkFBaUIscUJBQXFCO0FBQ3RDLFlBQVksMEJBQTBCO0FBQ3RDO0FBQ0EsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sd0NBQXdDLHFDQUFxQztBQUNwRjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQywyRkFBbUI7QUFDdEQsS0FBSztBQUNMLGtCQUFrQiw0REFBcUI7QUFDdkMsUUFBUSwwRUFBbUI7QUFDM0IseUNBQXlDLDhGQUEwQjtBQUNuRSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVksMkVBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV90b29scy9pbmRleC5qcz8wYjY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJ1bm5hYmxlUGFzc3Rocm91Z2ggfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3J1bm5hYmxlc1wiO1xuaW1wb3J0IHsgY29udmVydFRvT3BlbkFJVG9vbCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdXRpbHMvZnVuY3Rpb25fY2FsbGluZ1wiO1xuaW1wb3J0IHsgZm9ybWF0VG9PcGVuQUlUb29sTWVzc2FnZXMgfSBmcm9tIFwiLi4vZm9ybWF0X3NjcmF0Y2hwYWQvb3BlbmFpX3Rvb2xzLmpzXCI7XG5pbXBvcnQgeyBPcGVuQUlUb29sc0FnZW50T3V0cHV0UGFyc2VyLCB9IGZyb20gXCIuL291dHB1dF9wYXJzZXIuanNcIjtcbmltcG9ydCB7IEFnZW50UnVubmFibGVTZXF1ZW5jZSB9IGZyb20gXCIuLi9hZ2VudC5qc1wiO1xuZXhwb3J0IHsgT3BlbkFJVG9vbHNBZ2VudE91dHB1dFBhcnNlciB9O1xuLyoqXG4gKiBDcmVhdGUgYW4gYWdlbnQgdGhhdCB1c2VzIE9wZW5BSS1zdHlsZSB0b29sIGNhbGxpbmcuXG4gKiBAcGFyYW0gcGFyYW1zIFBhcmFtcyByZXF1aXJlZCB0byBjcmVhdGUgdGhlIGFnZW50LiBJbmNsdWRlcyBhbiBMTE0sIHRvb2xzLCBhbmQgcHJvbXB0LlxuICogQHJldHVybnMgQSBydW5uYWJsZSBzZXF1ZW5jZSByZXByZXNlbnRpbmcgYW4gYWdlbnQuIEl0IHRha2VzIGFzIGlucHV0IGFsbCB0aGUgc2FtZSBpbnB1dFxuICogICAgIHZhcmlhYmxlcyBhcyB0aGUgcHJvbXB0IHBhc3NlZCBpbiBkb2VzLiBJdCByZXR1cm5zIGFzIG91dHB1dCBlaXRoZXIgYW5cbiAqICAgICBBZ2VudEFjdGlvbiBvciBBZ2VudEZpbmlzaC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQWdlbnRFeGVjdXRvciwgY3JlYXRlT3BlbkFJVG9vbHNBZ2VudCB9IGZyb20gXCJsYW5nY2hhaW4vYWdlbnRzXCI7XG4gKiBpbXBvcnQgeyBwdWxsIH0gZnJvbSBcImxhbmdjaGFpbi9odWJcIjtcbiAqIGltcG9ydCB0eXBlIHsgQ2hhdFByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG4gKiBpbXBvcnQgeyBBSU1lc3NhZ2UsIEh1bWFuTWVzc2FnZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbiAqXG4gKiBpbXBvcnQgeyBDaGF0T3BlbkFJIH0gZnJvbSBcIkBsYW5nY2hhaW4vb3BlbmFpXCI7XG4gKlxuICogLy8gRGVmaW5lIHRoZSB0b29scyB0aGUgYWdlbnQgd2lsbCBoYXZlIGFjY2VzcyB0by5cbiAqIGNvbnN0IHRvb2xzID0gWy4uLl07XG4gKlxuICogLy8gR2V0IHRoZSBwcm9tcHQgdG8gdXNlIC0geW91IGNhbiBtb2RpZnkgdGhpcyFcbiAqIC8vIElmIHlvdSB3YW50IHRvIHNlZSB0aGUgcHJvbXB0IGluIGZ1bGwsIHlvdSBjYW4gYXQ6XG4gKiAvLyBodHRwczovL3NtaXRoLmxhbmdjaGFpbi5jb20vaHViL2h3Y2hhc2UxNy9vcGVuYWktdG9vbHMtYWdlbnRcbiAqIGNvbnN0IHByb21wdCA9IGF3YWl0IHB1bGw8Q2hhdFByb21wdFRlbXBsYXRlPihcbiAqICAgXCJod2NoYXNlMTcvb3BlbmFpLXRvb2xzLWFnZW50XCJcbiAqICk7XG4gKlxuICogY29uc3QgbGxtID0gbmV3IENoYXRPcGVuQUkoe1xuICogICB0ZW1wZXJhdHVyZTogMCxcbiAqICAgbW9kZWxOYW1lOiBcImdwdC0zLjUtdHVyYm8tMTEwNlwiLFxuICogfSk7XG4gKlxuICogY29uc3QgYWdlbnQgPSBhd2FpdCBjcmVhdGVPcGVuQUlUb29sc0FnZW50KHtcbiAqICAgbGxtLFxuICogICB0b29scyxcbiAqICAgcHJvbXB0LFxuICogfSk7XG4gKlxuICogY29uc3QgYWdlbnRFeGVjdXRvciA9IG5ldyBBZ2VudEV4ZWN1dG9yKHtcbiAqICAgYWdlbnQsXG4gKiAgIHRvb2xzLFxuICogfSk7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgYWdlbnRFeGVjdXRvci5pbnZva2Uoe1xuICogICBpbnB1dDogXCJ3aGF0IGlzIExhbmdDaGFpbj9cIixcbiAqIH0pO1xuICpcbiAqIC8vIFdpdGggY2hhdCBoaXN0b3J5XG4gKiBjb25zdCByZXN1bHQyID0gYXdhaXQgYWdlbnRFeGVjdXRvci5pbnZva2Uoe1xuICogICBpbnB1dDogXCJ3aGF0J3MgbXkgbmFtZT9cIixcbiAqICAgY2hhdF9oaXN0b3J5OiBbXG4gKiAgICAgbmV3IEh1bWFuTWVzc2FnZShcImhpISBteSBuYW1lIGlzIGNvYlwiKSxcbiAqICAgICBuZXcgQUlNZXNzYWdlKFwiSGVsbG8gQ29iISBIb3cgY2FuIEkgYXNzaXN0IHlvdSB0b2RheT9cIiksXG4gKiAgIF0sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlT3BlbkFJVG9vbHNBZ2VudCh7IGxsbSwgdG9vbHMsIHByb21wdCwgc3RyZWFtUnVubmFibGUsIH0pIHtcbiAgICBpZiAoIXByb21wdC5pbnB1dFZhcmlhYmxlcy5pbmNsdWRlcyhcImFnZW50X3NjcmF0Y2hwYWRcIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFtcbiAgICAgICAgICAgIGBQcm9tcHQgbXVzdCBoYXZlIGFuIGlucHV0IHZhcmlhYmxlIG5hbWVkIFwiYWdlbnRfc2NyYXRjaHBhZFwiLmAsXG4gICAgICAgICAgICBgRm91bmQgJHtKU09OLnN0cmluZ2lmeShwcm9tcHQuaW5wdXRWYXJpYWJsZXMpfSBpbnN0ZWFkLmAsXG4gICAgICAgIF0uam9pbihcIlxcblwiKSk7XG4gICAgfVxuICAgIGNvbnN0IG1vZGVsV2l0aFRvb2xzID0gbGxtLmJpbmQoe1xuICAgICAgICB0b29sczogdG9vbHMubWFwKCh0b29sKSA9PiBjb252ZXJ0VG9PcGVuQUlUb29sKHRvb2wpKSxcbiAgICB9KTtcbiAgICBjb25zdCBhZ2VudCA9IEFnZW50UnVubmFibGVTZXF1ZW5jZS5mcm9tUnVubmFibGVzKFtcbiAgICAgICAgUnVubmFibGVQYXNzdGhyb3VnaC5hc3NpZ24oe1xuICAgICAgICAgICAgYWdlbnRfc2NyYXRjaHBhZDogKGlucHV0KSA9PiBmb3JtYXRUb09wZW5BSVRvb2xNZXNzYWdlcyhpbnB1dC5zdGVwcyksXG4gICAgICAgIH0pLFxuICAgICAgICBwcm9tcHQsXG4gICAgICAgIG1vZGVsV2l0aFRvb2xzLFxuICAgICAgICBuZXcgT3BlbkFJVG9vbHNBZ2VudE91dHB1dFBhcnNlcigpLFxuICAgIF0sIHtcbiAgICAgICAgbmFtZTogXCJPcGVuQUlUb29sc0FnZW50XCIsXG4gICAgICAgIHN0cmVhbVJ1bm5hYmxlLFxuICAgICAgICBzaW5nbGVBY3Rpb246IGZhbHNlLFxuICAgIH0pO1xuICAgIHJldHVybiBhZ2VudDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/output_parser.js":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/output_parser.js ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIToolsAgentOutputParser: () => (/* binding */ OpenAIToolsAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n\n\n\n/**\n * @example\n * ```typescript\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\"ai\", \"You are a helpful assistant\"],\n *   [\"human\", \"{input}\"],\n *   new MessagesPlaceholder(\"agent_scratchpad\"),\n * ]);\n *\n * const runnableAgent = RunnableSequence.from([\n *   {\n *     input: (i: { input: string; steps: ToolsAgentStep[] }) => i.input,\n *     agent_scratchpad: (i: { input: string; steps: ToolsAgentStep[] }) =>\n *       formatToOpenAIToolMessages(i.steps),\n *   },\n *   prompt,\n *   new ChatOpenAI({\n *     modelName: \"gpt-3.5-turbo-1106\",\n *     temperature: 0,\n *   }).bind({ tools: tools.map((tool) => convertToOpenAITool(tool)) }),\n *   new OpenAIToolsAgentOutputParser(),\n * ]).withConfig({ runName: \"OpenAIToolsAgent\" });\n *\n * const result = await runnableAgent.invoke({\n *   input:\n *     \"What is the sum of the current temperature in San Francisco, New York, and Tokyo?\",\n * });\n * ```\n */\nclass OpenAIToolsAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentMultiActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n    }\n    static lc_name() {\n        return \"OpenAIToolsAgentOutputParser\";\n    }\n    async parse(text) {\n        throw new Error(`OpenAIFunctionsAgentOutputParser can only parse messages.\\nPassed input: ${text}`);\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0] && (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(generations[0].message)) {\n            return this.parseAIMessage(generations[0].message);\n        }\n        throw new Error(\"parseResult on OpenAIFunctionsAgentOutputParser only works on ChatGeneration output\");\n    }\n    /**\n     * Parses the output message into a ToolsAgentAction[] or AgentFinish\n     * object.\n     * @param message The BaseMessage to parse.\n     * @returns A ToolsAgentAction[] or AgentFinish object.\n     */\n    parseAIMessage(message) {\n        if (message.content && typeof message.content !== \"string\") {\n            throw new Error(\"This agent cannot parse non-string model responses.\");\n        }\n        if (message.additional_kwargs.tool_calls) {\n            const toolCalls = message.additional_kwargs.tool_calls;\n            try {\n                return toolCalls.map((toolCall, i) => {\n                    const toolInput = toolCall.function.arguments\n                        ? JSON.parse(toolCall.function.arguments)\n                        : {};\n                    const messageLog = i === 0 ? [message] : [];\n                    return {\n                        tool: toolCall.function.name,\n                        toolInput,\n                        toolCallId: toolCall.id,\n                        log: `Invoking \"${toolCall.function.name}\" with ${toolCall.function.arguments ?? \"{}\"}\\n${message.content}`,\n                        messageLog,\n                    };\n                });\n            }\n            catch (error) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse tool arguments from chat model response. Text: \"${JSON.stringify(toolCalls)}\". ${error}`);\n            }\n        }\n        else {\n            return {\n                returnValues: { output: message.content },\n                log: message.content,\n            };\n        }\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside OpenAIToolsAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX3Rvb2xzL291dHB1dF9wYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RDtBQUNjO0FBQ1o7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZUFBZSx5QkFBeUI7QUFDNUQsK0JBQStCLGVBQWUseUJBQXlCO0FBQ3ZFO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxTQUFTLHVEQUF1RDtBQUN0RTtBQUNBLG1CQUFtQiw2QkFBNkI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPLDJDQUEyQyxtRUFBNEI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9HQUFvRyxLQUFLO0FBQ3pHO0FBQ0E7QUFDQSwyQ0FBMkMsdUVBQWE7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx1QkFBdUIsU0FBUyxrQ0FBa0MsRUFBRSxJQUFJLGdCQUFnQjtBQUNsSTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSwwQkFBMEIsaUZBQXFCLG9FQUFvRSwwQkFBMEIsS0FBSyxNQUFNO0FBQ3hKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHlCQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9vcGVuYWlfdG9vbHMvb3V0cHV0X3BhcnNlci5qcz9iOTJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQmFzZU1lc3NhZ2UgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lc3NhZ2VzXCI7XG5pbXBvcnQgeyBPdXRwdXRQYXJzZXJFeGNlcHRpb24gfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG5pbXBvcnQgeyBBZ2VudE11bHRpQWN0aW9uT3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4uL3R5cGVzLmpzXCI7XG4vKipcbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBjb25zdCBwcm9tcHQgPSBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKFtcbiAqICAgW1wiYWlcIiwgXCJZb3UgYXJlIGEgaGVscGZ1bCBhc3Npc3RhbnRcIl0sXG4gKiAgIFtcImh1bWFuXCIsIFwie2lucHV0fVwiXSxcbiAqICAgbmV3IE1lc3NhZ2VzUGxhY2Vob2xkZXIoXCJhZ2VudF9zY3JhdGNocGFkXCIpLFxuICogXSk7XG4gKlxuICogY29uc3QgcnVubmFibGVBZ2VudCA9IFJ1bm5hYmxlU2VxdWVuY2UuZnJvbShbXG4gKiAgIHtcbiAqICAgICBpbnB1dDogKGk6IHsgaW5wdXQ6IHN0cmluZzsgc3RlcHM6IFRvb2xzQWdlbnRTdGVwW10gfSkgPT4gaS5pbnB1dCxcbiAqICAgICBhZ2VudF9zY3JhdGNocGFkOiAoaTogeyBpbnB1dDogc3RyaW5nOyBzdGVwczogVG9vbHNBZ2VudFN0ZXBbXSB9KSA9PlxuICogICAgICAgZm9ybWF0VG9PcGVuQUlUb29sTWVzc2FnZXMoaS5zdGVwcyksXG4gKiAgIH0sXG4gKiAgIHByb21wdCxcbiAqICAgbmV3IENoYXRPcGVuQUkoe1xuICogICAgIG1vZGVsTmFtZTogXCJncHQtMy41LXR1cmJvLTExMDZcIixcbiAqICAgICB0ZW1wZXJhdHVyZTogMCxcbiAqICAgfSkuYmluZCh7IHRvb2xzOiB0b29scy5tYXAoKHRvb2wpID0+IGNvbnZlcnRUb09wZW5BSVRvb2wodG9vbCkpIH0pLFxuICogICBuZXcgT3BlbkFJVG9vbHNBZ2VudE91dHB1dFBhcnNlcigpLFxuICogXSkud2l0aENvbmZpZyh7IHJ1bk5hbWU6IFwiT3BlbkFJVG9vbHNBZ2VudFwiIH0pO1xuICpcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJ1bm5hYmxlQWdlbnQuaW52b2tlKHtcbiAqICAgaW5wdXQ6XG4gKiAgICAgXCJXaGF0IGlzIHRoZSBzdW0gb2YgdGhlIGN1cnJlbnQgdGVtcGVyYXR1cmUgaW4gU2FuIEZyYW5jaXNjbywgTmV3IFlvcmssIGFuZCBUb2t5bz9cIixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBPcGVuQUlUb29sc0FnZW50T3V0cHV0UGFyc2VyIGV4dGVuZHMgQWdlbnRNdWx0aUFjdGlvbk91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwiYWdlbnRzXCIsIFwib3BlbmFpXCJdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiT3BlbkFJVG9vbHNBZ2VudE91dHB1dFBhcnNlclwiO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXIgY2FuIG9ubHkgcGFyc2UgbWVzc2FnZXMuXFxuUGFzc2VkIGlucHV0OiAke3RleHR9YCk7XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlUmVzdWx0KGdlbmVyYXRpb25zKSB7XG4gICAgICAgIGlmIChcIm1lc3NhZ2VcIiBpbiBnZW5lcmF0aW9uc1swXSAmJiBpc0Jhc2VNZXNzYWdlKGdlbmVyYXRpb25zWzBdLm1lc3NhZ2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJzZUFJTWVzc2FnZShnZW5lcmF0aW9uc1swXS5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwYXJzZVJlc3VsdCBvbiBPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlciBvbmx5IHdvcmtzIG9uIENoYXRHZW5lcmF0aW9uIG91dHB1dFwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHRoZSBvdXRwdXQgbWVzc2FnZSBpbnRvIGEgVG9vbHNBZ2VudEFjdGlvbltdIG9yIEFnZW50RmluaXNoXG4gICAgICogb2JqZWN0LlxuICAgICAqIEBwYXJhbSBtZXNzYWdlIFRoZSBCYXNlTWVzc2FnZSB0byBwYXJzZS5cbiAgICAgKiBAcmV0dXJucyBBIFRvb2xzQWdlbnRBY3Rpb25bXSBvciBBZ2VudEZpbmlzaCBvYmplY3QuXG4gICAgICovXG4gICAgcGFyc2VBSU1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICBpZiAobWVzc2FnZS5jb250ZW50ICYmIHR5cGVvZiBtZXNzYWdlLmNvbnRlbnQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgYWdlbnQgY2Fubm90IHBhcnNlIG5vbi1zdHJpbmcgbW9kZWwgcmVzcG9uc2VzLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWVzc2FnZS5hZGRpdGlvbmFsX2t3YXJncy50b29sX2NhbGxzKSB7XG4gICAgICAgICAgICBjb25zdCB0b29sQ2FsbHMgPSBtZXNzYWdlLmFkZGl0aW9uYWxfa3dhcmdzLnRvb2xfY2FsbHM7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0b29sQ2FsbHMubWFwKCh0b29sQ2FsbCwgaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0b29sSW5wdXQgPSB0b29sQ2FsbC5mdW5jdGlvbi5hcmd1bWVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgID8gSlNPTi5wYXJzZSh0b29sQ2FsbC5mdW5jdGlvbi5hcmd1bWVudHMpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHt9O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlTG9nID0gaSA9PT0gMCA/IFttZXNzYWdlXSA6IFtdO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG9vbDogdG9vbENhbGwuZnVuY3Rpb24ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xJbnB1dCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xDYWxsSWQ6IHRvb2xDYWxsLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9nOiBgSW52b2tpbmcgXCIke3Rvb2xDYWxsLmZ1bmN0aW9uLm5hbWV9XCIgd2l0aCAke3Rvb2xDYWxsLmZ1bmN0aW9uLmFyZ3VtZW50cyA/PyBcInt9XCJ9XFxuJHttZXNzYWdlLmNvbnRlbnR9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VMb2csXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3V0cHV0UGFyc2VyRXhjZXB0aW9uKGBGYWlsZWQgdG8gcGFyc2UgdG9vbCBhcmd1bWVudHMgZnJvbSBjaGF0IG1vZGVsIHJlc3BvbnNlLiBUZXh0OiBcIiR7SlNPTi5zdHJpbmdpZnkodG9vbENhbGxzKX1cIi4gJHtlcnJvcn1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuVmFsdWVzOiB7IG91dHB1dDogbWVzc2FnZS5jb250ZW50IH0sXG4gICAgICAgICAgICAgICAgbG9nOiBtZXNzYWdlLmNvbnRlbnQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zIG5vdCBpbXBsZW1lbnRlZCBpbnNpZGUgT3BlbkFJVG9vbHNBZ2VudE91dHB1dFBhcnNlci5cIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_tools/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/index.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/index.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReactAgent: () => (/* binding */ createReactAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _tools_render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tools/render.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/render.js\");\n/* harmony import */ var _format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format_scratchpad/log.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/log.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/output_parser.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n\n\n\n\n\n/**\n * Create an agent that uses ReAct prompting.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createReactAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { PromptTemplate } from \"@langchain/core/prompts\";\n *\n * import { OpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/react\n * const prompt = await pull<PromptTemplate>(\"hwchase17/react\");\n *\n * const llm = new OpenAI({\n *   temperature: 0,\n * });\n *\n * const agent = await createReactAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n * ```\n */\nasync function createReactAgent({ llm, tools, prompt, streamRunnable, }) {\n    const missingVariables = [\"tools\", \"tool_names\", \"agent_scratchpad\"].filter((v) => !prompt.inputVariables.includes(v));\n    if (missingVariables.length > 0) {\n        throw new Error(`Provided prompt is missing required input variables: ${JSON.stringify(missingVariables)}`);\n    }\n    const toolNames = tools.map((tool) => tool.name);\n    const partialedPrompt = await prompt.partial({\n        tools: (0,_tools_render_js__WEBPACK_IMPORTED_MODULE_1__.renderTextDescription)(tools),\n        tool_names: toolNames.join(\", \"),\n    });\n    // TODO: Add .bind to core runnable interface.\n    const llmWithStop = llm.bind({\n        stop: [\"\\nObservation:\"],\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_2__.formatLogToString)(input.steps),\n        }),\n        partialedPrompt,\n        llmWithStop,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_3__.ReActSingleInputOutputParser({\n            toolNames,\n        }),\n    ], {\n        name: \"ReactAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvcmVhY3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdFO0FBQ0Y7QUFDRTtBQUNFO0FBQ2Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrQ0FBa0M7QUFDOUMsWUFBWSxPQUFPO0FBQ25CLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sa0NBQWtDLHFDQUFxQztBQUM5RTtBQUNBO0FBQ0EsZ0ZBQWdGLGlDQUFpQztBQUNqSDtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVFQUFxQjtBQUNwQztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsa0JBQWtCLDREQUFxQjtBQUN2QyxRQUFRLDBFQUFtQjtBQUMzQix5Q0FBeUMsNEVBQWlCO0FBQzFELFNBQVM7QUFDVDtBQUNBO0FBQ0EsWUFBWSwyRUFBNEI7QUFDeEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvcmVhY3QvaW5kZXguanM/YTUxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdW5uYWJsZVBhc3N0aHJvdWdoIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9ydW5uYWJsZXNcIjtcbmltcG9ydCB7IHJlbmRlclRleHREZXNjcmlwdGlvbiB9IGZyb20gXCIuLi8uLi90b29scy9yZW5kZXIuanNcIjtcbmltcG9ydCB7IGZvcm1hdExvZ1RvU3RyaW5nIH0gZnJvbSBcIi4uL2Zvcm1hdF9zY3JhdGNocGFkL2xvZy5qc1wiO1xuaW1wb3J0IHsgUmVBY3RTaW5nbGVJbnB1dE91dHB1dFBhcnNlciB9IGZyb20gXCIuL291dHB1dF9wYXJzZXIuanNcIjtcbmltcG9ydCB7IEFnZW50UnVubmFibGVTZXF1ZW5jZSB9IGZyb20gXCIuLi9hZ2VudC5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgYW4gYWdlbnQgdGhhdCB1c2VzIFJlQWN0IHByb21wdGluZy5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1zIHJlcXVpcmVkIHRvIGNyZWF0ZSB0aGUgYWdlbnQuIEluY2x1ZGVzIGFuIExMTSwgdG9vbHMsIGFuZCBwcm9tcHQuXG4gKiBAcmV0dXJucyBBIHJ1bm5hYmxlIHNlcXVlbmNlIHJlcHJlc2VudGluZyBhbiBhZ2VudC4gSXQgdGFrZXMgYXMgaW5wdXQgYWxsIHRoZSBzYW1lIGlucHV0XG4gKiAgICAgdmFyaWFibGVzIGFzIHRoZSBwcm9tcHQgcGFzc2VkIGluIGRvZXMuIEl0IHJldHVybnMgYXMgb3V0cHV0IGVpdGhlciBhblxuICogICAgIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBZ2VudEV4ZWN1dG9yLCBjcmVhdGVSZWFjdEFnZW50IH0gZnJvbSBcImxhbmdjaGFpbi9hZ2VudHNcIjtcbiAqIGltcG9ydCB7IHB1bGwgfSBmcm9tIFwibGFuZ2NoYWluL2h1YlwiO1xuICogaW1wb3J0IHR5cGUgeyBQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuICpcbiAqIGltcG9ydCB7IE9wZW5BSSB9IGZyb20gXCJAbGFuZ2NoYWluL29wZW5haVwiO1xuICpcbiAqIC8vIERlZmluZSB0aGUgdG9vbHMgdGhlIGFnZW50IHdpbGwgaGF2ZSBhY2Nlc3MgdG8uXG4gKiBjb25zdCB0b29scyA9IFsuLi5dO1xuICpcbiAqIC8vIEdldCB0aGUgcHJvbXB0IHRvIHVzZSAtIHlvdSBjYW4gbW9kaWZ5IHRoaXMhXG4gKiAvLyBJZiB5b3Ugd2FudCB0byBzZWUgdGhlIHByb21wdCBpbiBmdWxsLCB5b3UgY2FuIGF0OlxuICogLy8gaHR0cHM6Ly9zbWl0aC5sYW5nY2hhaW4uY29tL2h1Yi9od2NoYXNlMTcvcmVhY3RcbiAqIGNvbnN0IHByb21wdCA9IGF3YWl0IHB1bGw8UHJvbXB0VGVtcGxhdGU+KFwiaHdjaGFzZTE3L3JlYWN0XCIpO1xuICpcbiAqIGNvbnN0IGxsbSA9IG5ldyBPcGVuQUkoe1xuICogICB0ZW1wZXJhdHVyZTogMCxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IGFnZW50ID0gYXdhaXQgY3JlYXRlUmVhY3RBZ2VudCh7XG4gKiAgIGxsbSxcbiAqICAgdG9vbHMsXG4gKiAgIHByb21wdCxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IGFnZW50RXhlY3V0b3IgPSBuZXcgQWdlbnRFeGVjdXRvcih7XG4gKiAgIGFnZW50LFxuICogICB0b29scyxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFnZW50RXhlY3V0b3IuaW52b2tlKHtcbiAqICAgaW5wdXQ6IFwid2hhdCBpcyBMYW5nQ2hhaW4/XCIsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlUmVhY3RBZ2VudCh7IGxsbSwgdG9vbHMsIHByb21wdCwgc3RyZWFtUnVubmFibGUsIH0pIHtcbiAgICBjb25zdCBtaXNzaW5nVmFyaWFibGVzID0gW1widG9vbHNcIiwgXCJ0b29sX25hbWVzXCIsIFwiYWdlbnRfc2NyYXRjaHBhZFwiXS5maWx0ZXIoKHYpID0+ICFwcm9tcHQuaW5wdXRWYXJpYWJsZXMuaW5jbHVkZXModikpO1xuICAgIGlmIChtaXNzaW5nVmFyaWFibGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm92aWRlZCBwcm9tcHQgaXMgbWlzc2luZyByZXF1aXJlZCBpbnB1dCB2YXJpYWJsZXM6ICR7SlNPTi5zdHJpbmdpZnkobWlzc2luZ1ZhcmlhYmxlcyl9YCk7XG4gICAgfVxuICAgIGNvbnN0IHRvb2xOYW1lcyA9IHRvb2xzLm1hcCgodG9vbCkgPT4gdG9vbC5uYW1lKTtcbiAgICBjb25zdCBwYXJ0aWFsZWRQcm9tcHQgPSBhd2FpdCBwcm9tcHQucGFydGlhbCh7XG4gICAgICAgIHRvb2xzOiByZW5kZXJUZXh0RGVzY3JpcHRpb24odG9vbHMpLFxuICAgICAgICB0b29sX25hbWVzOiB0b29sTmFtZXMuam9pbihcIiwgXCIpLFxuICAgIH0pO1xuICAgIC8vIFRPRE86IEFkZCAuYmluZCB0byBjb3JlIHJ1bm5hYmxlIGludGVyZmFjZS5cbiAgICBjb25zdCBsbG1XaXRoU3RvcCA9IGxsbS5iaW5kKHtcbiAgICAgICAgc3RvcDogW1wiXFxuT2JzZXJ2YXRpb246XCJdLFxuICAgIH0pO1xuICAgIGNvbnN0IGFnZW50ID0gQWdlbnRSdW5uYWJsZVNlcXVlbmNlLmZyb21SdW5uYWJsZXMoW1xuICAgICAgICBSdW5uYWJsZVBhc3N0aHJvdWdoLmFzc2lnbih7XG4gICAgICAgICAgICBhZ2VudF9zY3JhdGNocGFkOiAoaW5wdXQpID0+IGZvcm1hdExvZ1RvU3RyaW5nKGlucHV0LnN0ZXBzKSxcbiAgICAgICAgfSksXG4gICAgICAgIHBhcnRpYWxlZFByb21wdCxcbiAgICAgICAgbGxtV2l0aFN0b3AsXG4gICAgICAgIG5ldyBSZUFjdFNpbmdsZUlucHV0T3V0cHV0UGFyc2VyKHtcbiAgICAgICAgICAgIHRvb2xOYW1lcyxcbiAgICAgICAgfSksXG4gICAgXSwge1xuICAgICAgICBuYW1lOiBcIlJlYWN0QWdlbnRcIixcbiAgICAgICAgc3RyZWFtUnVubmFibGUsXG4gICAgICAgIHNpbmdsZUFjdGlvbjogdHJ1ZSxcbiAgICB9KTtcbiAgICByZXR1cm4gYWdlbnQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/output_parser.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/output_parser.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReActSingleInputOutputParser: () => (/* binding */ ReActSingleInputOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/prompt.js\");\n\n\n\n\nconst FINAL_ANSWER_ACTION = \"Final Answer:\";\nconst FINAL_ANSWER_AND_PARSABLE_ACTION_ERROR_MESSAGE = \"Parsing LLM output produced both a final answer and a parse-able action:\";\n/**\n * Parses ReAct-style LLM calls that have a single tool input.\n *\n * Expects output to be in one of two formats.\n *\n * If the output signals that an action should be taken,\n * should be in the below format. This will result in an AgentAction\n * being returned.\n *\n * ```\n * Thought: agent thought here\n * Action: search\n * Action Input: what is the temperature in SF?\n * ```\n *\n * If the output signals that a final answer should be given,\n * should be in the below format. This will result in an AgentFinish\n * being returned.\n *\n * ```\n * Thought: agent thought here\n * Final Answer: The temperature is 100 degrees\n * ```\n * @example\n * ```typescript\n *\n * const runnableAgent = RunnableSequence.from([\n *   ...rest of runnable\n *   new ReActSingleInputOutputParser({ toolNames: [\"SerpAPI\", \"Calculator\"] }),\n * ]);\n * const agent = AgentExecutor.fromAgentAndTools({\n *   agent: runnableAgent,\n *   tools: [new SerpAPI(), new Calculator()],\n * });\n * const result = await agent.invoke({\n *   input: \"whats the weather in pomfret?\",\n * });\n * ```\n */\nclass ReActSingleInputOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"react\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    /**\n     * Parses the given text into an AgentAction or AgentFinish object. If an\n     * output fixing parser is defined, uses it to parse the text.\n     * @param text Text to parse.\n     * @returns Promise that resolves to an AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        const includesAnswer = text.includes(FINAL_ANSWER_ACTION);\n        const regex = /Action\\s*\\d*\\s*:[\\s]*(.*?)[\\s]*Action\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)/;\n        const actionMatch = text.match(regex);\n        if (actionMatch) {\n            if (includesAnswer) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`${FINAL_ANSWER_AND_PARSABLE_ACTION_ERROR_MESSAGE}: ${text}`);\n            }\n            const action = actionMatch[1];\n            const actionInput = actionMatch[2];\n            const toolInput = actionInput.trim().replace(/\"/g, \"\");\n            return {\n                tool: action,\n                toolInput,\n                log: text,\n            };\n        }\n        if (includesAnswer) {\n            const finalAnswerText = text.split(FINAL_ANSWER_ACTION)[1].trim();\n            return {\n                returnValues: {\n                    output: finalAnswerText,\n                },\n                log: text,\n            };\n        }\n        throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Could not parse LLM output: ${text}`);\n    }\n    /**\n     * Returns the format instructions as a string. If the 'raw' option is\n     * true, returns the raw FORMAT_INSTRUCTIONS.\n     * @param options Options for getting the format instructions.\n     * @returns Format instructions as a string.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvcmVhY3Qvb3V0cHV0X3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RDtBQUNjO0FBQ2pCO0FBQ0o7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHNDQUFzQztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTywyQ0FBMkMsOERBQXVCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpRkFBcUIsSUFBSSwrQ0FBK0MsSUFBSSxLQUFLO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLGdDQUFnQyxLQUFLO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVFQUFjLENBQUMsMkRBQW1CO0FBQ2pEO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3JlYWN0L291dHB1dF9wYXJzZXIuanM/YzY4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXJUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgT3V0cHV0UGFyc2VyRXhjZXB0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuaW1wb3J0IHsgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi4vdHlwZXMuanNcIjtcbmltcG9ydCB7IEZPUk1BVF9JTlNUUlVDVElPTlMgfSBmcm9tIFwiLi9wcm9tcHQuanNcIjtcbmNvbnN0IEZJTkFMX0FOU1dFUl9BQ1RJT04gPSBcIkZpbmFsIEFuc3dlcjpcIjtcbmNvbnN0IEZJTkFMX0FOU1dFUl9BTkRfUEFSU0FCTEVfQUNUSU9OX0VSUk9SX01FU1NBR0UgPSBcIlBhcnNpbmcgTExNIG91dHB1dCBwcm9kdWNlZCBib3RoIGEgZmluYWwgYW5zd2VyIGFuZCBhIHBhcnNlLWFibGUgYWN0aW9uOlwiO1xuLyoqXG4gKiBQYXJzZXMgUmVBY3Qtc3R5bGUgTExNIGNhbGxzIHRoYXQgaGF2ZSBhIHNpbmdsZSB0b29sIGlucHV0LlxuICpcbiAqIEV4cGVjdHMgb3V0cHV0IHRvIGJlIGluIG9uZSBvZiB0d28gZm9ybWF0cy5cbiAqXG4gKiBJZiB0aGUgb3V0cHV0IHNpZ25hbHMgdGhhdCBhbiBhY3Rpb24gc2hvdWxkIGJlIHRha2VuLFxuICogc2hvdWxkIGJlIGluIHRoZSBiZWxvdyBmb3JtYXQuIFRoaXMgd2lsbCByZXN1bHQgaW4gYW4gQWdlbnRBY3Rpb25cbiAqIGJlaW5nIHJldHVybmVkLlxuICpcbiAqIGBgYFxuICogVGhvdWdodDogYWdlbnQgdGhvdWdodCBoZXJlXG4gKiBBY3Rpb246IHNlYXJjaFxuICogQWN0aW9uIElucHV0OiB3aGF0IGlzIHRoZSB0ZW1wZXJhdHVyZSBpbiBTRj9cbiAqIGBgYFxuICpcbiAqIElmIHRoZSBvdXRwdXQgc2lnbmFscyB0aGF0IGEgZmluYWwgYW5zd2VyIHNob3VsZCBiZSBnaXZlbixcbiAqIHNob3VsZCBiZSBpbiB0aGUgYmVsb3cgZm9ybWF0LiBUaGlzIHdpbGwgcmVzdWx0IGluIGFuIEFnZW50RmluaXNoXG4gKiBiZWluZyByZXR1cm5lZC5cbiAqXG4gKiBgYGBcbiAqIFRob3VnaHQ6IGFnZW50IHRob3VnaHQgaGVyZVxuICogRmluYWwgQW5zd2VyOiBUaGUgdGVtcGVyYXR1cmUgaXMgMTAwIGRlZ3JlZXNcbiAqIGBgYFxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqXG4gKiBjb25zdCBydW5uYWJsZUFnZW50ID0gUnVubmFibGVTZXF1ZW5jZS5mcm9tKFtcbiAqICAgLi4ucmVzdCBvZiBydW5uYWJsZVxuICogICBuZXcgUmVBY3RTaW5nbGVJbnB1dE91dHB1dFBhcnNlcih7IHRvb2xOYW1lczogW1wiU2VycEFQSVwiLCBcIkNhbGN1bGF0b3JcIl0gfSksXG4gKiBdKTtcbiAqIGNvbnN0IGFnZW50ID0gQWdlbnRFeGVjdXRvci5mcm9tQWdlbnRBbmRUb29scyh7XG4gKiAgIGFnZW50OiBydW5uYWJsZUFnZW50LFxuICogICB0b29sczogW25ldyBTZXJwQVBJKCksIG5ldyBDYWxjdWxhdG9yKCldLFxuICogfSk7XG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBhZ2VudC5pbnZva2Uoe1xuICogICBpbnB1dDogXCJ3aGF0cyB0aGUgd2VhdGhlciBpbiBwb21mcmV0P1wiLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIFJlQWN0U2luZ2xlSW5wdXRPdXRwdXRQYXJzZXIgZXh0ZW5kcyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwiYWdlbnRzXCIsIFwicmVhY3RcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRvb2xOYW1lc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRvb2xOYW1lcyA9IGZpZWxkcy50b29sTmFtZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgZ2l2ZW4gdGV4dCBpbnRvIGFuIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoIG9iamVjdC4gSWYgYW5cbiAgICAgKiBvdXRwdXQgZml4aW5nIHBhcnNlciBpcyBkZWZpbmVkLCB1c2VzIGl0IHRvIHBhcnNlIHRoZSB0ZXh0LlxuICAgICAqIEBwYXJhbSB0ZXh0IFRleHQgdG8gcGFyc2UuXG4gICAgICogQHJldHVybnMgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGFuIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoIG9iamVjdC5cbiAgICAgKi9cbiAgICBhc3luYyBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIGNvbnN0IGluY2x1ZGVzQW5zd2VyID0gdGV4dC5pbmNsdWRlcyhGSU5BTF9BTlNXRVJfQUNUSU9OKTtcbiAgICAgICAgY29uc3QgcmVnZXggPSAvQWN0aW9uXFxzKlxcZCpcXHMqOltcXHNdKiguKj8pW1xcc10qQWN0aW9uXFxzKlxcZCpcXHMqSW5wdXRcXHMqXFxkKlxccyo6W1xcc10qKC4qKS87XG4gICAgICAgIGNvbnN0IGFjdGlvbk1hdGNoID0gdGV4dC5tYXRjaChyZWdleCk7XG4gICAgICAgIGlmIChhY3Rpb25NYXRjaCkge1xuICAgICAgICAgICAgaWYgKGluY2x1ZGVzQW5zd2VyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE91dHB1dFBhcnNlckV4Y2VwdGlvbihgJHtGSU5BTF9BTlNXRVJfQU5EX1BBUlNBQkxFX0FDVElPTl9FUlJPUl9NRVNTQUdFfTogJHt0ZXh0fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYWN0aW9uID0gYWN0aW9uTWF0Y2hbMV07XG4gICAgICAgICAgICBjb25zdCBhY3Rpb25JbnB1dCA9IGFjdGlvbk1hdGNoWzJdO1xuICAgICAgICAgICAgY29uc3QgdG9vbElucHV0ID0gYWN0aW9uSW5wdXQudHJpbSgpLnJlcGxhY2UoL1wiL2csIFwiXCIpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0b29sOiBhY3Rpb24sXG4gICAgICAgICAgICAgICAgdG9vbElucHV0LFxuICAgICAgICAgICAgICAgIGxvZzogdGV4dCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluY2x1ZGVzQW5zd2VyKSB7XG4gICAgICAgICAgICBjb25zdCBmaW5hbEFuc3dlclRleHQgPSB0ZXh0LnNwbGl0KEZJTkFMX0FOU1dFUl9BQ1RJT04pWzFdLnRyaW0oKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuVmFsdWVzOiB7XG4gICAgICAgICAgICAgICAgICAgIG91dHB1dDogZmluYWxBbnN3ZXJUZXh0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbG9nOiB0ZXh0LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgT3V0cHV0UGFyc2VyRXhjZXB0aW9uKGBDb3VsZCBub3QgcGFyc2UgTExNIG91dHB1dDogJHt0ZXh0fWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIGFzIGEgc3RyaW5nLiBJZiB0aGUgJ3Jhdycgb3B0aW9uIGlzXG4gICAgICogdHJ1ZSwgcmV0dXJucyB0aGUgcmF3IEZPUk1BVF9JTlNUUlVDVElPTlMuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyBmb3IgZ2V0dGluZyB0aGUgZm9ybWF0IGluc3RydWN0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBGb3JtYXQgaW5zdHJ1Y3Rpb25zIGFzIGEgc3RyaW5nLlxuICAgICAqL1xuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHJlbmRlclRlbXBsYXRlKEZPUk1BVF9JTlNUUlVDVElPTlMsIFwiZi1zdHJpbmdcIiwge1xuICAgICAgICAgICAgdG9vbF9uYW1lczogdGhpcy50b29sTmFtZXMuam9pbihcIiwgXCIpLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/prompt.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/prompt.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS)\n/* harmony export */ });\nconst FORMAT_INSTRUCTIONS = `Use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvcmVhY3QvcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTzs7QUFFUDtBQUNBO0FBQ0EsK0NBQStDLFdBQVc7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvcmVhY3QvcHJvbXB0LmpzPzIxYzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEZPUk1BVF9JTlNUUlVDVElPTlMgPSBgVXNlIHRoZSBmb2xsb3dpbmcgZm9ybWF0OlxuXG5RdWVzdGlvbjogdGhlIGlucHV0IHF1ZXN0aW9uIHlvdSBtdXN0IGFuc3dlclxuVGhvdWdodDogeW91IHNob3VsZCBhbHdheXMgdGhpbmsgYWJvdXQgd2hhdCB0byBkb1xuQWN0aW9uOiB0aGUgYWN0aW9uIHRvIHRha2UsIHNob3VsZCBiZSBvbmUgb2YgW3t0b29sX25hbWVzfV1cbkFjdGlvbiBJbnB1dDogdGhlIGlucHV0IHRvIHRoZSBhY3Rpb25cbk9ic2VydmF0aW9uOiB0aGUgcmVzdWx0IG9mIHRoZSBhY3Rpb25cbi4uLiAodGhpcyBUaG91Z2h0L0FjdGlvbi9BY3Rpb24gSW5wdXQvT2JzZXJ2YXRpb24gY2FuIHJlcGVhdCBOIHRpbWVzKVxuVGhvdWdodDogSSBub3cga25vdyB0aGUgZmluYWwgYW5zd2VyXG5GaW5hbCBBbnN3ZXI6IHRoZSBmaW5hbCBhbnN3ZXIgdG8gdGhlIG9yaWdpbmFsIGlucHV0IHF1ZXN0aW9uYDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/react/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/index.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/index.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredChatAgent: () => (/* binding */ StructuredChatAgent),\n/* harmony export */   createStructuredChatAgent: () => (/* binding */ createStructuredChatAgent)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/.pnpm/zod-to-json-schema@3.24.1_zod@3.24.1/node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/language_models/base.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/utils/function_calling.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/prompt.js\");\n/* harmony import */ var _tools_render_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../tools/render.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/render.js\");\n/* harmony import */ var _format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../format_scratchpad/log.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/log.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Agent that interoperates with Structured Tools using React logic.\n * @augments Agent\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain.agents.createStructuredChatAgent.html | createStructuredChatAgent method instead}.\n */\nclass StructuredChatAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_6__.Agent {\n    static lc_name() {\n        return \"StructuredChatAgent\";\n    }\n    constructor(input) {\n        const outputParser = input?.outputParser ?? StructuredChatAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n    }\n    _agentType() {\n        return \"structured-chat-zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    /**\n     * Validates that all provided tools have a description. Throws an error\n     * if any tool lacks a description.\n     * @param tools Array of StructuredTool instances to validate.\n     */\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Returns a default output parser for the StructuredChatAgent. If an LLM\n     * is provided, it creates an output parser with retry logic from the LLM.\n     * @param fields Optional fields to customize the output parser. Can include an LLM and a list of tool names.\n     * @returns An instance of StructuredChatOutputParserWithRetries.\n     */\n    static getDefaultOutputParser(fields) {\n        if (fields?.llm) {\n            return _outputParser_js__WEBPACK_IMPORTED_MODULE_7__.StructuredChatOutputParserWithRetries.fromLLM(fields.llm, {\n                toolNames: fields.toolNames,\n            });\n        }\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_7__.StructuredChatOutputParserWithRetries({\n            toolNames: fields?.toolNames,\n        });\n    }\n    /**\n     * Constructs the agent's scratchpad from a list of steps. If the agent's\n     * scratchpad is not empty, it prepends a message indicating that the\n     * agent has not seen any previous work.\n     * @param steps Array of AgentStep instances to construct the scratchpad from.\n     * @returns A Promise that resolves to a string representing the agent's scratchpad.\n     */\n    async constructScratchPad(steps) {\n        const agentScratchpad = await super.constructScratchPad(steps);\n        if (agentScratchpad) {\n            return `This was your previous work (but I haven't seen any of it! I only see what you return as final answer):\\n${agentScratchpad}`;\n        }\n        return agentScratchpad;\n    }\n    /**\n     * Creates a string representation of the schemas of the provided tools.\n     * @param tools Array of StructuredTool instances to create the schemas string from.\n     * @returns A string representing the schemas of the provided tools.\n     */\n    static createToolSchemasString(tools) {\n        return tools\n            .map((tool) => `${tool.name}: ${tool.description}, args: ${JSON.stringify((0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(tool.schema).properties)}`)\n            .join(\"\\n\");\n    }\n    /**\n     * Create prompt in the style of the agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.inputVariables List of input variables the final prompt will expect.\n     * @param args.memoryPrompts List of historical prompts from memory.\n     */\n    static createPrompt(tools, args) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_8__.PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_8__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], humanMessageTemplate = \"{input}\\n\\n{agent_scratchpad}\", memoryPrompts = [], } = args ?? {};\n        const template = [prefix, _prompt_js__WEBPACK_IMPORTED_MODULE_8__.FORMAT_INSTRUCTIONS, suffix].join(\"\\n\\n\");\n        const messages = [\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.SystemMessagePromptTemplate(new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.PromptTemplate({\n                template,\n                inputVariables,\n                partialVariables: {\n                    tool_schemas: StructuredChatAgent.createToolSchemasString(tools),\n                    tool_names: tools.map((tool) => tool.name).join(\", \"),\n                },\n            })),\n            ...memoryPrompts,\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.HumanMessagePromptTemplate(new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.PromptTemplate({\n                template: humanMessageTemplate,\n                inputVariables,\n            })),\n        ];\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.ChatPromptTemplate.fromMessages(messages);\n    }\n    /**\n     * Creates a StructuredChatAgent from an LLM and a list of tools.\n     * Validates the tools, creates a prompt, and sets up an LLM chain for the\n     * agent.\n     * @param llm BaseLanguageModel instance to create the agent from.\n     * @param tools Array of StructuredTool instances to create the agent from.\n     * @param args Optional arguments to customize the creation of the agent. Can include arguments for creating the prompt and AgentArgs.\n     * @returns A new instance of StructuredChatAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        StructuredChatAgent.validateTools(tools);\n        const prompt = StructuredChatAgent.createPrompt(tools, args);\n        const outputParser = args?.outputParser ??\n            StructuredChatAgent.getDefaultOutputParser({\n                llm,\n                toolNames: tools.map((tool) => tool.name),\n            });\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new StructuredChatAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n/**\n * Create an agent aimed at supporting tools with multiple inputs.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createStructuredChatAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/structured-chat-agent\n * const prompt = await pull<ChatPromptTemplate>(\n *   \"hwchase17/structured-chat-agent\"\n * );\n *\n * const llm = new ChatOpenAI({\n *   temperature: 0,\n *   modelName: \"gpt-3.5-turbo-1106\",\n * });\n *\n * const agent = await createStructuredChatAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   chat_history: [\n *     new HumanMessage(\"hi! my name is cob\"),\n *     new AIMessage(\"Hello Cob! How can I assist you today?\"),\n *   ],\n * });\n * ```\n */\nasync function createStructuredChatAgent({ llm, tools, prompt, streamRunnable, }) {\n    const missingVariables = [\"tools\", \"tool_names\", \"agent_scratchpad\"].filter((v) => !prompt.inputVariables.includes(v));\n    if (missingVariables.length > 0) {\n        throw new Error(`Provided prompt is missing required input variables: ${JSON.stringify(missingVariables)}`);\n    }\n    let toolNames = [];\n    if (tools.every(_langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_1__.isOpenAITool)) {\n        toolNames = tools.map((tool) => tool.function.name);\n    }\n    else if (tools.every(_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_4__.isStructuredTool)) {\n        toolNames = tools.map((tool) => tool.name);\n    }\n    else {\n        throw new Error(\"All tools must be either OpenAI or Structured tools, not a mix.\");\n    }\n    const partialedPrompt = await prompt.partial({\n        tools: (0,_tools_render_js__WEBPACK_IMPORTED_MODULE_9__.renderTextDescriptionAndArgs)(tools),\n        tool_names: toolNames.join(\", \"),\n    });\n    // TODO: Add .bind to core runnable interface.\n    const llmWithStop = llm.bind({\n        stop: [\"Observation\"],\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_6__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_10__.formatLogToString)(input.steps),\n        }),\n        partialedPrompt,\n        llmWithStop,\n        _outputParser_js__WEBPACK_IMPORTED_MODULE_7__.StructuredChatOutputParserWithRetries.fromLLM(llm, {\n            toolNames,\n        }),\n    ], {\n        name: \"StructuredChatAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/outputParser.js":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/outputParser.js ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredChatOutputParser: () => (/* binding */ StructuredChatOutputParser),\n/* harmony export */   StructuredChatOutputParserWithRetries: () => (/* binding */ StructuredChatOutputParserWithRetries)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/prompt.js\");\n/* harmony import */ var _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../output_parsers/fix.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/fix.js\");\n\n\n\n\n\n/**\n * A class that provides a custom implementation for parsing the output of\n * a StructuredChatAgent action. It extends the `AgentActionOutputParser`\n * class and extracts the action and action input from the text output,\n * returning an `AgentAction` or `AgentFinish` object.\n */\nclass StructuredChatOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    /**\n     * Parses the given text and returns an `AgentAction` or `AgentFinish`\n     * object. If an `OutputFixingParser` is provided, it is used for parsing;\n     * otherwise, the base parser is used.\n     * @param text The text to parse.\n     * @param callbacks Optional callbacks for asynchronous operations.\n     * @returns A Promise that resolves to an `AgentAction` or `AgentFinish` object.\n     */\n    async parse(text) {\n        try {\n            const regex = /```(?:json)?(.*)(```)/gs;\n            const actionMatch = regex.exec(text);\n            if (actionMatch === null) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse an action. The agent action must be within a markdown code block, and \"action\" must be a provided tool or \"Final Answer\"`);\n            }\n            const response = JSON.parse(actionMatch[1].trim());\n            const { action, action_input } = response;\n            if (action === \"Final Answer\") {\n                return { returnValues: { output: action_input }, log: text };\n            }\n            return { tool: action, toolInput: action_input || {}, log: text };\n        }\n        catch (e) {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n        }\n    }\n    /**\n     * Returns the format instructions for parsing the output of an agent\n     * action in the style of the StructuredChatAgent.\n     * @returns A string representing the format instructions.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.AGENT_ACTION_FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\n/**\n * A class that provides a wrapper around the `StructuredChatOutputParser`\n * and `OutputFixingParser` classes. It extends the\n * `AgentActionOutputParser` class and allows for retrying the output\n * parsing using the `OutputFixingParser` if it is provided.\n * @example\n * ```typescript\n * const outputParser = new StructuredChatOutputParserWithRetries.fromLLM(\n *   new ChatOpenAI({ temperature: 0 }),\n *   {\n *     toolNames: [\"calculator\", \"random-number-generator\"],\n *   },\n * );\n * const result = await outputParser.parse(\n *  \"What is a random number between 5 and 10 raised to the second power?\"\n * );\n * ```\n */\nclass StructuredChatOutputParserWithRetries extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n        Object.defineProperty(this, \"baseParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputFixingParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.toolNames = fields.toolNames ?? this.toolNames;\n        this.baseParser =\n            fields?.baseParser ??\n                new StructuredChatOutputParser({ toolNames: this.toolNames });\n        this.outputFixingParser = fields?.outputFixingParser;\n    }\n    /**\n     * Parses the given text and returns an `AgentAction` or `AgentFinish`\n     * object. Throws an `OutputParserException` if the parsing fails.\n     * @param text The text to parse.\n     * @returns A Promise that resolves to an `AgentAction` or `AgentFinish` object.\n     */\n    async parse(text, callbacks) {\n        if (this.outputFixingParser !== undefined) {\n            return this.outputFixingParser.parse(text, callbacks);\n        }\n        return this.baseParser.parse(text);\n    }\n    /**\n     * Returns the format instructions for parsing the output of an agent\n     * action in the style of the StructuredChatAgent.\n     * @returns A string representing the format instructions.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n    /**\n     * Creates a new `StructuredChatOutputParserWithRetries` instance from a\n     * `BaseLanguageModel` and options. The options can include a base parser\n     * and tool names.\n     * @param llm A `BaseLanguageModel` instance.\n     * @param options Options for creating a `StructuredChatOutputParserWithRetries` instance.\n     * @returns A new `StructuredChatOutputParserWithRetries` instance.\n     */\n    static fromLLM(llm, options) {\n        const baseParser = options.baseParser ??\n            new StructuredChatOutputParser({ toolNames: options.toolNames ?? [] });\n        const outputFixingParser = _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__.OutputFixingParser.fromLLM(llm, baseParser);\n        return new StructuredChatOutputParserWithRetries({\n            baseParser,\n            outputFixingParser,\n            toolNames: options.toolNames,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/prompt.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/prompt.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AGENT_ACTION_FORMAT_INSTRUCTIONS: () => (/* binding */ AGENT_ACTION_FORMAT_INSTRUCTIONS),\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `Answer the following questions truthfully and as best you can.`;\nconst AGENT_ACTION_FORMAT_INSTRUCTIONS = `Output a JSON markdown code snippet containing a valid JSON blob (denoted below by $JSON_BLOB).\nThis $JSON_BLOB must have a \"action\" key (with the name of the tool to use) and an \"action_input\" key (tool input).\n\nValid \"action\" values: \"Final Answer\" (which you must use when giving your final response to the user), or one of [{tool_names}].\n\nThe $JSON_BLOB must be valid, parseable JSON and only contain a SINGLE action. Here is an example of an acceptable output:\n\n\\`\\`\\`json\n{{\n  \"action\": $TOOL_NAME,\n  \"action_input\": $INPUT\n}}\n\\`\\`\\`\n\nRemember to include the surrounding markdown code snippet delimiters (begin with \"\\`\\`\\`\" json and close with \"\\`\\`\\`\")!\n`;\nconst FORMAT_INSTRUCTIONS = `You have access to the following tools.\nYou must format your inputs to these tools to match their \"JSON schema\" definitions below.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nHere are the JSON Schema instances for the tools you have access to:\n\n{tool_schemas}\n\nThe way you use the tools is as follows:\n\n------------------------\n\n${AGENT_ACTION_FORMAT_INSTRUCTIONS}\n\nIf you are using a tool, \"action_input\" must adhere to the tool's input schema, given above.\n\n------------------------\n\nALWAYS use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction:\n\\`\\`\\`json\n$JSON_BLOB\n\\`\\`\\`\nObservation: the result of the action\n... (this Thought/Action/Observation can repeat N times)\nThought: I now know the final answer\nAction:\n\\`\\`\\`json\n{{\n  \"action\": \"Final Answer\",\n  \"action_input\": \"Final response to human\"\n}}\n\\`\\`\\``;\nconst SUFFIX = `Begin! Reminder to ALWAYS use the above format, and to use tools if appropriate.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvc3RydWN0dXJlZF9jaGF0L3Byb21wdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDQTtBQUNQOztBQUVBLG9IQUFvSCxXQUFXOztBQUUvSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNPO0FBQ1A7O0FBRUE7O0FBRUEsa0RBQWtELGdCQUFnQixTQUFTLG1FQUFtRSxzQkFBc0I7QUFDcEs7QUFDQSxtQkFBbUIsd0JBQXdCLHlFQUF5RSxnQkFBZ0IsMEJBQTBCOztBQUU5Sjs7QUFFQSxDQUFDOztBQUVEOztBQUVBOztBQUVBLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvc3RydWN0dXJlZF9jaGF0L3Byb21wdC5qcz8wZGM4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQUkVGSVggPSBgQW5zd2VyIHRoZSBmb2xsb3dpbmcgcXVlc3Rpb25zIHRydXRoZnVsbHkgYW5kIGFzIGJlc3QgeW91IGNhbi5gO1xuZXhwb3J0IGNvbnN0IEFHRU5UX0FDVElPTl9GT1JNQVRfSU5TVFJVQ1RJT05TID0gYE91dHB1dCBhIEpTT04gbWFya2Rvd24gY29kZSBzbmlwcGV0IGNvbnRhaW5pbmcgYSB2YWxpZCBKU09OIGJsb2IgKGRlbm90ZWQgYmVsb3cgYnkgJEpTT05fQkxPQikuXG5UaGlzICRKU09OX0JMT0IgbXVzdCBoYXZlIGEgXCJhY3Rpb25cIiBrZXkgKHdpdGggdGhlIG5hbWUgb2YgdGhlIHRvb2wgdG8gdXNlKSBhbmQgYW4gXCJhY3Rpb25faW5wdXRcIiBrZXkgKHRvb2wgaW5wdXQpLlxuXG5WYWxpZCBcImFjdGlvblwiIHZhbHVlczogXCJGaW5hbCBBbnN3ZXJcIiAod2hpY2ggeW91IG11c3QgdXNlIHdoZW4gZ2l2aW5nIHlvdXIgZmluYWwgcmVzcG9uc2UgdG8gdGhlIHVzZXIpLCBvciBvbmUgb2YgW3t0b29sX25hbWVzfV0uXG5cblRoZSAkSlNPTl9CTE9CIG11c3QgYmUgdmFsaWQsIHBhcnNlYWJsZSBKU09OIGFuZCBvbmx5IGNvbnRhaW4gYSBTSU5HTEUgYWN0aW9uLiBIZXJlIGlzIGFuIGV4YW1wbGUgb2YgYW4gYWNjZXB0YWJsZSBvdXRwdXQ6XG5cblxcYFxcYFxcYGpzb25cbnt7XG4gIFwiYWN0aW9uXCI6ICRUT09MX05BTUUsXG4gIFwiYWN0aW9uX2lucHV0XCI6ICRJTlBVVFxufX1cblxcYFxcYFxcYFxuXG5SZW1lbWJlciB0byBpbmNsdWRlIHRoZSBzdXJyb3VuZGluZyBtYXJrZG93biBjb2RlIHNuaXBwZXQgZGVsaW1pdGVycyAoYmVnaW4gd2l0aCBcIlxcYFxcYFxcYFwiIGpzb24gYW5kIGNsb3NlIHdpdGggXCJcXGBcXGBcXGBcIikhXG5gO1xuZXhwb3J0IGNvbnN0IEZPUk1BVF9JTlNUUlVDVElPTlMgPSBgWW91IGhhdmUgYWNjZXNzIHRvIHRoZSBmb2xsb3dpbmcgdG9vbHMuXG5Zb3UgbXVzdCBmb3JtYXQgeW91ciBpbnB1dHMgdG8gdGhlc2UgdG9vbHMgdG8gbWF0Y2ggdGhlaXIgXCJKU09OIHNjaGVtYVwiIGRlZmluaXRpb25zIGJlbG93LlxuXG5cIkpTT04gU2NoZW1hXCIgaXMgYSBkZWNsYXJhdGl2ZSBsYW5ndWFnZSB0aGF0IGFsbG93cyB5b3UgdG8gYW5ub3RhdGUgYW5kIHZhbGlkYXRlIEpTT04gZG9jdW1lbnRzLlxuXG5Gb3IgZXhhbXBsZSwgdGhlIGV4YW1wbGUgXCJKU09OIFNjaGVtYVwiIGluc3RhbmNlIHt7XCJwcm9wZXJ0aWVzXCI6IHt7XCJmb29cIjoge3tcImRlc2NyaXB0aW9uXCI6IFwiYSBsaXN0IG9mIHRlc3Qgd29yZHNcIiwgXCJ0eXBlXCI6IFwiYXJyYXlcIiwgXCJpdGVtc1wiOiB7e1widHlwZVwiOiBcInN0cmluZ1wifX19fX19LCBcInJlcXVpcmVkXCI6IFtcImZvb1wiXX19fX1cbndvdWxkIG1hdGNoIGFuIG9iamVjdCB3aXRoIG9uZSByZXF1aXJlZCBwcm9wZXJ0eSwgXCJmb29cIi4gVGhlIFwidHlwZVwiIHByb3BlcnR5IHNwZWNpZmllcyBcImZvb1wiIG11c3QgYmUgYW4gXCJhcnJheVwiLCBhbmQgdGhlIFwiZGVzY3JpcHRpb25cIiBwcm9wZXJ0eSBzZW1hbnRpY2FsbHkgZGVzY3JpYmVzIGl0IGFzIFwiYSBsaXN0IG9mIHRlc3Qgd29yZHNcIi4gVGhlIGl0ZW1zIHdpdGhpbiBcImZvb1wiIG11c3QgYmUgc3RyaW5ncy5cblRodXMsIHRoZSBvYmplY3Qge3tcImZvb1wiOiBbXCJiYXJcIiwgXCJiYXpcIl19fSBpcyBhIHdlbGwtZm9ybWF0dGVkIGluc3RhbmNlIG9mIHRoaXMgZXhhbXBsZSBcIkpTT04gU2NoZW1hXCIuIFRoZSBvYmplY3Qge3tcInByb3BlcnRpZXNcIjoge3tcImZvb1wiOiBbXCJiYXJcIiwgXCJiYXpcIl19fX19IGlzIG5vdCB3ZWxsLWZvcm1hdHRlZC5cblxuSGVyZSBhcmUgdGhlIEpTT04gU2NoZW1hIGluc3RhbmNlcyBmb3IgdGhlIHRvb2xzIHlvdSBoYXZlIGFjY2VzcyB0bzpcblxue3Rvb2xfc2NoZW1hc31cblxuVGhlIHdheSB5b3UgdXNlIHRoZSB0b29scyBpcyBhcyBmb2xsb3dzOlxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJHtBR0VOVF9BQ1RJT05fRk9STUFUX0lOU1RSVUNUSU9OU31cblxuSWYgeW91IGFyZSB1c2luZyBhIHRvb2wsIFwiYWN0aW9uX2lucHV0XCIgbXVzdCBhZGhlcmUgdG8gdGhlIHRvb2wncyBpbnB1dCBzY2hlbWEsIGdpdmVuIGFib3ZlLlxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQUxXQVlTIHVzZSB0aGUgZm9sbG93aW5nIGZvcm1hdDpcblxuUXVlc3Rpb246IHRoZSBpbnB1dCBxdWVzdGlvbiB5b3UgbXVzdCBhbnN3ZXJcblRob3VnaHQ6IHlvdSBzaG91bGQgYWx3YXlzIHRoaW5rIGFib3V0IHdoYXQgdG8gZG9cbkFjdGlvbjpcblxcYFxcYFxcYGpzb25cbiRKU09OX0JMT0JcblxcYFxcYFxcYFxuT2JzZXJ2YXRpb246IHRoZSByZXN1bHQgb2YgdGhlIGFjdGlvblxuLi4uICh0aGlzIFRob3VnaHQvQWN0aW9uL09ic2VydmF0aW9uIGNhbiByZXBlYXQgTiB0aW1lcylcblRob3VnaHQ6IEkgbm93IGtub3cgdGhlIGZpbmFsIGFuc3dlclxuQWN0aW9uOlxuXFxgXFxgXFxganNvblxue3tcbiAgXCJhY3Rpb25cIjogXCJGaW5hbCBBbnN3ZXJcIixcbiAgXCJhY3Rpb25faW5wdXRcIjogXCJGaW5hbCByZXNwb25zZSB0byBodW1hblwiXG59fVxuXFxgXFxgXFxgYDtcbmV4cG9ydCBjb25zdCBTVUZGSVggPSBgQmVnaW4hIFJlbWluZGVyIHRvIEFMV0FZUyB1c2UgdGhlIGFib3ZlIGZvcm1hdCwgYW5kIHRvIHVzZSB0b29scyBpZiBhcHByb3ByaWF0ZS5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/structured_chat/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/index.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/index.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createToolCallingAgent: () => (/* binding */ createToolCallingAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/output_parser.js\");\n/* harmony import */ var _format_scratchpad_tool_calling_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format_scratchpad/tool_calling.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js\");\n\n\n\n\nfunction _isBaseChatModel(x) {\n    const model = x;\n    return (typeof model._modelType === \"function\" &&\n        model._modelType() === \"base_chat_model\");\n}\n/**\n * Create an agent that uses tools.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n * @example\n * ```typescript\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n * import { ChatPromptTemplate, MessagesPlaceholder } from \"@langchain/core/prompts\";\n * import { AgentExecutor, createToolCallingAgent } from \"langchain/agents\";\n *\n * const prompt = ChatPromptTemplate.fromMessages(\n *   [\n *     [\"system\", \"You are a helpful assistant\"],\n *     [\"placeholder\", \"{chat_history}\"],\n *     [\"human\", \"{input}\"],\n *     [\"placeholder\", \"{agent_scratchpad}\"],\n *   ]\n * );\n *\n *\n * const llm = new ChatAnthropic({\n *   modelName: \"claude-3-opus-20240229\",\n *   temperature: 0,\n * });\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * const agent = createToolCallingAgent({ llm, tools, prompt });\n *\n * const agentExecutor = new AgentExecutor({ agent, tools });\n *\n * const result = await agentExecutor.invoke({input: \"what is LangChain?\"});\n *\n * // Using with chat history\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * const result2 = await agentExecutor.invoke(\n *   {\n *     input: \"what's my name?\",\n *     chat_history: [\n *       new HumanMessage({content: \"hi! my name is bob\"}),\n *       new AIMessage({content: \"Hello Bob! How can I assist you today?\"}),\n *     ],\n *   }\n * );\n * ```\n */\nfunction createToolCallingAgent({ llm, tools, prompt, streamRunnable, }) {\n    if (!prompt.inputVariables.includes(\"agent_scratchpad\")) {\n        throw new Error([\n            `Prompt must have an input variable named \"agent_scratchpad\".`,\n            `Found ${JSON.stringify(prompt.inputVariables)} instead.`,\n        ].join(\"\\n\"));\n    }\n    let modelWithTools;\n    if (_isBaseChatModel(llm)) {\n        if (llm.bindTools === undefined) {\n            throw new Error(`This agent requires that the \"bind_tools()\" method be implemented on the input model.`);\n        }\n        modelWithTools = llm.bindTools(tools);\n    }\n    else {\n        modelWithTools = llm;\n    }\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_1__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_tool_calling_js__WEBPACK_IMPORTED_MODULE_3__.formatToToolMessages)(input.steps),\n        }),\n        prompt,\n        modelWithTools,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_2__.ToolCallingAgentOutputParser(),\n    ], {\n        name: \"ToolCallingAgent\",\n        streamRunnable,\n        singleAction: false,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbF9jYWxsaW5nL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdFO0FBQ1o7QUFDZTtBQUNTO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUIsWUFBWSwwQ0FBMEM7QUFDdEQsWUFBWSx3Q0FBd0M7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsYUFBYTtBQUN0QyxtQkFBbUIsTUFBTTtBQUN6Qix5QkFBeUIsaUJBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG9CQUFvQjtBQUM5RDtBQUNBLDZDQUE2QyxjQUFjO0FBQzNEO0FBQ0EsOENBQThDLDRCQUE0QjtBQUMxRTtBQUNBO0FBQ0EsWUFBWSwwQkFBMEI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw4QkFBOEI7QUFDekQsd0JBQXdCLGtEQUFrRDtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLHFDQUFxQztBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0REFBcUI7QUFDdkMsUUFBUSwwRUFBbUI7QUFDM0IseUNBQXlDLHdGQUFvQjtBQUM3RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVksMkVBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xfY2FsbGluZy9pbmRleC5qcz8yZTJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJ1bm5hYmxlUGFzc3Rocm91Z2ggfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3J1bm5hYmxlc1wiO1xuaW1wb3J0IHsgQWdlbnRSdW5uYWJsZVNlcXVlbmNlIH0gZnJvbSBcIi4uL2FnZW50LmpzXCI7XG5pbXBvcnQgeyBUb29sQ2FsbGluZ0FnZW50T3V0cHV0UGFyc2VyLCB9IGZyb20gXCIuL291dHB1dF9wYXJzZXIuanNcIjtcbmltcG9ydCB7IGZvcm1hdFRvVG9vbE1lc3NhZ2VzIH0gZnJvbSBcIi4uL2Zvcm1hdF9zY3JhdGNocGFkL3Rvb2xfY2FsbGluZy5qc1wiO1xuZnVuY3Rpb24gX2lzQmFzZUNoYXRNb2RlbCh4KSB7XG4gICAgY29uc3QgbW9kZWwgPSB4O1xuICAgIHJldHVybiAodHlwZW9mIG1vZGVsLl9tb2RlbFR5cGUgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICBtb2RlbC5fbW9kZWxUeXBlKCkgPT09IFwiYmFzZV9jaGF0X21vZGVsXCIpO1xufVxuLyoqXG4gKiBDcmVhdGUgYW4gYWdlbnQgdGhhdCB1c2VzIHRvb2xzLlxuICogQHBhcmFtIHBhcmFtcyBQYXJhbXMgcmVxdWlyZWQgdG8gY3JlYXRlIHRoZSBhZ2VudC4gSW5jbHVkZXMgYW4gTExNLCB0b29scywgYW5kIHByb21wdC5cbiAqIEByZXR1cm5zIEEgcnVubmFibGUgc2VxdWVuY2UgcmVwcmVzZW50aW5nIGFuIGFnZW50LiBJdCB0YWtlcyBhcyBpbnB1dCBhbGwgdGhlIHNhbWUgaW5wdXRcbiAqICAgICB2YXJpYWJsZXMgYXMgdGhlIHByb21wdCBwYXNzZWQgaW4gZG9lcy4gSXQgcmV0dXJucyBhcyBvdXRwdXQgZWl0aGVyIGFuXG4gKiAgICAgQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2guXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ2hhdEFudGhyb3BpYyB9IGZyb20gXCJAbGFuZ2NoYWluL2FudGhyb3BpY1wiO1xuICogaW1wb3J0IHsgQ2hhdFByb21wdFRlbXBsYXRlLCBNZXNzYWdlc1BsYWNlaG9sZGVyIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG4gKiBpbXBvcnQgeyBBZ2VudEV4ZWN1dG9yLCBjcmVhdGVUb29sQ2FsbGluZ0FnZW50IH0gZnJvbSBcImxhbmdjaGFpbi9hZ2VudHNcIjtcbiAqXG4gKiBjb25zdCBwcm9tcHQgPSBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKFxuICogICBbXG4gKiAgICAgW1wic3lzdGVtXCIsIFwiWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50XCJdLFxuICogICAgIFtcInBsYWNlaG9sZGVyXCIsIFwie2NoYXRfaGlzdG9yeX1cIl0sXG4gKiAgICAgW1wiaHVtYW5cIiwgXCJ7aW5wdXR9XCJdLFxuICogICAgIFtcInBsYWNlaG9sZGVyXCIsIFwie2FnZW50X3NjcmF0Y2hwYWR9XCJdLFxuICogICBdXG4gKiApO1xuICpcbiAqXG4gKiBjb25zdCBsbG0gPSBuZXcgQ2hhdEFudGhyb3BpYyh7XG4gKiAgIG1vZGVsTmFtZTogXCJjbGF1ZGUtMy1vcHVzLTIwMjQwMjI5XCIsXG4gKiAgIHRlbXBlcmF0dXJlOiAwLFxuICogfSk7XG4gKlxuICogLy8gRGVmaW5lIHRoZSB0b29scyB0aGUgYWdlbnQgd2lsbCBoYXZlIGFjY2VzcyB0by5cbiAqIGNvbnN0IHRvb2xzID0gWy4uLl07XG4gKlxuICogY29uc3QgYWdlbnQgPSBjcmVhdGVUb29sQ2FsbGluZ0FnZW50KHsgbGxtLCB0b29scywgcHJvbXB0IH0pO1xuICpcbiAqIGNvbnN0IGFnZW50RXhlY3V0b3IgPSBuZXcgQWdlbnRFeGVjdXRvcih7IGFnZW50LCB0b29scyB9KTtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBhZ2VudEV4ZWN1dG9yLmludm9rZSh7aW5wdXQ6IFwid2hhdCBpcyBMYW5nQ2hhaW4/XCJ9KTtcbiAqXG4gKiAvLyBVc2luZyB3aXRoIGNoYXQgaGlzdG9yeVxuICogaW1wb3J0IHsgQUlNZXNzYWdlLCBIdW1hbk1lc3NhZ2UgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lc3NhZ2VzXCI7XG4gKlxuICogY29uc3QgcmVzdWx0MiA9IGF3YWl0IGFnZW50RXhlY3V0b3IuaW52b2tlKFxuICogICB7XG4gKiAgICAgaW5wdXQ6IFwid2hhdCdzIG15IG5hbWU/XCIsXG4gKiAgICAgY2hhdF9oaXN0b3J5OiBbXG4gKiAgICAgICBuZXcgSHVtYW5NZXNzYWdlKHtjb250ZW50OiBcImhpISBteSBuYW1lIGlzIGJvYlwifSksXG4gKiAgICAgICBuZXcgQUlNZXNzYWdlKHtjb250ZW50OiBcIkhlbGxvIEJvYiEgSG93IGNhbiBJIGFzc2lzdCB5b3UgdG9kYXk/XCJ9KSxcbiAqICAgICBdLFxuICogICB9XG4gKiApO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUb29sQ2FsbGluZ0FnZW50KHsgbGxtLCB0b29scywgcHJvbXB0LCBzdHJlYW1SdW5uYWJsZSwgfSkge1xuICAgIGlmICghcHJvbXB0LmlucHV0VmFyaWFibGVzLmluY2x1ZGVzKFwiYWdlbnRfc2NyYXRjaHBhZFwiKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoW1xuICAgICAgICAgICAgYFByb21wdCBtdXN0IGhhdmUgYW4gaW5wdXQgdmFyaWFibGUgbmFtZWQgXCJhZ2VudF9zY3JhdGNocGFkXCIuYCxcbiAgICAgICAgICAgIGBGb3VuZCAke0pTT04uc3RyaW5naWZ5KHByb21wdC5pbnB1dFZhcmlhYmxlcyl9IGluc3RlYWQuYCxcbiAgICAgICAgXS5qb2luKFwiXFxuXCIpKTtcbiAgICB9XG4gICAgbGV0IG1vZGVsV2l0aFRvb2xzO1xuICAgIGlmIChfaXNCYXNlQ2hhdE1vZGVsKGxsbSkpIHtcbiAgICAgICAgaWYgKGxsbS5iaW5kVG9vbHMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGlzIGFnZW50IHJlcXVpcmVzIHRoYXQgdGhlIFwiYmluZF90b29scygpXCIgbWV0aG9kIGJlIGltcGxlbWVudGVkIG9uIHRoZSBpbnB1dCBtb2RlbC5gKTtcbiAgICAgICAgfVxuICAgICAgICBtb2RlbFdpdGhUb29scyA9IGxsbS5iaW5kVG9vbHModG9vbHMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbW9kZWxXaXRoVG9vbHMgPSBsbG07XG4gICAgfVxuICAgIGNvbnN0IGFnZW50ID0gQWdlbnRSdW5uYWJsZVNlcXVlbmNlLmZyb21SdW5uYWJsZXMoW1xuICAgICAgICBSdW5uYWJsZVBhc3N0aHJvdWdoLmFzc2lnbih7XG4gICAgICAgICAgICBhZ2VudF9zY3JhdGNocGFkOiAoaW5wdXQpID0+IGZvcm1hdFRvVG9vbE1lc3NhZ2VzKGlucHV0LnN0ZXBzKSxcbiAgICAgICAgfSksXG4gICAgICAgIHByb21wdCxcbiAgICAgICAgbW9kZWxXaXRoVG9vbHMsXG4gICAgICAgIG5ldyBUb29sQ2FsbGluZ0FnZW50T3V0cHV0UGFyc2VyKCksXG4gICAgXSwge1xuICAgICAgICBuYW1lOiBcIlRvb2xDYWxsaW5nQWdlbnRcIixcbiAgICAgICAgc3RyZWFtUnVubmFibGUsXG4gICAgICAgIHNpbmdsZUFjdGlvbjogZmFsc2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIGFnZW50O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/output_parser.js":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/output_parser.js ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolCallingAgentOutputParser: () => (/* binding */ ToolCallingAgentOutputParser),\n/* harmony export */   parseAIMessageToToolAction: () => (/* binding */ parseAIMessageToToolAction)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n\n\n\nfunction parseAIMessageToToolAction(message) {\n    const stringifiedMessageContent = typeof message.content === \"string\"\n        ? message.content\n        : JSON.stringify(message.content);\n    let toolCalls = [];\n    if (message.tool_calls !== undefined && message.tool_calls.length > 0) {\n        toolCalls = message.tool_calls;\n    }\n    else {\n        if (message.additional_kwargs.tool_calls === undefined ||\n            message.additional_kwargs.tool_calls.length === 0) {\n            return {\n                returnValues: { output: message.content },\n                log: stringifiedMessageContent,\n            };\n        }\n        // Best effort parsing\n        for (const toolCall of message.additional_kwargs.tool_calls ?? []) {\n            const functionName = toolCall.function?.name;\n            try {\n                const args = JSON.parse(toolCall.function.arguments);\n                toolCalls.push({ name: functionName, args, id: toolCall.id });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse tool arguments from chat model response. Text: \"${JSON.stringify(toolCalls)}\". ${e}`);\n            }\n        }\n    }\n    return toolCalls.map((toolCall, i) => {\n        const messageLog = i === 0 ? [message] : [];\n        const log = `Invoking \"${toolCall.name}\" with ${JSON.stringify(toolCall.args ?? {})}\\n${stringifiedMessageContent}`;\n        return {\n            tool: toolCall.name,\n            toolInput: toolCall.args,\n            toolCallId: toolCall.id ?? \"\",\n            log,\n            messageLog,\n        };\n    });\n}\nclass ToolCallingAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentMultiActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"tool_calling\"]\n        });\n    }\n    static lc_name() {\n        return \"ToolCallingAgentOutputParser\";\n    }\n    async parse(text) {\n        throw new Error(`ToolCallingAgentOutputParser can only parse messages.\\nPassed input: ${text}`);\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0] && (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(generations[0].message)) {\n            return parseAIMessageToToolAction(generations[0].message);\n        }\n        throw new Error(\"parseResult on ToolCallingAgentOutputParser only works on ChatGeneration output\");\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside ToolCallingAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbF9jYWxsaW5nL291dHB1dF9wYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEQ7QUFDYTtBQUNaO0FBQ3BEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx5QkFBeUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQywyQ0FBMkM7QUFDNUU7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGlGQUFxQixvRUFBb0UsMEJBQTBCLEtBQUssRUFBRTtBQUNwSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGNBQWMsU0FBUyxrQ0FBa0MsRUFBRSxJQUFJLDBCQUEwQjtBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPLDJDQUEyQyxtRUFBNEI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxLQUFLO0FBQ3JHO0FBQ0E7QUFDQSwyQ0FBMkMsdUVBQWE7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbF9jYWxsaW5nL291dHB1dF9wYXJzZXIuanM/ZjlkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Jhc2VNZXNzYWdlLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbmltcG9ydCB7IE91dHB1dFBhcnNlckV4Y2VwdGlvbiB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvb3V0cHV0X3BhcnNlcnNcIjtcbmltcG9ydCB7IEFnZW50TXVsdGlBY3Rpb25PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi4vdHlwZXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUFJTWVzc2FnZVRvVG9vbEFjdGlvbihtZXNzYWdlKSB7XG4gICAgY29uc3Qgc3RyaW5naWZpZWRNZXNzYWdlQ29udGVudCA9IHR5cGVvZiBtZXNzYWdlLmNvbnRlbnQgPT09IFwic3RyaW5nXCJcbiAgICAgICAgPyBtZXNzYWdlLmNvbnRlbnRcbiAgICAgICAgOiBKU09OLnN0cmluZ2lmeShtZXNzYWdlLmNvbnRlbnQpO1xuICAgIGxldCB0b29sQ2FsbHMgPSBbXTtcbiAgICBpZiAobWVzc2FnZS50b29sX2NhbGxzICE9PSB1bmRlZmluZWQgJiYgbWVzc2FnZS50b29sX2NhbGxzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdG9vbENhbGxzID0gbWVzc2FnZS50b29sX2NhbGxzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UuYWRkaXRpb25hbF9rd2FyZ3MudG9vbF9jYWxscyA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICBtZXNzYWdlLmFkZGl0aW9uYWxfa3dhcmdzLnRvb2xfY2FsbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHVyblZhbHVlczogeyBvdXRwdXQ6IG1lc3NhZ2UuY29udGVudCB9LFxuICAgICAgICAgICAgICAgIGxvZzogc3RyaW5naWZpZWRNZXNzYWdlQ29udGVudCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgLy8gQmVzdCBlZmZvcnQgcGFyc2luZ1xuICAgICAgICBmb3IgKGNvbnN0IHRvb2xDYWxsIG9mIG1lc3NhZ2UuYWRkaXRpb25hbF9rd2FyZ3MudG9vbF9jYWxscyA/PyBbXSkge1xuICAgICAgICAgICAgY29uc3QgZnVuY3Rpb25OYW1lID0gdG9vbENhbGwuZnVuY3Rpb24/Lm5hbWU7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFyZ3MgPSBKU09OLnBhcnNlKHRvb2xDYWxsLmZ1bmN0aW9uLmFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgdG9vbENhbGxzLnB1c2goeyBuYW1lOiBmdW5jdGlvbk5hbWUsIGFyZ3MsIGlkOiB0b29sQ2FsbC5pZCB9KTtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3V0cHV0UGFyc2VyRXhjZXB0aW9uKGBGYWlsZWQgdG8gcGFyc2UgdG9vbCBhcmd1bWVudHMgZnJvbSBjaGF0IG1vZGVsIHJlc3BvbnNlLiBUZXh0OiBcIiR7SlNPTi5zdHJpbmdpZnkodG9vbENhbGxzKX1cIi4gJHtlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0b29sQ2FsbHMubWFwKCh0b29sQ2FsbCwgaSkgPT4ge1xuICAgICAgICBjb25zdCBtZXNzYWdlTG9nID0gaSA9PT0gMCA/IFttZXNzYWdlXSA6IFtdO1xuICAgICAgICBjb25zdCBsb2cgPSBgSW52b2tpbmcgXCIke3Rvb2xDYWxsLm5hbWV9XCIgd2l0aCAke0pTT04uc3RyaW5naWZ5KHRvb2xDYWxsLmFyZ3MgPz8ge30pfVxcbiR7c3RyaW5naWZpZWRNZXNzYWdlQ29udGVudH1gO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdG9vbDogdG9vbENhbGwubmFtZSxcbiAgICAgICAgICAgIHRvb2xJbnB1dDogdG9vbENhbGwuYXJncyxcbiAgICAgICAgICAgIHRvb2xDYWxsSWQ6IHRvb2xDYWxsLmlkID8/IFwiXCIsXG4gICAgICAgICAgICBsb2csXG4gICAgICAgICAgICBtZXNzYWdlTG9nLFxuICAgICAgICB9O1xuICAgIH0pO1xufVxuZXhwb3J0IGNsYXNzIFRvb2xDYWxsaW5nQWdlbnRPdXRwdXRQYXJzZXIgZXh0ZW5kcyBBZ2VudE11bHRpQWN0aW9uT3V0cHV0UGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5cIiwgXCJhZ2VudHNcIiwgXCJ0b29sX2NhbGxpbmdcIl1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJUb29sQ2FsbGluZ0FnZW50T3V0cHV0UGFyc2VyXCI7XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlKHRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUb29sQ2FsbGluZ0FnZW50T3V0cHV0UGFyc2VyIGNhbiBvbmx5IHBhcnNlIG1lc3NhZ2VzLlxcblBhc3NlZCBpbnB1dDogJHt0ZXh0fWApO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZVJlc3VsdChnZW5lcmF0aW9ucykge1xuICAgICAgICBpZiAoXCJtZXNzYWdlXCIgaW4gZ2VuZXJhdGlvbnNbMF0gJiYgaXNCYXNlTWVzc2FnZShnZW5lcmF0aW9uc1swXS5tZXNzYWdlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlQUlNZXNzYWdlVG9Ub29sQWN0aW9uKGdlbmVyYXRpb25zWzBdLm1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInBhcnNlUmVzdWx0IG9uIFRvb2xDYWxsaW5nQWdlbnRPdXRwdXRQYXJzZXIgb25seSB3b3JrcyBvbiBDaGF0R2VuZXJhdGlvbiBvdXRwdXRcIik7XG4gICAgfVxuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zIG5vdCBpbXBsZW1lbnRlZCBpbnNpZGUgVG9vbENhbGxpbmdBZ2VudE91dHB1dFBhcnNlci5cIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/tool_calling/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/base.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/base.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toolkit: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvYmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErRCIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvYmFzZS5qcz8wMmZlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEJhc2VUb29sa2l0IGFzIFRvb2xraXQgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConversationalRetrievalAgent: () => (/* binding */ createConversationalRetrievalAgent)\n/* harmony export */ });\n/* harmony import */ var _memory_summary_buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../memory/summary_buffer.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary_buffer.js\");\n/* harmony import */ var _initialize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../initialize.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/initialize.js\");\n/* harmony import */ var _token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./token_buffer_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js\");\n\n\n\n/**\n * Asynchronous function that creates a conversational retrieval agent\n * using a language model, tools, and options. It initializes the buffer\n * memory based on the provided options and initializes the AgentExecutor\n * with the tools, language model, and memory.\n * @param llm Instance of ChatOpenAI used as the language model for the agent.\n * @param tools Array of StructuredTool instances used by the agent.\n * @param options Optional ConversationalRetrievalAgentOptions to customize the agent.\n * @returns A Promise that resolves to an initialized AgentExecutor.\n */\nasync function createConversationalRetrievalAgent(llm, tools, options) {\n    const { rememberIntermediateSteps = true, memoryKey = \"chat_history\", outputKey = \"output\", inputKey = \"input\", prefix, verbose, } = options ?? {};\n    let memory;\n    if (rememberIntermediateSteps) {\n        memory = new _token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_2__.OpenAIAgentTokenBufferMemory({\n            memoryKey,\n            llm,\n            outputKey,\n            inputKey,\n        });\n    }\n    else {\n        memory = new _memory_summary_buffer_js__WEBPACK_IMPORTED_MODULE_0__.ConversationSummaryBufferMemory({\n            memoryKey,\n            llm,\n            maxTokenLimit: 12000,\n            returnMessages: true,\n            outputKey,\n            inputKey,\n        });\n    }\n    const executor = await (0,_initialize_js__WEBPACK_IMPORTED_MODULE_1__.initializeAgentExecutorWithOptions)(tools, llm, {\n        agentType: \"openai-functions\",\n        memory,\n        verbose,\n        returnIntermediateSteps: rememberIntermediateSteps,\n        agentArgs: {\n            prefix: prefix ??\n                `Do your best to answer the questions. Feel free to use any tools available to look up relevant information, only if necessary.`,\n        },\n    });\n    return executor;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvY29udmVyc2F0aW9uYWxfcmV0cmlldmFsL29wZW5haV9mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRjtBQUNYO0FBQ0Q7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksMkhBQTJIO0FBQ3ZJO0FBQ0E7QUFDQSxxQkFBcUIsaUZBQTRCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsc0ZBQStCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLDJCQUEyQixrRkFBa0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2NvbnZlcnNhdGlvbmFsX3JldHJpZXZhbC9vcGVuYWlfZnVuY3Rpb25zLmpzP2RlZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udmVyc2F0aW9uU3VtbWFyeUJ1ZmZlck1lbW9yeSB9IGZyb20gXCIuLi8uLi8uLi9tZW1vcnkvc3VtbWFyeV9idWZmZXIuanNcIjtcbmltcG9ydCB7IGluaXRpYWxpemVBZ2VudEV4ZWN1dG9yV2l0aE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vaW5pdGlhbGl6ZS5qc1wiO1xuaW1wb3J0IHsgT3BlbkFJQWdlbnRUb2tlbkJ1ZmZlck1lbW9yeSB9IGZyb20gXCIuL3Rva2VuX2J1ZmZlcl9tZW1vcnkuanNcIjtcbi8qKlxuICogQXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhIGNvbnZlcnNhdGlvbmFsIHJldHJpZXZhbCBhZ2VudFxuICogdXNpbmcgYSBsYW5ndWFnZSBtb2RlbCwgdG9vbHMsIGFuZCBvcHRpb25zLiBJdCBpbml0aWFsaXplcyB0aGUgYnVmZmVyXG4gKiBtZW1vcnkgYmFzZWQgb24gdGhlIHByb3ZpZGVkIG9wdGlvbnMgYW5kIGluaXRpYWxpemVzIHRoZSBBZ2VudEV4ZWN1dG9yXG4gKiB3aXRoIHRoZSB0b29scywgbGFuZ3VhZ2UgbW9kZWwsIGFuZCBtZW1vcnkuXG4gKiBAcGFyYW0gbGxtIEluc3RhbmNlIG9mIENoYXRPcGVuQUkgdXNlZCBhcyB0aGUgbGFuZ3VhZ2UgbW9kZWwgZm9yIHRoZSBhZ2VudC5cbiAqIEBwYXJhbSB0b29scyBBcnJheSBvZiBTdHJ1Y3R1cmVkVG9vbCBpbnN0YW5jZXMgdXNlZCBieSB0aGUgYWdlbnQuXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbCBDb252ZXJzYXRpb25hbFJldHJpZXZhbEFnZW50T3B0aW9ucyB0byBjdXN0b21pemUgdGhlIGFnZW50LlxuICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gaW5pdGlhbGl6ZWQgQWdlbnRFeGVjdXRvci5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNvbnZlcnNhdGlvbmFsUmV0cmlldmFsQWdlbnQobGxtLCB0b29scywgb3B0aW9ucykge1xuICAgIGNvbnN0IHsgcmVtZW1iZXJJbnRlcm1lZGlhdGVTdGVwcyA9IHRydWUsIG1lbW9yeUtleSA9IFwiY2hhdF9oaXN0b3J5XCIsIG91dHB1dEtleSA9IFwib3V0cHV0XCIsIGlucHV0S2V5ID0gXCJpbnB1dFwiLCBwcmVmaXgsIHZlcmJvc2UsIH0gPSBvcHRpb25zID8/IHt9O1xuICAgIGxldCBtZW1vcnk7XG4gICAgaWYgKHJlbWVtYmVySW50ZXJtZWRpYXRlU3RlcHMpIHtcbiAgICAgICAgbWVtb3J5ID0gbmV3IE9wZW5BSUFnZW50VG9rZW5CdWZmZXJNZW1vcnkoe1xuICAgICAgICAgICAgbWVtb3J5S2V5LFxuICAgICAgICAgICAgbGxtLFxuICAgICAgICAgICAgb3V0cHV0S2V5LFxuICAgICAgICAgICAgaW5wdXRLZXksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbWVtb3J5ID0gbmV3IENvbnZlcnNhdGlvblN1bW1hcnlCdWZmZXJNZW1vcnkoe1xuICAgICAgICAgICAgbWVtb3J5S2V5LFxuICAgICAgICAgICAgbGxtLFxuICAgICAgICAgICAgbWF4VG9rZW5MaW1pdDogMTIwMDAsXG4gICAgICAgICAgICByZXR1cm5NZXNzYWdlczogdHJ1ZSxcbiAgICAgICAgICAgIG91dHB1dEtleSxcbiAgICAgICAgICAgIGlucHV0S2V5LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgZXhlY3V0b3IgPSBhd2FpdCBpbml0aWFsaXplQWdlbnRFeGVjdXRvcldpdGhPcHRpb25zKHRvb2xzLCBsbG0sIHtcbiAgICAgICAgYWdlbnRUeXBlOiBcIm9wZW5haS1mdW5jdGlvbnNcIixcbiAgICAgICAgbWVtb3J5LFxuICAgICAgICB2ZXJib3NlLFxuICAgICAgICByZXR1cm5JbnRlcm1lZGlhdGVTdGVwczogcmVtZW1iZXJJbnRlcm1lZGlhdGVTdGVwcyxcbiAgICAgICAgYWdlbnRBcmdzOiB7XG4gICAgICAgICAgICBwcmVmaXg6IHByZWZpeCA/P1xuICAgICAgICAgICAgICAgIGBEbyB5b3VyIGJlc3QgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbnMuIEZlZWwgZnJlZSB0byB1c2UgYW55IHRvb2xzIGF2YWlsYWJsZSB0byBsb29rIHVwIHJlbGV2YW50IGluZm9ybWF0aW9uLCBvbmx5IGlmIG5lY2Vzc2FyeS5gLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiBleGVjdXRvcjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIAgentTokenBufferMemory: () => (/* binding */ OpenAIAgentTokenBufferMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/memory */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/memory.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _memory_chat_memory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../memory/chat_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/chat_memory.js\");\n/* harmony import */ var _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../openai_functions/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/openai_functions/index.js\");\n\n\n\n\n/**\n * Memory used to save agent output and intermediate steps.\n */\nclass OpenAIAgentTokenBufferMemory extends _memory_chat_memory_js__WEBPACK_IMPORTED_MODULE_2__.BaseChatMemory {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"maxTokenLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12000\n        });\n        Object.defineProperty(this, \"returnMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"intermediateStepsKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"intermediateSteps\"\n        });\n        this.humanPrefix = fields.humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = fields.aiPrefix ?? this.aiPrefix;\n        this.llm = fields.llm;\n        this.memoryKey = fields.memoryKey ?? this.memoryKey;\n        this.maxTokenLimit = fields.maxTokenLimit ?? this.maxTokenLimit;\n        this.returnMessages = fields.returnMessages ?? this.returnMessages;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.intermediateStepsKey =\n            fields.intermediateStepsKey ?? this.intermediateStepsKey;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Retrieves the messages from the chat history.\n     * @returns Promise that resolves with the messages from the chat history.\n     */\n    async getMessages() {\n        return this.chatHistory.getMessages();\n    }\n    /**\n     * Loads memory variables from the input values.\n     * @param _values Input values.\n     * @returns Promise that resolves with the loaded memory variables.\n     */\n    async loadMemoryVariables(_values) {\n        const buffer = await this.getMessages();\n        if (this.returnMessages) {\n            return { [this.memoryKey]: buffer };\n        }\n        else {\n            const bufferString = (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix);\n            return { [this.memoryKey]: bufferString };\n        }\n    }\n    /**\n     * Saves the context of the chat, including user input, AI output, and\n     * intermediate steps. Prunes the chat history if the total token count\n     * exceeds the maximum limit.\n     * @param inputValues Input values.\n     * @param outputValues Output values.\n     * @returns Promise that resolves when the context has been saved.\n     */\n    async saveContext(inputValues, outputValues) {\n        const inputValue = (0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getInputValue)(inputValues, this.inputKey);\n        const outputValue = (0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getOutputValue)(outputValues, this.outputKey);\n        await this.chatHistory.addUserMessage(inputValue);\n        const intermediateStepMessages = (0,_openai_functions_index_js__WEBPACK_IMPORTED_MODULE_3__._formatIntermediateSteps)(outputValues[this.intermediateStepsKey]);\n        for (const message of intermediateStepMessages) {\n            await this.chatHistory.addMessage(message);\n        }\n        await this.chatHistory.addAIChatMessage(outputValue);\n        const currentMessages = await this.chatHistory.getMessages();\n        let tokenInfo = await this.llm.getNumTokensFromMessages(currentMessages);\n        if (tokenInfo.totalCount > this.maxTokenLimit) {\n            const prunedMemory = [];\n            while (tokenInfo.totalCount > this.maxTokenLimit) {\n                const retainedMessage = currentMessages.pop();\n                if (!retainedMessage) {\n                    console.warn(`Could not prune enough messages from chat history to stay under ${this.maxTokenLimit} tokens.`);\n                    break;\n                }\n                prunedMemory.push(retainedMessage);\n                tokenInfo = await this.llm.getNumTokensFromMessages(currentMessages);\n            }\n            await this.chatHistory.clear();\n            for (const message of prunedMemory) {\n                await this.chatHistory.addMessage(message);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js ***!
  \**********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRetrieverTool: () => (/* binding */ createRetrieverTool)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.24.1/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _util_document_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util/document.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/document.js\");\n\n\n\n/** @deprecated Use \"langchain/tools/retriever\" instead. */\nfunction createRetrieverTool(retriever, input) {\n    const func = async ({ input }, runManager) => {\n        const docs = await retriever.getRelevantDocuments(input, runManager?.getChild(\"retriever\"));\n        return (0,_util_document_js__WEBPACK_IMPORTED_MODULE_1__.formatDocumentsAsString)(docs);\n    };\n    const schema = zod__WEBPACK_IMPORTED_MODULE_2__.z.object({\n        input: zod__WEBPACK_IMPORTED_MODULE_2__.z\n            .string()\n            .describe(\"Natural language query used as input to the retriever\"),\n    });\n    return new _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicStructuredTool({ ...input, func, schema });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvY29udmVyc2F0aW9uYWxfcmV0cmlldmFsL3Rvb2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QjtBQUN1QztBQUNLO0FBQ3BFO0FBQ087QUFDUCwwQkFBMEIsT0FBTztBQUNqQztBQUNBLGVBQWUsMEVBQXVCO0FBQ3RDO0FBQ0EsbUJBQW1CLGtDQUFDO0FBQ3BCLGVBQWUsa0NBQUM7QUFDaEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxlQUFlLHdFQUFxQixHQUFHLHdCQUF3QjtBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvY29udmVyc2F0aW9uYWxfcmV0cmlldmFsL3Rvb2wuanM/MTNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgRHluYW1pY1N0cnVjdHVyZWRUb29sLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIjtcbmltcG9ydCB7IGZvcm1hdERvY3VtZW50c0FzU3RyaW5nIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWwvZG9jdW1lbnQuanNcIjtcbi8qKiBAZGVwcmVjYXRlZCBVc2UgXCJsYW5nY2hhaW4vdG9vbHMvcmV0cmlldmVyXCIgaW5zdGVhZC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZXRyaWV2ZXJUb29sKHJldHJpZXZlciwgaW5wdXQpIHtcbiAgICBjb25zdCBmdW5jID0gYXN5bmMgKHsgaW5wdXQgfSwgcnVuTWFuYWdlcikgPT4ge1xuICAgICAgICBjb25zdCBkb2NzID0gYXdhaXQgcmV0cmlldmVyLmdldFJlbGV2YW50RG9jdW1lbnRzKGlucHV0LCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcInJldHJpZXZlclwiKSk7XG4gICAgICAgIHJldHVybiBmb3JtYXREb2N1bWVudHNBc1N0cmluZyhkb2NzKTtcbiAgICB9O1xuICAgIGNvbnN0IHNjaGVtYSA9IHoub2JqZWN0KHtcbiAgICAgICAgaW5wdXQ6IHpcbiAgICAgICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAgICAgLmRlc2NyaWJlKFwiTmF0dXJhbCBsYW5ndWFnZSBxdWVyeSB1c2VkIGFzIGlucHV0IHRvIHRoZSByZXRyaWV2ZXJcIiksXG4gICAgfSk7XG4gICAgcmV0dXJuIG5ldyBEeW5hbWljU3RydWN0dXJlZFRvb2woeyAuLi5pbnB1dCwgZnVuYywgc2NoZW1hIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/index.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/index.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonToolkit: () => (/* reexport safe */ _json_json_js__WEBPACK_IMPORTED_MODULE_0__.JsonToolkit),\n/* harmony export */   OpenAIAgentTokenBufferMemory: () => (/* reexport safe */ _conversational_retrieval_token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_5__.OpenAIAgentTokenBufferMemory),\n/* harmony export */   OpenApiToolkit: () => (/* reexport safe */ _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__.OpenApiToolkit),\n/* harmony export */   RequestsToolkit: () => (/* reexport safe */ _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__.RequestsToolkit),\n/* harmony export */   VectorStoreRouterToolkit: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.VectorStoreRouterToolkit),\n/* harmony export */   VectorStoreToolkit: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.VectorStoreToolkit),\n/* harmony export */   createConversationalRetrievalAgent: () => (/* reexport safe */ _conversational_retrieval_openai_functions_js__WEBPACK_IMPORTED_MODULE_4__.createConversationalRetrievalAgent),\n/* harmony export */   createJsonAgent: () => (/* reexport safe */ _json_json_js__WEBPACK_IMPORTED_MODULE_0__.createJsonAgent),\n/* harmony export */   createOpenApiAgent: () => (/* reexport safe */ _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__.createOpenApiAgent),\n/* harmony export */   createRetrieverTool: () => (/* reexport safe */ _conversational_retrieval_tool_js__WEBPACK_IMPORTED_MODULE_3__.createRetrieverTool),\n/* harmony export */   createVectorStoreAgent: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.createVectorStoreAgent),\n/* harmony export */   createVectorStoreRouterAgent: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.createVectorStoreRouterAgent)\n/* harmony export */ });\n/* harmony import */ var _json_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/json.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/json.js\");\n/* harmony import */ var _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./openapi/openapi.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/openapi.js\");\n/* harmony import */ var _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vectorstore/vectorstore.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js\");\n/* harmony import */ var _conversational_retrieval_tool_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conversational_retrieval/tool.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js\");\n/* harmony import */ var _conversational_retrieval_openai_functions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conversational_retrieval/openai_functions.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js\");\n/* harmony import */ var _conversational_retrieval_token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./conversational_retrieval/token_buffer_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThEO0FBQzhCO0FBQ3VEO0FBQzFFO0FBQzRCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2luZGV4LmpzPzFmOTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSnNvblRvb2xraXQsIGNyZWF0ZUpzb25BZ2VudCB9IGZyb20gXCIuL2pzb24vanNvbi5qc1wiO1xuZXhwb3J0IHsgUmVxdWVzdHNUb29sa2l0LCBPcGVuQXBpVG9vbGtpdCwgY3JlYXRlT3BlbkFwaUFnZW50LCB9IGZyb20gXCIuL29wZW5hcGkvb3BlbmFwaS5qc1wiO1xuZXhwb3J0IHsgVmVjdG9yU3RvcmVUb29sa2l0LCBWZWN0b3JTdG9yZVJvdXRlclRvb2xraXQsIGNyZWF0ZVZlY3RvclN0b3JlQWdlbnQsIGNyZWF0ZVZlY3RvclN0b3JlUm91dGVyQWdlbnQsIH0gZnJvbSBcIi4vdmVjdG9yc3RvcmUvdmVjdG9yc3RvcmUuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVJldHJpZXZlclRvb2wgfSBmcm9tIFwiLi9jb252ZXJzYXRpb25hbF9yZXRyaWV2YWwvdG9vbC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQ29udmVyc2F0aW9uYWxSZXRyaWV2YWxBZ2VudCwgfSBmcm9tIFwiLi9jb252ZXJzYXRpb25hbF9yZXRyaWV2YWwvb3BlbmFpX2Z1bmN0aW9ucy5qc1wiO1xuZXhwb3J0IHsgT3BlbkFJQWdlbnRUb2tlbkJ1ZmZlck1lbW9yeSB9IGZyb20gXCIuL2NvbnZlcnNhdGlvbmFsX3JldHJpZXZhbC90b2tlbl9idWZmZXJfbWVtb3J5LmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/json.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/json.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonToolkit: () => (/* binding */ JsonToolkit),\n/* harmony export */   createJsonAgent: () => (/* binding */ createJsonAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _tools_json_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tools/json.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/json.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mrkl/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../executor.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js\");\n\n\n\n\n\n\n/**\n * Represents a toolkit for working with JSON data. It initializes the\n * JSON tools based on the provided JSON specification.\n * @example\n * ```typescript\n * const toolkit = new JsonToolkit(new JsonSpec());\n * const executor = createJsonAgent(model, toolkit);\n * const result = await executor.invoke({\n *   input: 'What are the required parameters in the request body to the /completions endpoint?'\n * });\n * ```\n */\nclass JsonToolkit extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit {\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = [\n            new _tools_json_js__WEBPACK_IMPORTED_MODULE_1__.JsonListKeysTool(jsonSpec),\n            new _tools_json_js__WEBPACK_IMPORTED_MODULE_1__.JsonGetValueTool(jsonSpec),\n        ];\n    }\n}\n/**\n * @deprecated Create a specific agent with a custom tool instead.\n *\n * Creates a JSON agent using a language model, a JSON toolkit, and\n * optional prompt arguments. It creates a prompt for the agent using the\n * JSON tools and the provided prefix and suffix. It then creates a\n * ZeroShotAgent with the prompt and the JSON tools, and returns an\n * AgentExecutor for executing the agent with the tools.\n * @param llm The language model used to create the JSON agent.\n * @param toolkit The JSON toolkit used to create the JSON agent.\n * @param args Optional prompt arguments used to create the JSON agent.\n * @returns An AgentExecutor for executing the created JSON agent with the tools.\n */\nfunction createJsonAgent(llm, toolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_2__.JSON_PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_2__.JSON_SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__.LLMChain({ prompt, llm });\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_5__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvanNvbi9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW9EO0FBQ3lCO0FBQ3RCO0FBQ0M7QUFDSjtBQUNGO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sMEJBQTBCLDhEQUFXO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxnQkFBZ0IsNERBQWdCO0FBQ2hDLGdCQUFnQiw0REFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksU0FBUyxtREFBVyxXQUFXLG1EQUFXLG9EQUFvRDtBQUMxRyxZQUFZLFFBQVE7QUFDcEIsbUJBQW1CLHlEQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzQkFBc0IsMERBQVEsR0FBRyxhQUFhO0FBQzlDLHNCQUFzQix5REFBYTtBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMLFdBQVcsdURBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9qc29uL2pzb24uanM/YzkzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlVG9vbGtpdCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIjtcbmltcG9ydCB7IEpzb25HZXRWYWx1ZVRvb2wsIEpzb25MaXN0S2V5c1Rvb2wsIH0gZnJvbSBcIi4uLy4uLy4uL3Rvb2xzL2pzb24uanNcIjtcbmltcG9ydCB7IEpTT05fUFJFRklYLCBKU09OX1NVRkZJWCB9IGZyb20gXCIuL3Byb21wdC5qc1wiO1xuaW1wb3J0IHsgTExNQ2hhaW4gfSBmcm9tIFwiLi4vLi4vLi4vY2hhaW5zL2xsbV9jaGFpbi5qc1wiO1xuaW1wb3J0IHsgWmVyb1Nob3RBZ2VudCB9IGZyb20gXCIuLi8uLi9tcmtsL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBBZ2VudEV4ZWN1dG9yIH0gZnJvbSBcIi4uLy4uL2V4ZWN1dG9yLmpzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSB0b29sa2l0IGZvciB3b3JraW5nIHdpdGggSlNPTiBkYXRhLiBJdCBpbml0aWFsaXplcyB0aGVcbiAqIEpTT04gdG9vbHMgYmFzZWQgb24gdGhlIHByb3ZpZGVkIEpTT04gc3BlY2lmaWNhdGlvbi5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBjb25zdCB0b29sa2l0ID0gbmV3IEpzb25Ub29sa2l0KG5ldyBKc29uU3BlYygpKTtcbiAqIGNvbnN0IGV4ZWN1dG9yID0gY3JlYXRlSnNvbkFnZW50KG1vZGVsLCB0b29sa2l0KTtcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGV4ZWN1dG9yLmludm9rZSh7XG4gKiAgIGlucHV0OiAnV2hhdCBhcmUgdGhlIHJlcXVpcmVkIHBhcmFtZXRlcnMgaW4gdGhlIHJlcXVlc3QgYm9keSB0byB0aGUgL2NvbXBsZXRpb25zIGVuZHBvaW50PydcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBKc29uVG9vbGtpdCBleHRlbmRzIEJhc2VUb29sa2l0IHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uU3BlYykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJqc29uU3BlY1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZToganNvblNwZWNcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRvb2xzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudG9vbHMgPSBbXG4gICAgICAgICAgICBuZXcgSnNvbkxpc3RLZXlzVG9vbChqc29uU3BlYyksXG4gICAgICAgICAgICBuZXcgSnNvbkdldFZhbHVlVG9vbChqc29uU3BlYyksXG4gICAgICAgIF07XG4gICAgfVxufVxuLyoqXG4gKiBAZGVwcmVjYXRlZCBDcmVhdGUgYSBzcGVjaWZpYyBhZ2VudCB3aXRoIGEgY3VzdG9tIHRvb2wgaW5zdGVhZC5cbiAqXG4gKiBDcmVhdGVzIGEgSlNPTiBhZ2VudCB1c2luZyBhIGxhbmd1YWdlIG1vZGVsLCBhIEpTT04gdG9vbGtpdCwgYW5kXG4gKiBvcHRpb25hbCBwcm9tcHQgYXJndW1lbnRzLiBJdCBjcmVhdGVzIGEgcHJvbXB0IGZvciB0aGUgYWdlbnQgdXNpbmcgdGhlXG4gKiBKU09OIHRvb2xzIGFuZCB0aGUgcHJvdmlkZWQgcHJlZml4IGFuZCBzdWZmaXguIEl0IHRoZW4gY3JlYXRlcyBhXG4gKiBaZXJvU2hvdEFnZW50IHdpdGggdGhlIHByb21wdCBhbmQgdGhlIEpTT04gdG9vbHMsIGFuZCByZXR1cm5zIGFuXG4gKiBBZ2VudEV4ZWN1dG9yIGZvciBleGVjdXRpbmcgdGhlIGFnZW50IHdpdGggdGhlIHRvb2xzLlxuICogQHBhcmFtIGxsbSBUaGUgbGFuZ3VhZ2UgbW9kZWwgdXNlZCB0byBjcmVhdGUgdGhlIEpTT04gYWdlbnQuXG4gKiBAcGFyYW0gdG9vbGtpdCBUaGUgSlNPTiB0b29sa2l0IHVzZWQgdG8gY3JlYXRlIHRoZSBKU09OIGFnZW50LlxuICogQHBhcmFtIGFyZ3MgT3B0aW9uYWwgcHJvbXB0IGFyZ3VtZW50cyB1c2VkIHRvIGNyZWF0ZSB0aGUgSlNPTiBhZ2VudC5cbiAqIEByZXR1cm5zIEFuIEFnZW50RXhlY3V0b3IgZm9yIGV4ZWN1dGluZyB0aGUgY3JlYXRlZCBKU09OIGFnZW50IHdpdGggdGhlIHRvb2xzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSnNvbkFnZW50KGxsbSwgdG9vbGtpdCwgYXJncykge1xuICAgIGNvbnN0IHsgcHJlZml4ID0gSlNPTl9QUkVGSVgsIHN1ZmZpeCA9IEpTT05fU1VGRklYLCBpbnB1dFZhcmlhYmxlcyA9IFtcImlucHV0XCIsIFwiYWdlbnRfc2NyYXRjaHBhZFwiXSwgfSA9IGFyZ3MgPz8ge307XG4gICAgY29uc3QgeyB0b29scyB9ID0gdG9vbGtpdDtcbiAgICBjb25zdCBwcm9tcHQgPSBaZXJvU2hvdEFnZW50LmNyZWF0ZVByb21wdCh0b29scywge1xuICAgICAgICBwcmVmaXgsXG4gICAgICAgIHN1ZmZpeCxcbiAgICAgICAgaW5wdXRWYXJpYWJsZXMsXG4gICAgfSk7XG4gICAgY29uc3QgY2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBwcm9tcHQsIGxsbSB9KTtcbiAgICBjb25zdCBhZ2VudCA9IG5ldyBaZXJvU2hvdEFnZW50KHtcbiAgICAgICAgbGxtQ2hhaW46IGNoYWluLFxuICAgICAgICBhbGxvd2VkVG9vbHM6IHRvb2xzLm1hcCgodCkgPT4gdC5uYW1lKSxcbiAgICB9KTtcbiAgICByZXR1cm4gQWdlbnRFeGVjdXRvci5mcm9tQWdlbnRBbmRUb29scyh7XG4gICAgICAgIGFnZW50LFxuICAgICAgICB0b29scyxcbiAgICAgICAgcmV0dXJuSW50ZXJtZWRpYXRlU3RlcHM6IHRydWUsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/prompt.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/prompt.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSON_PREFIX: () => (/* binding */ JSON_PREFIX),\n/* harmony export */   JSON_SUFFIX: () => (/* binding */ JSON_SUFFIX)\n/* harmony export */ });\nconst JSON_PREFIX = `You are an agent designed to interact with JSON.\nYour goal is to return a final answer by interacting with the JSON.\nYou have access to the following tools which help you learn more about the JSON you are interacting with.\nOnly use the below tools. Only use the information returned by the below tools to construct your final answer.\nDo not make up any information that is not contained in the JSON.\nYour input to the tools should be in the form of in json pointer syntax (e.g. /key1/0/key2).\nYou must escape a slash in a key with a ~1, and escape a tilde with a ~0.\nFor example, to access the key /foo, you would use /~1foo\nYou should only use keys that you know for a fact exist. You must validate that a key exists by seeing it previously when calling 'json_list_keys'.\nIf you have not seen a key in one of those responses, you cannot use it.\nYou should only add one key at a time to the path. You cannot add multiple keys at once.\nIf you encounter a null or undefined value, go back to the previous key, look at the available keys, and try again.\n\nIf the question does not seem to be related to the JSON, just return \"I don't know\" as the answer.\nAlways begin your interaction with the 'json_list_keys' with an empty string as the input to see what keys exist in the JSON.\n\nNote that sometimes the value at a given path is large. In this case, you will get an error \"Value is a large dictionary, should explore its keys directly\".\nIn this case, you should ALWAYS follow up by using the 'json_list_keys' tool to see what keys exist at that path.\nDo not simply refer the user to the JSON or a section of the JSON, as this is not a valid answer. Keep digging until you find the answer and explicitly return it.`;\nconst JSON_SUFFIX = `Begin!\"\n\nQuestion: {input}\nThought: I should look at the keys that exist to see what I can query. I should use the 'json_list_keys' tool with an empty string as the input.\n{agent_scratchpad}`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvanNvbi9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUCxXQUFXO0FBQ1g7QUFDQSxDQUFDLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvanNvbi9wcm9tcHQuanM/ODk2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSlNPTl9QUkVGSVggPSBgWW91IGFyZSBhbiBhZ2VudCBkZXNpZ25lZCB0byBpbnRlcmFjdCB3aXRoIEpTT04uXG5Zb3VyIGdvYWwgaXMgdG8gcmV0dXJuIGEgZmluYWwgYW5zd2VyIGJ5IGludGVyYWN0aW5nIHdpdGggdGhlIEpTT04uXG5Zb3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZvbGxvd2luZyB0b29scyB3aGljaCBoZWxwIHlvdSBsZWFybiBtb3JlIGFib3V0IHRoZSBKU09OIHlvdSBhcmUgaW50ZXJhY3Rpbmcgd2l0aC5cbk9ubHkgdXNlIHRoZSBiZWxvdyB0b29scy4gT25seSB1c2UgdGhlIGluZm9ybWF0aW9uIHJldHVybmVkIGJ5IHRoZSBiZWxvdyB0b29scyB0byBjb25zdHJ1Y3QgeW91ciBmaW5hbCBhbnN3ZXIuXG5EbyBub3QgbWFrZSB1cCBhbnkgaW5mb3JtYXRpb24gdGhhdCBpcyBub3QgY29udGFpbmVkIGluIHRoZSBKU09OLlxuWW91ciBpbnB1dCB0byB0aGUgdG9vbHMgc2hvdWxkIGJlIGluIHRoZSBmb3JtIG9mIGluIGpzb24gcG9pbnRlciBzeW50YXggKGUuZy4gL2tleTEvMC9rZXkyKS5cbllvdSBtdXN0IGVzY2FwZSBhIHNsYXNoIGluIGEga2V5IHdpdGggYSB+MSwgYW5kIGVzY2FwZSBhIHRpbGRlIHdpdGggYSB+MC5cbkZvciBleGFtcGxlLCB0byBhY2Nlc3MgdGhlIGtleSAvZm9vLCB5b3Ugd291bGQgdXNlIC9+MWZvb1xuWW91IHNob3VsZCBvbmx5IHVzZSBrZXlzIHRoYXQgeW91IGtub3cgZm9yIGEgZmFjdCBleGlzdC4gWW91IG11c3QgdmFsaWRhdGUgdGhhdCBhIGtleSBleGlzdHMgYnkgc2VlaW5nIGl0IHByZXZpb3VzbHkgd2hlbiBjYWxsaW5nICdqc29uX2xpc3Rfa2V5cycuXG5JZiB5b3UgaGF2ZSBub3Qgc2VlbiBhIGtleSBpbiBvbmUgb2YgdGhvc2UgcmVzcG9uc2VzLCB5b3UgY2Fubm90IHVzZSBpdC5cbllvdSBzaG91bGQgb25seSBhZGQgb25lIGtleSBhdCBhIHRpbWUgdG8gdGhlIHBhdGguIFlvdSBjYW5ub3QgYWRkIG11bHRpcGxlIGtleXMgYXQgb25jZS5cbklmIHlvdSBlbmNvdW50ZXIgYSBudWxsIG9yIHVuZGVmaW5lZCB2YWx1ZSwgZ28gYmFjayB0byB0aGUgcHJldmlvdXMga2V5LCBsb29rIGF0IHRoZSBhdmFpbGFibGUga2V5cywgYW5kIHRyeSBhZ2Fpbi5cblxuSWYgdGhlIHF1ZXN0aW9uIGRvZXMgbm90IHNlZW0gdG8gYmUgcmVsYXRlZCB0byB0aGUgSlNPTiwganVzdCByZXR1cm4gXCJJIGRvbid0IGtub3dcIiBhcyB0aGUgYW5zd2VyLlxuQWx3YXlzIGJlZ2luIHlvdXIgaW50ZXJhY3Rpb24gd2l0aCB0aGUgJ2pzb25fbGlzdF9rZXlzJyB3aXRoIGFuIGVtcHR5IHN0cmluZyBhcyB0aGUgaW5wdXQgdG8gc2VlIHdoYXQga2V5cyBleGlzdCBpbiB0aGUgSlNPTi5cblxuTm90ZSB0aGF0IHNvbWV0aW1lcyB0aGUgdmFsdWUgYXQgYSBnaXZlbiBwYXRoIGlzIGxhcmdlLiBJbiB0aGlzIGNhc2UsIHlvdSB3aWxsIGdldCBhbiBlcnJvciBcIlZhbHVlIGlzIGEgbGFyZ2UgZGljdGlvbmFyeSwgc2hvdWxkIGV4cGxvcmUgaXRzIGtleXMgZGlyZWN0bHlcIi5cbkluIHRoaXMgY2FzZSwgeW91IHNob3VsZCBBTFdBWVMgZm9sbG93IHVwIGJ5IHVzaW5nIHRoZSAnanNvbl9saXN0X2tleXMnIHRvb2wgdG8gc2VlIHdoYXQga2V5cyBleGlzdCBhdCB0aGF0IHBhdGguXG5EbyBub3Qgc2ltcGx5IHJlZmVyIHRoZSB1c2VyIHRvIHRoZSBKU09OIG9yIGEgc2VjdGlvbiBvZiB0aGUgSlNPTiwgYXMgdGhpcyBpcyBub3QgYSB2YWxpZCBhbnN3ZXIuIEtlZXAgZGlnZ2luZyB1bnRpbCB5b3UgZmluZCB0aGUgYW5zd2VyIGFuZCBleHBsaWNpdGx5IHJldHVybiBpdC5gO1xuZXhwb3J0IGNvbnN0IEpTT05fU1VGRklYID0gYEJlZ2luIVwiXG5cblF1ZXN0aW9uOiB7aW5wdXR9XG5UaG91Z2h0OiBJIHNob3VsZCBsb29rIGF0IHRoZSBrZXlzIHRoYXQgZXhpc3QgdG8gc2VlIHdoYXQgSSBjYW4gcXVlcnkuIEkgc2hvdWxkIHVzZSB0aGUgJ2pzb25fbGlzdF9rZXlzJyB0b29sIHdpdGggYW4gZW1wdHkgc3RyaW5nIGFzIHRoZSBpbnB1dC5cbnthZ2VudF9zY3JhdGNocGFkfWA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/openapi.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/openapi.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenApiToolkit: () => (/* binding */ OpenApiToolkit),\n/* harmony export */   RequestsToolkit: () => (/* binding */ RequestsToolkit),\n/* harmony export */   createOpenApiAgent: () => (/* binding */ createOpenApiAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../executor.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mrkl/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _tools_requests_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../tools/requests.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/requests.js\");\n/* harmony import */ var _json_json_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../json/json.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/json/json.js\");\n\n\n\n\n\n\n\n/**\n * Represents a toolkit for making HTTP requests. It initializes the\n * request tools based on the provided headers.\n */\nclass RequestsToolkit extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit {\n    constructor(headers) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = [new _tools_requests_js__WEBPACK_IMPORTED_MODULE_5__.RequestsGetTool(headers), new _tools_requests_js__WEBPACK_IMPORTED_MODULE_5__.RequestsPostTool(headers)];\n    }\n}\n/**\n * Extends the `RequestsToolkit` class and adds a dynamic tool for\n * exploring JSON data. It creates a JSON agent using the `JsonToolkit`\n * and the provided language model, and adds the JSON explorer tool to the\n * toolkit.\n * @example\n * ```typescript\n * const toolkit = new OpenApiToolkit(\n *   new JsonSpec({\n *   }),\n *   new ChatOpenAI({ temperature: 0 }),\n *   {\n *     \"Content-Type\": \"application/json\",\n *     Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,\n *   },\n * );\n *\n * const result = await toolkit.invoke({\n *   input:\n *     \"Make a POST request to openai /completions. The prompt should be 'tell me a joke.'\",\n * });\n * console.log(`Got output ${result.output}`);\n * ```\n */\nclass OpenApiToolkit extends RequestsToolkit {\n    constructor(jsonSpec, llm, headers) {\n        super(headers);\n        const jsonAgent = (0,_json_json_js__WEBPACK_IMPORTED_MODULE_6__.createJsonAgent)(llm, new _json_json_js__WEBPACK_IMPORTED_MODULE_6__.JsonToolkit(jsonSpec));\n        this.tools = [\n            ...this.tools,\n            new _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicTool({\n                name: \"json_explorer\",\n                func: async (input) => {\n                    const result = await jsonAgent.call({ input });\n                    return result.output;\n                },\n                description: _prompt_js__WEBPACK_IMPORTED_MODULE_2__.JSON_EXPLORER_DESCRIPTION,\n            }),\n        ];\n    }\n}\n/**\n * @deprecated Create a specific agent with a custom tool instead.\n *\n * Creates an OpenAPI agent using a language model, an OpenAPI toolkit,\n * and optional prompt arguments. It creates a prompt for the agent using\n * the OpenAPI tools and the provided prefix and suffix. It then creates a\n * ZeroShotAgent with the prompt and the OpenAPI tools, and returns an\n * AgentExecutor for executing the agent with the tools.\n * @param llm The language model to use.\n * @param openApiToolkit The OpenAPI toolkit to use.\n * @param args Optional arguments for creating the prompt.\n * @returns An AgentExecutor for executing the agent with the tools.\n *\n * @security **Security Notice** This agent provides access to external APIs.\n * Use with caution as this agent can make API calls with arbitrary headers.\n * Exposing this agent to users could lead to security vulnerabilities. Consider\n * limiting access to what endpoints it can hit, what actions can be taken, and\n * more.\n *\n * @link See https://js.langchain.com/docs/security for more information.\n */\nfunction createOpenApiAgent(llm, openApiToolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_2__.OPENAPI_PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_2__.OPENAPI_SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = openApiToolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__.LLMChain({\n        prompt,\n        llm,\n    });\n    const toolNames = tools.map((tool) => tool.name);\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgent({ llmChain: chain, allowedTools: toolNames });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_1__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvb3BlbmFwaS9vcGVuYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBaUU7QUFDZjtBQUN1QztBQUNqQztBQUNKO0FBQzRCO0FBQ2pCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEJBQThCLDhEQUFXO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULDBCQUEwQiwrREFBZSxlQUFlLGdFQUFnQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTtBQUNBLGdDQUFnQywyQkFBMkI7QUFDM0QsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDBCQUEwQiw4REFBZSxVQUFVLHNEQUFXO0FBQzlEO0FBQ0E7QUFDQSxnQkFBZ0IsOERBQVc7QUFDM0I7QUFDQTtBQUNBLDBEQUEwRCxPQUFPO0FBQ2pFO0FBQ0EsaUJBQWlCO0FBQ2pCLDZCQUE2QixpRUFBeUI7QUFDdEQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxTQUFTLHNEQUFjLFdBQVcsc0RBQWMsb0RBQW9EO0FBQ2hILFlBQVksUUFBUTtBQUNwQixtQkFBbUIseURBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHNCQUFzQiwwREFBUTtBQUM5QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCLHlEQUFhLEdBQUcsMENBQTBDO0FBQ2hGLFdBQVcsdURBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9vcGVuYXBpL29wZW5hcGkuanM/M2MxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbWljVG9vbCwgQmFzZVRvb2xraXQgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG5pbXBvcnQgeyBBZ2VudEV4ZWN1dG9yIH0gZnJvbSBcIi4uLy4uL2V4ZWN1dG9yLmpzXCI7XG5pbXBvcnQgeyBPUEVOQVBJX1BSRUZJWCwgT1BFTkFQSV9TVUZGSVgsIEpTT05fRVhQTE9SRVJfREVTQ1JJUFRJT04sIH0gZnJvbSBcIi4vcHJvbXB0LmpzXCI7XG5pbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi8uLi8uLi9jaGFpbnMvbGxtX2NoYWluLmpzXCI7XG5pbXBvcnQgeyBaZXJvU2hvdEFnZW50IH0gZnJvbSBcIi4uLy4uL21ya2wvaW5kZXguanNcIjtcbmltcG9ydCB7IFJlcXVlc3RzR2V0VG9vbCwgUmVxdWVzdHNQb3N0VG9vbCwgfSBmcm9tIFwiLi4vLi4vLi4vdG9vbHMvcmVxdWVzdHMuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUpzb25BZ2VudCwgSnNvblRvb2xraXQgfSBmcm9tIFwiLi4vanNvbi9qc29uLmpzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSB0b29sa2l0IGZvciBtYWtpbmcgSFRUUCByZXF1ZXN0cy4gSXQgaW5pdGlhbGl6ZXMgdGhlXG4gKiByZXF1ZXN0IHRvb2xzIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBoZWFkZXJzLlxuICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdHNUb29sa2l0IGV4dGVuZHMgQmFzZVRvb2xraXQge1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlcnMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidG9vbHNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50b29scyA9IFtuZXcgUmVxdWVzdHNHZXRUb29sKGhlYWRlcnMpLCBuZXcgUmVxdWVzdHNQb3N0VG9vbChoZWFkZXJzKV07XG4gICAgfVxufVxuLyoqXG4gKiBFeHRlbmRzIHRoZSBgUmVxdWVzdHNUb29sa2l0YCBjbGFzcyBhbmQgYWRkcyBhIGR5bmFtaWMgdG9vbCBmb3JcbiAqIGV4cGxvcmluZyBKU09OIGRhdGEuIEl0IGNyZWF0ZXMgYSBKU09OIGFnZW50IHVzaW5nIHRoZSBgSnNvblRvb2xraXRgXG4gKiBhbmQgdGhlIHByb3ZpZGVkIGxhbmd1YWdlIG1vZGVsLCBhbmQgYWRkcyB0aGUgSlNPTiBleHBsb3JlciB0b29sIHRvIHRoZVxuICogdG9vbGtpdC5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBjb25zdCB0b29sa2l0ID0gbmV3IE9wZW5BcGlUb29sa2l0KFxuICogICBuZXcgSnNvblNwZWMoe1xuICogICB9KSxcbiAqICAgbmV3IENoYXRPcGVuQUkoeyB0ZW1wZXJhdHVyZTogMCB9KSxcbiAqICAge1xuICogICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICogICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWX1gLFxuICogICB9LFxuICogKTtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCB0b29sa2l0Lmludm9rZSh7XG4gKiAgIGlucHV0OlxuICogICAgIFwiTWFrZSBhIFBPU1QgcmVxdWVzdCB0byBvcGVuYWkgL2NvbXBsZXRpb25zLiBUaGUgcHJvbXB0IHNob3VsZCBiZSAndGVsbCBtZSBhIGpva2UuJ1wiLFxuICogfSk7XG4gKiBjb25zb2xlLmxvZyhgR290IG91dHB1dCAke3Jlc3VsdC5vdXRwdXR9YCk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIE9wZW5BcGlUb29sa2l0IGV4dGVuZHMgUmVxdWVzdHNUb29sa2l0IHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uU3BlYywgbGxtLCBoZWFkZXJzKSB7XG4gICAgICAgIHN1cGVyKGhlYWRlcnMpO1xuICAgICAgICBjb25zdCBqc29uQWdlbnQgPSBjcmVhdGVKc29uQWdlbnQobGxtLCBuZXcgSnNvblRvb2xraXQoanNvblNwZWMpKTtcbiAgICAgICAgdGhpcy50b29scyA9IFtcbiAgICAgICAgICAgIC4uLnRoaXMudG9vbHMsXG4gICAgICAgICAgICBuZXcgRHluYW1pY1Rvb2woe1xuICAgICAgICAgICAgICAgIG5hbWU6IFwianNvbl9leHBsb3JlclwiLFxuICAgICAgICAgICAgICAgIGZ1bmM6IGFzeW5jIChpbnB1dCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBqc29uQWdlbnQuY2FsbCh7IGlucHV0IH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lm91dHB1dDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBKU09OX0VYUExPUkVSX0RFU0NSSVBUSU9OLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIF07XG4gICAgfVxufVxuLyoqXG4gKiBAZGVwcmVjYXRlZCBDcmVhdGUgYSBzcGVjaWZpYyBhZ2VudCB3aXRoIGEgY3VzdG9tIHRvb2wgaW5zdGVhZC5cbiAqXG4gKiBDcmVhdGVzIGFuIE9wZW5BUEkgYWdlbnQgdXNpbmcgYSBsYW5ndWFnZSBtb2RlbCwgYW4gT3BlbkFQSSB0b29sa2l0LFxuICogYW5kIG9wdGlvbmFsIHByb21wdCBhcmd1bWVudHMuIEl0IGNyZWF0ZXMgYSBwcm9tcHQgZm9yIHRoZSBhZ2VudCB1c2luZ1xuICogdGhlIE9wZW5BUEkgdG9vbHMgYW5kIHRoZSBwcm92aWRlZCBwcmVmaXggYW5kIHN1ZmZpeC4gSXQgdGhlbiBjcmVhdGVzIGFcbiAqIFplcm9TaG90QWdlbnQgd2l0aCB0aGUgcHJvbXB0IGFuZCB0aGUgT3BlbkFQSSB0b29scywgYW5kIHJldHVybnMgYW5cbiAqIEFnZW50RXhlY3V0b3IgZm9yIGV4ZWN1dGluZyB0aGUgYWdlbnQgd2l0aCB0aGUgdG9vbHMuXG4gKiBAcGFyYW0gbGxtIFRoZSBsYW5ndWFnZSBtb2RlbCB0byB1c2UuXG4gKiBAcGFyYW0gb3BlbkFwaVRvb2xraXQgVGhlIE9wZW5BUEkgdG9vbGtpdCB0byB1c2UuXG4gKiBAcGFyYW0gYXJncyBPcHRpb25hbCBhcmd1bWVudHMgZm9yIGNyZWF0aW5nIHRoZSBwcm9tcHQuXG4gKiBAcmV0dXJucyBBbiBBZ2VudEV4ZWN1dG9yIGZvciBleGVjdXRpbmcgdGhlIGFnZW50IHdpdGggdGhlIHRvb2xzLlxuICpcbiAqIEBzZWN1cml0eSAqKlNlY3VyaXR5IE5vdGljZSoqIFRoaXMgYWdlbnQgcHJvdmlkZXMgYWNjZXNzIHRvIGV4dGVybmFsIEFQSXMuXG4gKiBVc2Ugd2l0aCBjYXV0aW9uIGFzIHRoaXMgYWdlbnQgY2FuIG1ha2UgQVBJIGNhbGxzIHdpdGggYXJiaXRyYXJ5IGhlYWRlcnMuXG4gKiBFeHBvc2luZyB0aGlzIGFnZW50IHRvIHVzZXJzIGNvdWxkIGxlYWQgdG8gc2VjdXJpdHkgdnVsbmVyYWJpbGl0aWVzLiBDb25zaWRlclxuICogbGltaXRpbmcgYWNjZXNzIHRvIHdoYXQgZW5kcG9pbnRzIGl0IGNhbiBoaXQsIHdoYXQgYWN0aW9ucyBjYW4gYmUgdGFrZW4sIGFuZFxuICogbW9yZS5cbiAqXG4gKiBAbGluayBTZWUgaHR0cHM6Ly9qcy5sYW5nY2hhaW4uY29tL2RvY3Mvc2VjdXJpdHkgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVPcGVuQXBpQWdlbnQobGxtLCBvcGVuQXBpVG9vbGtpdCwgYXJncykge1xuICAgIGNvbnN0IHsgcHJlZml4ID0gT1BFTkFQSV9QUkVGSVgsIHN1ZmZpeCA9IE9QRU5BUElfU1VGRklYLCBpbnB1dFZhcmlhYmxlcyA9IFtcImlucHV0XCIsIFwiYWdlbnRfc2NyYXRjaHBhZFwiXSwgfSA9IGFyZ3MgPz8ge307XG4gICAgY29uc3QgeyB0b29scyB9ID0gb3BlbkFwaVRvb2xraXQ7XG4gICAgY29uc3QgcHJvbXB0ID0gWmVyb1Nob3RBZ2VudC5jcmVhdGVQcm9tcHQodG9vbHMsIHtcbiAgICAgICAgcHJlZml4LFxuICAgICAgICBzdWZmaXgsXG4gICAgICAgIGlucHV0VmFyaWFibGVzLFxuICAgIH0pO1xuICAgIGNvbnN0IGNoYWluID0gbmV3IExMTUNoYWluKHtcbiAgICAgICAgcHJvbXB0LFxuICAgICAgICBsbG0sXG4gICAgfSk7XG4gICAgY29uc3QgdG9vbE5hbWVzID0gdG9vbHMubWFwKCh0b29sKSA9PiB0b29sLm5hbWUpO1xuICAgIGNvbnN0IGFnZW50ID0gbmV3IFplcm9TaG90QWdlbnQoeyBsbG1DaGFpbjogY2hhaW4sIGFsbG93ZWRUb29sczogdG9vbE5hbWVzIH0pO1xuICAgIHJldHVybiBBZ2VudEV4ZWN1dG9yLmZyb21BZ2VudEFuZFRvb2xzKHtcbiAgICAgICAgYWdlbnQsXG4gICAgICAgIHRvb2xzLFxuICAgICAgICByZXR1cm5JbnRlcm1lZGlhdGVTdGVwczogdHJ1ZSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/openapi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/prompt.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/prompt.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSON_EXPLORER_DESCRIPTION: () => (/* binding */ JSON_EXPLORER_DESCRIPTION),\n/* harmony export */   OPENAPI_PREFIX: () => (/* binding */ OPENAPI_PREFIX),\n/* harmony export */   OPENAPI_SUFFIX: () => (/* binding */ OPENAPI_SUFFIX)\n/* harmony export */ });\nconst OPENAPI_PREFIX = `You are an agent designed to answer questions by making web requests to an API given the OpenAPI spec.\n\nIf the question does not seem related to the API, return I don't know. Do not make up an answer.\nOnly use information provided by the tools to construct your response.\n\nTo find information in the OpenAPI spec, use the 'json_explorer' tool. The input to this tool is a question about the API.\n\nTake the following steps:\nFirst, find the base URL needed to make the request.\n\nSecond, find the relevant paths needed to answer the question. Take note that, sometimes, you might need to make more than one request to more than one path to answer the question.\n\nThird, find the required parameters needed to make the request. For GET requests, these are usually URL parameters and for POST requests, these are request body parameters.\n\nFourth, make the requests needed to answer the question. Ensure that you are sending the correct parameters to the request by checking which parameters are required. For parameters with a fixed set of values, please use the spec to look at which values are allowed.\n\nUse the exact parameter names as listed in the spec, do not make up any names or abbreviate the names of parameters.\nIf you get a not found error, ensure that you are using a path that actually exists in the spec.`;\nconst OPENAPI_SUFFIX = `Begin!\"\n\nQuestion: {input}\nThought: I should explore the spec to find the base url for the API.\n{agent_scratchpad}`;\nconst JSON_EXPLORER_DESCRIPTION = `\nCan be used to answer questions about the openapi spec for the API. Always use this tool before trying to make a request. \nExample inputs to this tool: \n    'What are the required query parameters for a GET request to the /bar endpoint?'\n    'What are the required parameters in the request body for a POST request to the /foo endpoint?'\nAlways give this tool a specific question.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvb3BlbmFwaS9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87O0FBRVA7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDTzs7QUFFUCxXQUFXO0FBQ1g7QUFDQSxDQUFDLGlCQUFpQjtBQUNYO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvb3BlbmFwaS9wcm9tcHQuanM/YjVhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgT1BFTkFQSV9QUkVGSVggPSBgWW91IGFyZSBhbiBhZ2VudCBkZXNpZ25lZCB0byBhbnN3ZXIgcXVlc3Rpb25zIGJ5IG1ha2luZyB3ZWIgcmVxdWVzdHMgdG8gYW4gQVBJIGdpdmVuIHRoZSBPcGVuQVBJIHNwZWMuXG5cbklmIHRoZSBxdWVzdGlvbiBkb2VzIG5vdCBzZWVtIHJlbGF0ZWQgdG8gdGhlIEFQSSwgcmV0dXJuIEkgZG9uJ3Qga25vdy4gRG8gbm90IG1ha2UgdXAgYW4gYW5zd2VyLlxuT25seSB1c2UgaW5mb3JtYXRpb24gcHJvdmlkZWQgYnkgdGhlIHRvb2xzIHRvIGNvbnN0cnVjdCB5b3VyIHJlc3BvbnNlLlxuXG5UbyBmaW5kIGluZm9ybWF0aW9uIGluIHRoZSBPcGVuQVBJIHNwZWMsIHVzZSB0aGUgJ2pzb25fZXhwbG9yZXInIHRvb2wuIFRoZSBpbnB1dCB0byB0aGlzIHRvb2wgaXMgYSBxdWVzdGlvbiBhYm91dCB0aGUgQVBJLlxuXG5UYWtlIHRoZSBmb2xsb3dpbmcgc3RlcHM6XG5GaXJzdCwgZmluZCB0aGUgYmFzZSBVUkwgbmVlZGVkIHRvIG1ha2UgdGhlIHJlcXVlc3QuXG5cblNlY29uZCwgZmluZCB0aGUgcmVsZXZhbnQgcGF0aHMgbmVlZGVkIHRvIGFuc3dlciB0aGUgcXVlc3Rpb24uIFRha2Ugbm90ZSB0aGF0LCBzb21ldGltZXMsIHlvdSBtaWdodCBuZWVkIHRvIG1ha2UgbW9yZSB0aGFuIG9uZSByZXF1ZXN0IHRvIG1vcmUgdGhhbiBvbmUgcGF0aCB0byBhbnN3ZXIgdGhlIHF1ZXN0aW9uLlxuXG5UaGlyZCwgZmluZCB0aGUgcmVxdWlyZWQgcGFyYW1ldGVycyBuZWVkZWQgdG8gbWFrZSB0aGUgcmVxdWVzdC4gRm9yIEdFVCByZXF1ZXN0cywgdGhlc2UgYXJlIHVzdWFsbHkgVVJMIHBhcmFtZXRlcnMgYW5kIGZvciBQT1NUIHJlcXVlc3RzLCB0aGVzZSBhcmUgcmVxdWVzdCBib2R5IHBhcmFtZXRlcnMuXG5cbkZvdXJ0aCwgbWFrZSB0aGUgcmVxdWVzdHMgbmVlZGVkIHRvIGFuc3dlciB0aGUgcXVlc3Rpb24uIEVuc3VyZSB0aGF0IHlvdSBhcmUgc2VuZGluZyB0aGUgY29ycmVjdCBwYXJhbWV0ZXJzIHRvIHRoZSByZXF1ZXN0IGJ5IGNoZWNraW5nIHdoaWNoIHBhcmFtZXRlcnMgYXJlIHJlcXVpcmVkLiBGb3IgcGFyYW1ldGVycyB3aXRoIGEgZml4ZWQgc2V0IG9mIHZhbHVlcywgcGxlYXNlIHVzZSB0aGUgc3BlYyB0byBsb29rIGF0IHdoaWNoIHZhbHVlcyBhcmUgYWxsb3dlZC5cblxuVXNlIHRoZSBleGFjdCBwYXJhbWV0ZXIgbmFtZXMgYXMgbGlzdGVkIGluIHRoZSBzcGVjLCBkbyBub3QgbWFrZSB1cCBhbnkgbmFtZXMgb3IgYWJicmV2aWF0ZSB0aGUgbmFtZXMgb2YgcGFyYW1ldGVycy5cbklmIHlvdSBnZXQgYSBub3QgZm91bmQgZXJyb3IsIGVuc3VyZSB0aGF0IHlvdSBhcmUgdXNpbmcgYSBwYXRoIHRoYXQgYWN0dWFsbHkgZXhpc3RzIGluIHRoZSBzcGVjLmA7XG5leHBvcnQgY29uc3QgT1BFTkFQSV9TVUZGSVggPSBgQmVnaW4hXCJcblxuUXVlc3Rpb246IHtpbnB1dH1cblRob3VnaHQ6IEkgc2hvdWxkIGV4cGxvcmUgdGhlIHNwZWMgdG8gZmluZCB0aGUgYmFzZSB1cmwgZm9yIHRoZSBBUEkuXG57YWdlbnRfc2NyYXRjaHBhZH1gO1xuZXhwb3J0IGNvbnN0IEpTT05fRVhQTE9SRVJfREVTQ1JJUFRJT04gPSBgXG5DYW4gYmUgdXNlZCB0byBhbnN3ZXIgcXVlc3Rpb25zIGFib3V0IHRoZSBvcGVuYXBpIHNwZWMgZm9yIHRoZSBBUEkuIEFsd2F5cyB1c2UgdGhpcyB0b29sIGJlZm9yZSB0cnlpbmcgdG8gbWFrZSBhIHJlcXVlc3QuIFxuRXhhbXBsZSBpbnB1dHMgdG8gdGhpcyB0b29sOiBcbiAgICAnV2hhdCBhcmUgdGhlIHJlcXVpcmVkIHF1ZXJ5IHBhcmFtZXRlcnMgZm9yIGEgR0VUIHJlcXVlc3QgdG8gdGhlIC9iYXIgZW5kcG9pbnQ/J1xuICAgICdXaGF0IGFyZSB0aGUgcmVxdWlyZWQgcGFyYW1ldGVycyBpbiB0aGUgcmVxdWVzdCBib2R5IGZvciBhIFBPU1QgcmVxdWVzdCB0byB0aGUgL2ZvbyBlbmRwb2ludD8nXG5BbHdheXMgZ2l2ZSB0aGlzIHRvb2wgYSBzcGVjaWZpYyBxdWVzdGlvbi5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/openapi/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js ***!
  \***********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VECTOR_PREFIX: () => (/* binding */ VECTOR_PREFIX),\n/* harmony export */   VECTOR_ROUTER_PREFIX: () => (/* binding */ VECTOR_ROUTER_PREFIX)\n/* harmony export */ });\nconst VECTOR_PREFIX = `You are an agent designed to answer questions about sets of documents.\nYou have access to tools for interacting with the documents, and the inputs to the tools are questions.\nSometimes, you will be asked to provide sources for your questions, in which case you should use the appropriate tool to do so.\nIf the question does not seem relevant to any of the tools provided, just return \"I don't know\" as the answer.`;\nconst VECTOR_ROUTER_PREFIX = `You are an agent designed to answer questions.\nYou have access to tools for interacting with different sources, and the inputs to the tools are questions.\nYour main task is to decide which of the tools is relevant for answering question at hand.\nFor complex questions, you can break the question down into sub questions and use tools to answers the sub questions.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvdmVjdG9yc3RvcmUvcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvdmVjdG9yc3RvcmUvcHJvbXB0LmpzPzg0ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFZFQ1RPUl9QUkVGSVggPSBgWW91IGFyZSBhbiBhZ2VudCBkZXNpZ25lZCB0byBhbnN3ZXIgcXVlc3Rpb25zIGFib3V0IHNldHMgb2YgZG9jdW1lbnRzLlxuWW91IGhhdmUgYWNjZXNzIHRvIHRvb2xzIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBkb2N1bWVudHMsIGFuZCB0aGUgaW5wdXRzIHRvIHRoZSB0b29scyBhcmUgcXVlc3Rpb25zLlxuU29tZXRpbWVzLCB5b3Ugd2lsbCBiZSBhc2tlZCB0byBwcm92aWRlIHNvdXJjZXMgZm9yIHlvdXIgcXVlc3Rpb25zLCBpbiB3aGljaCBjYXNlIHlvdSBzaG91bGQgdXNlIHRoZSBhcHByb3ByaWF0ZSB0b29sIHRvIGRvIHNvLlxuSWYgdGhlIHF1ZXN0aW9uIGRvZXMgbm90IHNlZW0gcmVsZXZhbnQgdG8gYW55IG9mIHRoZSB0b29scyBwcm92aWRlZCwganVzdCByZXR1cm4gXCJJIGRvbid0IGtub3dcIiBhcyB0aGUgYW5zd2VyLmA7XG5leHBvcnQgY29uc3QgVkVDVE9SX1JPVVRFUl9QUkVGSVggPSBgWW91IGFyZSBhbiBhZ2VudCBkZXNpZ25lZCB0byBhbnN3ZXIgcXVlc3Rpb25zLlxuWW91IGhhdmUgYWNjZXNzIHRvIHRvb2xzIGZvciBpbnRlcmFjdGluZyB3aXRoIGRpZmZlcmVudCBzb3VyY2VzLCBhbmQgdGhlIGlucHV0cyB0byB0aGUgdG9vbHMgYXJlIHF1ZXN0aW9ucy5cbllvdXIgbWFpbiB0YXNrIGlzIHRvIGRlY2lkZSB3aGljaCBvZiB0aGUgdG9vbHMgaXMgcmVsZXZhbnQgZm9yIGFuc3dlcmluZyBxdWVzdGlvbiBhdCBoYW5kLlxuRm9yIGNvbXBsZXggcXVlc3Rpb25zLCB5b3UgY2FuIGJyZWFrIHRoZSBxdWVzdGlvbiBkb3duIGludG8gc3ViIHF1ZXN0aW9ucyBhbmQgdXNlIHRvb2xzIHRvIGFuc3dlcnMgdGhlIHN1YiBxdWVzdGlvbnMuYDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStoreRouterToolkit: () => (/* binding */ VectorStoreRouterToolkit),\n/* harmony export */   VectorStoreToolkit: () => (/* binding */ VectorStoreToolkit),\n/* harmony export */   createVectorStoreAgent: () => (/* binding */ createVectorStoreAgent),\n/* harmony export */   createVectorStoreRouterAgent: () => (/* binding */ createVectorStoreRouterAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tools/vectorstore.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/vectorstore.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mrkl/index.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js\");\n/* harmony import */ var _mrkl_prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mrkl/prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/mrkl/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../executor.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/executor.js\");\n\n\n\n\n\n\n\n/**\n * Class representing a toolkit for working with a single vector store. It\n * initializes the vector store QA tool based on the provided vector store\n * information and language model.\n * @example\n * ```typescript\n * const toolkit = new VectorStoreToolkit(\n *   {\n *     name: \"state_of_union_address\",\n *     description: \"the most recent state of the Union address\",\n *     vectorStore: new HNSWLib(),\n *   },\n *   new ChatOpenAI({ temperature: 0 }),\n * );\n * const result = await toolkit.invoke({\n *   input:\n *     \"What did biden say about Ketanji Brown Jackson in the state of the union address?\",\n * });\n * console.log(`Got output ${result.output}`);\n * ```\n */\nclass VectorStoreToolkit extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit {\n    constructor(vectorStoreInfo, llm) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const description = _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool.getDescription(vectorStoreInfo.name, vectorStoreInfo.description);\n        this.llm = llm;\n        this.tools = [\n            new _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool(vectorStoreInfo.name, description, {\n                vectorStore: vectorStoreInfo.vectorStore,\n                llm: this.llm,\n            }),\n        ];\n    }\n}\n/**\n * Class representing a toolkit for working with multiple vector stores.\n * It initializes multiple vector store QA tools based on the provided\n * vector store information and language model.\n */\nclass VectorStoreRouterToolkit extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit {\n    constructor(vectorStoreInfos, llm) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"vectorStoreInfos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llm = llm;\n        this.vectorStoreInfos = vectorStoreInfos;\n        this.tools = vectorStoreInfos.map((vectorStoreInfo) => {\n            const description = _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool.getDescription(vectorStoreInfo.name, vectorStoreInfo.description);\n            return new _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool(vectorStoreInfo.name, description, {\n                vectorStore: vectorStoreInfo.vectorStore,\n                llm: this.llm,\n            });\n        });\n    }\n}\n/** @deprecated Create a specific agent with a custom tool instead. */\nfunction createVectorStoreAgent(llm, toolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_3__.VECTOR_PREFIX, suffix = _mrkl_prompt_js__WEBPACK_IMPORTED_MODULE_4__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__.LLMChain({ prompt, llm });\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_6__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n/** @deprecated Create a specific agent with a custom tool instead. */\nfunction createVectorStoreRouterAgent(llm, toolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_3__.VECTOR_ROUTER_PREFIX, suffix = _mrkl_prompt_js__WEBPACK_IMPORTED_MODULE_4__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__.LLMChain({ prompt, llm });\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_6__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentActionOutputParser: () => (/* binding */ AgentActionOutputParser),\n/* harmony export */   AgentMultiActionOutputParser: () => (/* binding */ AgentMultiActionOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n\n/**\n * Abstract class representing an output parser specifically for agent\n * actions and finishes in LangChain. It extends the `BaseOutputParser`\n * class.\n */\nclass AgentActionOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n}\n/**\n * Abstract class representing an output parser specifically for agents\n * that return multiple actions.\n */\nclass AgentMultiActionOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzQ0FBc0MsNEVBQWdCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQ0FBMkMsNEVBQWdCO0FBQ2xFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90eXBlcy5qcz80MTAyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPdXRwdXRQYXJzZXIgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIHJlcHJlc2VudGluZyBhbiBvdXRwdXQgcGFyc2VyIHNwZWNpZmljYWxseSBmb3IgYWdlbnRcbiAqIGFjdGlvbnMgYW5kIGZpbmlzaGVzIGluIExhbmdDaGFpbi4gSXQgZXh0ZW5kcyB0aGUgYEJhc2VPdXRwdXRQYXJzZXJgXG4gKiBjbGFzcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZU91dHB1dFBhcnNlciB7XG59XG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIHJlcHJlc2VudGluZyBhbiBvdXRwdXQgcGFyc2VyIHNwZWNpZmljYWxseSBmb3IgYWdlbnRzXG4gKiB0aGF0IHJldHVybiBtdWx0aXBsZSBhY3Rpb25zLlxuICovXG5leHBvcnQgY2xhc3MgQWdlbnRNdWx0aUFjdGlvbk91dHB1dFBhcnNlciBleHRlbmRzIEJhc2VPdXRwdXRQYXJzZXIge1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/index.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/index.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XMLAgent: () => (/* binding */ XMLAgent),\n/* harmony export */   createXmlAgent: () => (/* binding */ createXmlAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/prompt.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/output_parser.js\");\n/* harmony import */ var _tools_render_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../tools/render.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/render.js\");\n/* harmony import */ var _format_scratchpad_xml_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../format_scratchpad/xml.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/format_scratchpad/xml.js\");\n\n\n\n\n\n\n\n\n/**\n * Class that represents an agent that uses XML tags.\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain.agents.createXmlAgent.html | createXmlAgent method instead}.\n */\nclass XMLAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_3__.BaseSingleActionAgent {\n    static lc_name() {\n        return \"XMLAgent\";\n    }\n    _agentType() {\n        return \"xml\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"xml\"]\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new _output_parser_js__WEBPACK_IMPORTED_MODULE_5__.XMLAgentOutputParser()\n        });\n        this.tools = fields.tools;\n        this.llmChain = fields.llmChain;\n    }\n    get inputKeys() {\n        return [\"input\"];\n    }\n    static createPrompt() {\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.ChatPromptTemplate.fromMessages([\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.HumanMessagePromptTemplate.fromTemplate(_prompt_js__WEBPACK_IMPORTED_MODULE_4__.AGENT_INSTRUCTIONS),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.AIMessagePromptTemplate.fromTemplate(\"{intermediate_steps}\"),\n        ]);\n    }\n    /**\n     * Plans the next action or finish state of the agent based on the\n     * provided steps, inputs, and optional callback manager.\n     * @param steps The steps to consider in planning.\n     * @param inputs The inputs to consider in planning.\n     * @param callbackManager Optional CallbackManager to use in planning.\n     * @returns A Promise that resolves to an AgentAction or AgentFinish object representing the planned action or finish state.\n     */\n    async plan(steps, inputs, callbackManager) {\n        let log = \"\";\n        for (const { action, observation } of steps) {\n            log += `<tool>${action.tool}</tool><tool_input>${action.toolInput}</tool_input><observation>${observation}</observation>`;\n        }\n        let tools = \"\";\n        for (const tool of this.tools) {\n            tools += `${tool.name}: ${tool.description}\\n`;\n        }\n        const _inputs = {\n            intermediate_steps: log,\n            tools,\n            question: inputs.input,\n            stop: [\"</tool_input>\", \"</final_answer>\"],\n        };\n        const response = await this.llmChain.call(_inputs, callbackManager);\n        return this.outputParser.parse(response[this.llmChain.outputKey]);\n    }\n    /**\n     * Creates an XMLAgent from a BaseLanguageModel and a list of tools.\n     * @param llm The BaseLanguageModel to use.\n     * @param tools The tools to be used by the agent.\n     * @param args Optional arguments for creating the agent.\n     * @returns An instance of XMLAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        const prompt = XMLAgent.createPrompt();\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new XMLAgent({\n            llmChain: chain,\n            tools,\n        });\n    }\n}\n/**\n * Create an agent that uses XML to format its logic.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createXmlAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { PromptTemplate } from \"@langchain/core/prompts\";\n *\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/xml-agent-convo\n * const prompt = await pull<PromptTemplate>(\"hwchase17/xml-agent-convo\");\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n * });\n *\n * const agent = await createXmlAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   // Notice that chat_history is a string, since this prompt is aimed at LLMs, not chat models\n *   chat_history: \"Human: Hi! My name is Cob\\nAI: Hello Cob! Nice to meet you\",\n * });\n * ```\n */\nasync function createXmlAgent({ llm, tools, prompt, streamRunnable, }) {\n    const missingVariables = [\"tools\", \"agent_scratchpad\"].filter((v) => !prompt.inputVariables.includes(v));\n    if (missingVariables.length > 0) {\n        throw new Error(`Provided prompt is missing required input variables: ${JSON.stringify(missingVariables)}`);\n    }\n    const partialedPrompt = await prompt.partial({\n        tools: (0,_tools_render_js__WEBPACK_IMPORTED_MODULE_6__.renderTextDescription)(tools),\n    });\n    // TODO: Add .bind to core runnable interface.\n    const llmWithStop = llm.bind({\n        stop: [\"</tool_input>\", \"</final_answer>\"],\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_3__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_xml_js__WEBPACK_IMPORTED_MODULE_7__.formatXml)(input.steps),\n        }),\n        partialedPrompt,\n        llmWithStop,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_5__.XMLAgentOutputParser(),\n    ], {\n        name: \"XMLAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/output_parser.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/output_parser.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XMLAgentOutputParser: () => (/* binding */ XMLAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/types.js\");\n\n\n/**\n * @example\n * ```typescript\n * const prompt = ChatPromptTemplate.fromMessages([\n *   HumanMessagePromptTemplate.fromTemplate(AGENT_INSTRUCTIONS),\n *   new MessagesPlaceholder(\"agent_scratchpad\"),\n * ]);\n * const runnableAgent = RunnableSequence.from([\n *   ...rest of runnable\n *   prompt,\n *   new ChatAnthropic({ modelName: \"claude-2\", temperature: 0 }).bind({\n *     stop: [\"</tool_input>\", \"</final_answer>\"],\n *   }),\n *   new XMLAgentOutputParser(),\n * ]);\n * const result = await executor.invoke({\n *   input: \"What is the weather in Honolulu?\",\n *   tools: [],\n * });\n * ```\n */\nclass XMLAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"xml\"]\n        });\n    }\n    static lc_name() {\n        return \"XMLAgentOutputParser\";\n    }\n    /**\n     * Parses the output text from the agent and returns an AgentAction or\n     * AgentFinish object.\n     * @param text The output text from the agent.\n     * @returns An AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        if (text.includes(\"</tool>\")) {\n            const [tool, toolInput] = text.split(\"</tool>\");\n            const _tool = tool.split(\"<tool>\")[1];\n            const _toolInput = toolInput.split(\"<tool_input>\")[1];\n            return { tool: _tool, toolInput: _toolInput, log: text };\n        }\n        else if (text.includes(\"<final_answer>\")) {\n            const [, answer] = text.split(\"<final_answer>\");\n            return { returnValues: { output: answer }, log: text };\n        }\n        else {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse LLM output: ${text}`);\n        }\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside OpenAIFunctionsAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMveG1sL291dHB1dF9wYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVFO0FBQ2pCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVDQUF1QztBQUNoRTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTyxtQ0FBbUMsOERBQXVCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCLGdCQUFnQjtBQUNyRDtBQUNBO0FBQ0Esc0JBQXNCLGlGQUFxQixnQ0FBZ0MsS0FBSztBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3htbC9vdXRwdXRfcGFyc2VyLmpzP2IzYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3V0cHV0UGFyc2VyRXhjZXB0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuaW1wb3J0IHsgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi4vdHlwZXMuanNcIjtcbi8qKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IHByb21wdCA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tTWVzc2FnZXMoW1xuICogICBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoQUdFTlRfSU5TVFJVQ1RJT05TKSxcbiAqICAgbmV3IE1lc3NhZ2VzUGxhY2Vob2xkZXIoXCJhZ2VudF9zY3JhdGNocGFkXCIpLFxuICogXSk7XG4gKiBjb25zdCBydW5uYWJsZUFnZW50ID0gUnVubmFibGVTZXF1ZW5jZS5mcm9tKFtcbiAqICAgLi4ucmVzdCBvZiBydW5uYWJsZVxuICogICBwcm9tcHQsXG4gKiAgIG5ldyBDaGF0QW50aHJvcGljKHsgbW9kZWxOYW1lOiBcImNsYXVkZS0yXCIsIHRlbXBlcmF0dXJlOiAwIH0pLmJpbmQoe1xuICogICAgIHN0b3A6IFtcIjwvdG9vbF9pbnB1dD5cIiwgXCI8L2ZpbmFsX2Fuc3dlcj5cIl0sXG4gKiAgIH0pLFxuICogICBuZXcgWE1MQWdlbnRPdXRwdXRQYXJzZXIoKSxcbiAqIF0pO1xuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY3V0b3IuaW52b2tlKHtcbiAqICAgaW5wdXQ6IFwiV2hhdCBpcyB0aGUgd2VhdGhlciBpbiBIb25vbHVsdT9cIixcbiAqICAgdG9vbHM6IFtdLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIFhNTEFnZW50T3V0cHV0UGFyc2VyIGV4dGVuZHMgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcImFnZW50c1wiLCBcInhtbFwiXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlhNTEFnZW50T3V0cHV0UGFyc2VyXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgb3V0cHV0IHRleHQgZnJvbSB0aGUgYWdlbnQgYW5kIHJldHVybnMgYW4gQWdlbnRBY3Rpb24gb3JcbiAgICAgKiBBZ2VudEZpbmlzaCBvYmplY3QuXG4gICAgICogQHBhcmFtIHRleHQgVGhlIG91dHB1dCB0ZXh0IGZyb20gdGhlIGFnZW50LlxuICAgICAqIEByZXR1cm5zIEFuIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoIG9iamVjdC5cbiAgICAgKi9cbiAgICBhc3luYyBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIGlmICh0ZXh0LmluY2x1ZGVzKFwiPC90b29sPlwiKSkge1xuICAgICAgICAgICAgY29uc3QgW3Rvb2wsIHRvb2xJbnB1dF0gPSB0ZXh0LnNwbGl0KFwiPC90b29sPlwiKTtcbiAgICAgICAgICAgIGNvbnN0IF90b29sID0gdG9vbC5zcGxpdChcIjx0b29sPlwiKVsxXTtcbiAgICAgICAgICAgIGNvbnN0IF90b29sSW5wdXQgPSB0b29sSW5wdXQuc3BsaXQoXCI8dG9vbF9pbnB1dD5cIilbMV07XG4gICAgICAgICAgICByZXR1cm4geyB0b29sOiBfdG9vbCwgdG9vbElucHV0OiBfdG9vbElucHV0LCBsb2c6IHRleHQgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0ZXh0LmluY2x1ZGVzKFwiPGZpbmFsX2Fuc3dlcj5cIikpIHtcbiAgICAgICAgICAgIGNvbnN0IFssIGFuc3dlcl0gPSB0ZXh0LnNwbGl0KFwiPGZpbmFsX2Fuc3dlcj5cIik7XG4gICAgICAgICAgICByZXR1cm4geyByZXR1cm5WYWx1ZXM6IHsgb3V0cHV0OiBhbnN3ZXIgfSwgbG9nOiB0ZXh0IH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgT3V0cHV0UGFyc2VyRXhjZXB0aW9uKGBDb3VsZCBub3QgcGFyc2UgTExNIG91dHB1dDogJHt0ZXh0fWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zIG5vdCBpbXBsZW1lbnRlZCBpbnNpZGUgT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXIuXCIpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/prompt.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/prompt.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AGENT_INSTRUCTIONS: () => (/* binding */ AGENT_INSTRUCTIONS)\n/* harmony export */ });\nconst AGENT_INSTRUCTIONS = `You are a helpful assistant. Help the user answer any questions.\n\nYou have access to the following tools:\n\n{tools}\n\nIn order to use a tool, you can use <tool></tool> and <tool_input></tool_input> tags.\nYou will then get back a response in the form <observation></observation>\nFor example, if you have a tool called 'search' that could run a google search, in order to search for the weather in SF you would respond:\n\n<tool>search</tool><tool_input>weather in SF</tool_input>\n<observation>64 degrees</observation>\n\nWhen you are done, respond with a final answer between <final_answer></final_answer>. For example:\n\n<final_answer>The weather in SF is 64 degrees</final_answer>\n\nBegin!\n\nQuestion: {question}`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMveG1sL3Byb21wdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87O0FBRVA7O0FBRUEsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxXQUFXLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3htbC9wcm9tcHQuanM/OTFiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQUdFTlRfSU5TVFJVQ1RJT05TID0gYFlvdSBhcmUgYSBoZWxwZnVsIGFzc2lzdGFudC4gSGVscCB0aGUgdXNlciBhbnN3ZXIgYW55IHF1ZXN0aW9ucy5cblxuWW91IGhhdmUgYWNjZXNzIHRvIHRoZSBmb2xsb3dpbmcgdG9vbHM6XG5cbnt0b29sc31cblxuSW4gb3JkZXIgdG8gdXNlIGEgdG9vbCwgeW91IGNhbiB1c2UgPHRvb2w+PC90b29sPiBhbmQgPHRvb2xfaW5wdXQ+PC90b29sX2lucHV0PiB0YWdzLlxuWW91IHdpbGwgdGhlbiBnZXQgYmFjayBhIHJlc3BvbnNlIGluIHRoZSBmb3JtIDxvYnNlcnZhdGlvbj48L29ic2VydmF0aW9uPlxuRm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIGEgdG9vbCBjYWxsZWQgJ3NlYXJjaCcgdGhhdCBjb3VsZCBydW4gYSBnb29nbGUgc2VhcmNoLCBpbiBvcmRlciB0byBzZWFyY2ggZm9yIHRoZSB3ZWF0aGVyIGluIFNGIHlvdSB3b3VsZCByZXNwb25kOlxuXG48dG9vbD5zZWFyY2g8L3Rvb2w+PHRvb2xfaW5wdXQ+d2VhdGhlciBpbiBTRjwvdG9vbF9pbnB1dD5cbjxvYnNlcnZhdGlvbj42NCBkZWdyZWVzPC9vYnNlcnZhdGlvbj5cblxuV2hlbiB5b3UgYXJlIGRvbmUsIHJlc3BvbmQgd2l0aCBhIGZpbmFsIGFuc3dlciBiZXR3ZWVuIDxmaW5hbF9hbnN3ZXI+PC9maW5hbF9hbnN3ZXI+LiBGb3IgZXhhbXBsZTpcblxuPGZpbmFsX2Fuc3dlcj5UaGUgd2VhdGhlciBpbiBTRiBpcyA2NCBkZWdyZWVzPC9maW5hbF9hbnN3ZXI+XG5cbkJlZ2luIVxuXG5RdWVzdGlvbjoge3F1ZXN0aW9ufWA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/agents/xml/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/api_chain.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/api_chain.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIChain: () => (/* binding */ APIChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/prompts.js\");\n\n\n\n/**\n * Class that extends BaseChain and represents a chain specifically\n * designed for making API requests and processing API responses.\n */\nclass APIChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"apiAnswerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiRequestChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiDocs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        this.apiRequestChain = fields.apiRequestChain;\n        this.apiAnswerChain = fields.apiAnswerChain;\n        this.apiDocs = fields.apiDocs;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.headers = fields.headers ?? this.headers;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const question = values[this.inputKey];\n        const api_url = await this.apiRequestChain.predict({ question, api_docs: this.apiDocs }, runManager?.getChild(\"request\"));\n        const res = await fetch(api_url, { headers: this.headers });\n        const api_response = await res.text();\n        const answer = await this.apiAnswerChain.predict({ question, api_docs: this.apiDocs, api_url, api_response }, runManager?.getChild(\"response\"));\n        return { [this.outputKey]: answer };\n    }\n    _chainType() {\n        return \"api_chain\";\n    }\n    static async deserialize(data) {\n        const { api_request_chain, api_answer_chain, api_docs } = data;\n        if (!api_request_chain) {\n            throw new Error(\"LLMChain must have api_request_chain\");\n        }\n        if (!api_answer_chain) {\n            throw new Error(\"LLMChain must have api_answer_chain\");\n        }\n        if (!api_docs) {\n            throw new Error(\"LLMChain must have api_docs\");\n        }\n        return new APIChain({\n            apiAnswerChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain.deserialize(api_answer_chain),\n            apiRequestChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain.deserialize(api_request_chain),\n            apiDocs: api_docs,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            api_answer_chain: this.apiAnswerChain.serialize(),\n            api_request_chain: this.apiRequestChain.serialize(),\n            api_docs: this.apiDocs,\n        };\n    }\n    /**\n     * Static method to create a new APIChain from a BaseLanguageModel and API\n     * documentation.\n     * @param llm BaseLanguageModel instance.\n     * @param apiDocs API documentation.\n     * @param options Optional configuration options for the APIChain.\n     * @returns New APIChain instance.\n     */\n    static fromLLMAndAPIDocs(llm, apiDocs, options = {}) {\n        const { apiUrlPrompt = _prompts_js__WEBPACK_IMPORTED_MODULE_2__.API_URL_PROMPT_TEMPLATE, apiResponsePrompt = _prompts_js__WEBPACK_IMPORTED_MODULE_2__.API_RESPONSE_PROMPT_TEMPLATE, } = options;\n        const apiRequestChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ prompt: apiUrlPrompt, llm });\n        const apiAnswerChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ prompt: apiResponsePrompt, llm });\n        return new this({\n            apiAnswerChain,\n            apiRequestChain,\n            apiDocs,\n            ...options,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvYXBpL2FwaV9jaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVDO0FBQ0k7QUFDMkM7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1QkFBdUIsK0NBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGtDQUFrQztBQUMvRiwyQ0FBMkMsdUJBQXVCO0FBQ2xFO0FBQ0EsMkRBQTJELHlEQUF5RDtBQUNwSCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnREFBZ0Q7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsbURBQVE7QUFDMUMsbUNBQW1DLG1EQUFRO0FBQzNDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsZ0JBQWdCLGVBQWUsZ0VBQXVCLHNCQUFzQixxRUFBNEIsSUFBSTtBQUM1RyxvQ0FBb0MsbURBQVEsR0FBRywyQkFBMkI7QUFDMUUsbUNBQW1DLG1EQUFRLEdBQUcsZ0NBQWdDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvYXBpL2FwaV9jaGFpbi5qcz9mNDIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VDaGFpbiB9IGZyb20gXCIuLi9iYXNlLmpzXCI7XG5pbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi9sbG1fY2hhaW4uanNcIjtcbmltcG9ydCB7IEFQSV9VUkxfUFJPTVBUX1RFTVBMQVRFLCBBUElfUkVTUE9OU0VfUFJPTVBUX1RFTVBMQVRFLCB9IGZyb20gXCIuL3Byb21wdHMuanNcIjtcbi8qKlxuICogQ2xhc3MgdGhhdCBleHRlbmRzIEJhc2VDaGFpbiBhbmQgcmVwcmVzZW50cyBhIGNoYWluIHNwZWNpZmljYWxseVxuICogZGVzaWduZWQgZm9yIG1ha2luZyBBUEkgcmVxdWVzdHMgYW5kIHByb2Nlc3NpbmcgQVBJIHJlc3BvbnNlcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEFQSUNoYWluIGV4dGVuZHMgQmFzZUNoYWluIHtcbiAgICBnZXQgaW5wdXRLZXlzKCkge1xuICAgICAgICByZXR1cm4gW3RoaXMuaW5wdXRLZXldO1xuICAgIH1cbiAgICBnZXQgb3V0cHV0S2V5cygpIHtcbiAgICAgICAgcmV0dXJuIFt0aGlzLm91dHB1dEtleV07XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJhcGlBbnN3ZXJDaGFpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJhcGlSZXF1ZXN0Q2hhaW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYXBpRG9jc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJoZWFkZXJzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB7fVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5wdXRLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwicXVlc3Rpb25cIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwib3V0cHV0S2V5XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcIm91dHB1dFwiXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmFwaVJlcXVlc3RDaGFpbiA9IGZpZWxkcy5hcGlSZXF1ZXN0Q2hhaW47XG4gICAgICAgIHRoaXMuYXBpQW5zd2VyQ2hhaW4gPSBmaWVsZHMuYXBpQW5zd2VyQ2hhaW47XG4gICAgICAgIHRoaXMuYXBpRG9jcyA9IGZpZWxkcy5hcGlEb2NzO1xuICAgICAgICB0aGlzLmlucHV0S2V5ID0gZmllbGRzLmlucHV0S2V5ID8/IHRoaXMuaW5wdXRLZXk7XG4gICAgICAgIHRoaXMub3V0cHV0S2V5ID0gZmllbGRzLm91dHB1dEtleSA/PyB0aGlzLm91dHB1dEtleTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gZmllbGRzLmhlYWRlcnMgPz8gdGhpcy5oZWFkZXJzO1xuICAgIH1cbiAgICAvKiogQGlnbm9yZSAqL1xuICAgIGFzeW5jIF9jYWxsKHZhbHVlcywgcnVuTWFuYWdlcikge1xuICAgICAgICBjb25zdCBxdWVzdGlvbiA9IHZhbHVlc1t0aGlzLmlucHV0S2V5XTtcbiAgICAgICAgY29uc3QgYXBpX3VybCA9IGF3YWl0IHRoaXMuYXBpUmVxdWVzdENoYWluLnByZWRpY3QoeyBxdWVzdGlvbiwgYXBpX2RvY3M6IHRoaXMuYXBpRG9jcyB9LCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcInJlcXVlc3RcIikpO1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChhcGlfdXJsLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgICAgICAgY29uc3QgYXBpX3Jlc3BvbnNlID0gYXdhaXQgcmVzLnRleHQoKTtcbiAgICAgICAgY29uc3QgYW5zd2VyID0gYXdhaXQgdGhpcy5hcGlBbnN3ZXJDaGFpbi5wcmVkaWN0KHsgcXVlc3Rpb24sIGFwaV9kb2NzOiB0aGlzLmFwaURvY3MsIGFwaV91cmwsIGFwaV9yZXNwb25zZSB9LCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcInJlc3BvbnNlXCIpKTtcbiAgICAgICAgcmV0dXJuIHsgW3RoaXMub3V0cHV0S2V5XTogYW5zd2VyIH07XG4gICAgfVxuICAgIF9jaGFpblR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcImFwaV9jaGFpblwiO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgZGVzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICBjb25zdCB7IGFwaV9yZXF1ZXN0X2NoYWluLCBhcGlfYW5zd2VyX2NoYWluLCBhcGlfZG9jcyB9ID0gZGF0YTtcbiAgICAgICAgaWYgKCFhcGlfcmVxdWVzdF9jaGFpbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTExNQ2hhaW4gbXVzdCBoYXZlIGFwaV9yZXF1ZXN0X2NoYWluXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYXBpX2Fuc3dlcl9jaGFpbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTExNQ2hhaW4gbXVzdCBoYXZlIGFwaV9hbnN3ZXJfY2hhaW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhcGlfZG9jcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTExNQ2hhaW4gbXVzdCBoYXZlIGFwaV9kb2NzXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQVBJQ2hhaW4oe1xuICAgICAgICAgICAgYXBpQW5zd2VyQ2hhaW46IGF3YWl0IExMTUNoYWluLmRlc2VyaWFsaXplKGFwaV9hbnN3ZXJfY2hhaW4pLFxuICAgICAgICAgICAgYXBpUmVxdWVzdENoYWluOiBhd2FpdCBMTE1DaGFpbi5kZXNlcmlhbGl6ZShhcGlfcmVxdWVzdF9jaGFpbiksXG4gICAgICAgICAgICBhcGlEb2NzOiBhcGlfZG9jcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIF90eXBlOiB0aGlzLl9jaGFpblR5cGUoKSxcbiAgICAgICAgICAgIGFwaV9hbnN3ZXJfY2hhaW46IHRoaXMuYXBpQW5zd2VyQ2hhaW4uc2VyaWFsaXplKCksXG4gICAgICAgICAgICBhcGlfcmVxdWVzdF9jaGFpbjogdGhpcy5hcGlSZXF1ZXN0Q2hhaW4uc2VyaWFsaXplKCksXG4gICAgICAgICAgICBhcGlfZG9jczogdGhpcy5hcGlEb2NzLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdGF0aWMgbWV0aG9kIHRvIGNyZWF0ZSBhIG5ldyBBUElDaGFpbiBmcm9tIGEgQmFzZUxhbmd1YWdlTW9kZWwgYW5kIEFQSVxuICAgICAqIGRvY3VtZW50YXRpb24uXG4gICAgICogQHBhcmFtIGxsbSBCYXNlTGFuZ3VhZ2VNb2RlbCBpbnN0YW5jZS5cbiAgICAgKiBAcGFyYW0gYXBpRG9jcyBBUEkgZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoZSBBUElDaGFpbi5cbiAgICAgKiBAcmV0dXJucyBOZXcgQVBJQ2hhaW4gaW5zdGFuY2UuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21MTE1BbmRBUElEb2NzKGxsbSwgYXBpRG9jcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHsgYXBpVXJsUHJvbXB0ID0gQVBJX1VSTF9QUk9NUFRfVEVNUExBVEUsIGFwaVJlc3BvbnNlUHJvbXB0ID0gQVBJX1JFU1BPTlNFX1BST01QVF9URU1QTEFURSwgfSA9IG9wdGlvbnM7XG4gICAgICAgIGNvbnN0IGFwaVJlcXVlc3RDaGFpbiA9IG5ldyBMTE1DaGFpbih7IHByb21wdDogYXBpVXJsUHJvbXB0LCBsbG0gfSk7XG4gICAgICAgIGNvbnN0IGFwaUFuc3dlckNoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0OiBhcGlSZXNwb25zZVByb21wdCwgbGxtIH0pO1xuICAgICAgICByZXR1cm4gbmV3IHRoaXMoe1xuICAgICAgICAgICAgYXBpQW5zd2VyQ2hhaW4sXG4gICAgICAgICAgICBhcGlSZXF1ZXN0Q2hhaW4sXG4gICAgICAgICAgICBhcGlEb2NzLFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/api_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/prompts.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/prompts.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_RESPONSE_PROMPT_TEMPLATE: () => (/* binding */ API_RESPONSE_PROMPT_TEMPLATE),\n/* harmony export */   API_RESPONSE_RAW_PROMPT_TEMPLATE: () => (/* binding */ API_RESPONSE_RAW_PROMPT_TEMPLATE),\n/* harmony export */   API_URL_PROMPT_TEMPLATE: () => (/* binding */ API_URL_PROMPT_TEMPLATE),\n/* harmony export */   API_URL_RAW_PROMPT_TEMPLATE: () => (/* binding */ API_URL_RAW_PROMPT_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* eslint-disable spaced-comment */\n\nconst API_URL_RAW_PROMPT_TEMPLATE = `You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate the full API url to call for answering the user question.\nYou should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\nAPI url:`;\nconst API_URL_PROMPT_TEMPLATE = /* #__PURE__ */ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\"],\n    template: API_URL_RAW_PROMPT_TEMPLATE,\n});\nconst API_RESPONSE_RAW_PROMPT_TEMPLATE = `${API_URL_RAW_PROMPT_TEMPLATE} {api_url}\n\nHere is the response from the API:\n\n{api_response}\n\nSummarize this response to answer the original question.\n\nSummary:`;\nconst API_RESPONSE_PROMPT_TEMPLATE = /* #__PURE__ */ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\", \"api_url\", \"api_response\"],\n    template: API_RESPONSE_RAW_PROMPT_TEMPLATE,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvYXBpL3Byb21wdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUN5RDtBQUNsRDtBQUNQLENBQUM7QUFDRDtBQUNBOztBQUVBLFVBQVU7QUFDVjtBQUNPLG9EQUFvRCxtRUFBYztBQUN6RTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDRDQUE0Qyw4QkFBOEI7O0FBRWpGOztBQUVBLENBQUM7O0FBRUQ7O0FBRUE7QUFDTyx5REFBeUQsbUVBQWM7QUFDOUU7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL2FwaS9wcm9tcHRzLmpzPzEwOTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgc3BhY2VkLWNvbW1lbnQgKi9cbmltcG9ydCB7IFByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5leHBvcnQgY29uc3QgQVBJX1VSTF9SQVdfUFJPTVBUX1RFTVBMQVRFID0gYFlvdSBhcmUgZ2l2ZW4gdGhlIGJlbG93IEFQSSBEb2N1bWVudGF0aW9uOlxue2FwaV9kb2NzfVxuVXNpbmcgdGhpcyBkb2N1bWVudGF0aW9uLCBnZW5lcmF0ZSB0aGUgZnVsbCBBUEkgdXJsIHRvIGNhbGwgZm9yIGFuc3dlcmluZyB0aGUgdXNlciBxdWVzdGlvbi5cbllvdSBzaG91bGQgYnVpbGQgdGhlIEFQSSB1cmwgaW4gb3JkZXIgdG8gZ2V0IGEgcmVzcG9uc2UgdGhhdCBpcyBhcyBzaG9ydCBhcyBwb3NzaWJsZSwgd2hpbGUgc3RpbGwgZ2V0dGluZyB0aGUgbmVjZXNzYXJ5IGluZm9ybWF0aW9uIHRvIGFuc3dlciB0aGUgcXVlc3Rpb24uIFBheSBhdHRlbnRpb24gdG8gZGVsaWJlcmF0ZWx5IGV4Y2x1ZGUgYW55IHVubmVjZXNzYXJ5IHBpZWNlcyBvZiBkYXRhIGluIHRoZSBBUEkgY2FsbC5cblxuUXVlc3Rpb246e3F1ZXN0aW9ufVxuQVBJIHVybDpgO1xuZXhwb3J0IGNvbnN0IEFQSV9VUkxfUFJPTVBUX1RFTVBMQVRFID0gLyogI19fUFVSRV9fICovIG5ldyBQcm9tcHRUZW1wbGF0ZSh7XG4gICAgaW5wdXRWYXJpYWJsZXM6IFtcImFwaV9kb2NzXCIsIFwicXVlc3Rpb25cIl0sXG4gICAgdGVtcGxhdGU6IEFQSV9VUkxfUkFXX1BST01QVF9URU1QTEFURSxcbn0pO1xuZXhwb3J0IGNvbnN0IEFQSV9SRVNQT05TRV9SQVdfUFJPTVBUX1RFTVBMQVRFID0gYCR7QVBJX1VSTF9SQVdfUFJPTVBUX1RFTVBMQVRFfSB7YXBpX3VybH1cblxuSGVyZSBpcyB0aGUgcmVzcG9uc2UgZnJvbSB0aGUgQVBJOlxuXG57YXBpX3Jlc3BvbnNlfVxuXG5TdW1tYXJpemUgdGhpcyByZXNwb25zZSB0byBhbnN3ZXIgdGhlIG9yaWdpbmFsIHF1ZXN0aW9uLlxuXG5TdW1tYXJ5OmA7XG5leHBvcnQgY29uc3QgQVBJX1JFU1BPTlNFX1BST01QVF9URU1QTEFURSA9IC8qICNfX1BVUkVfXyAqLyBuZXcgUHJvbXB0VGVtcGxhdGUoe1xuICAgIGlucHV0VmFyaWFibGVzOiBbXCJhcGlfZG9jc1wiLCBcInF1ZXN0aW9uXCIsIFwiYXBpX3VybFwiLCBcImFwaV9yZXNwb25zZVwiXSxcbiAgICB0ZW1wbGF0ZTogQVBJX1JFU1BPTlNFX1JBV19QUk9NUFRfVEVNUExBVEUsXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChain: () => (/* binding */ BaseChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_outputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/outputs */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/outputs.js\");\n/* harmony import */ var _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/callbacks/manager */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/callbacks/manager.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/language_models/base.js\");\n\n\n\n\n/**\n * Base interface that all chains must implement.\n */\nclass BaseChain extends _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_3__.BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"chains\", this._chainType()];\n    }\n    constructor(fields, \n    /** @deprecated */\n    verbose, \n    /** @deprecated */\n    callbacks) {\n        if (arguments.length === 1 &&\n            typeof fields === \"object\" &&\n            !(\"saveContext\" in fields)) {\n            // fields is not a BaseMemory\n            const { memory, callbackManager, ...rest } = fields;\n            super({ ...rest, callbacks: callbackManager ?? rest.callbacks });\n            this.memory = memory;\n        }\n        else {\n            // fields is a BaseMemory\n            super({ verbose, callbacks });\n            this.memory = fields;\n        }\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = { ...values };\n        if (\"signal\" in valuesForMemory) {\n            delete valuesForMemory.signal;\n        }\n        if (\"timeout\" in valuesForMemory) {\n            delete valuesForMemory.timeout;\n        }\n        return valuesForMemory;\n    }\n    /**\n     * Invoke the chain with the provided input and returns the output.\n     * @param input Input values for the chain run.\n     * @param config Optional configuration for the Runnable.\n     * @returns Promise that resolves with the output of the chain run.\n     */\n    async invoke(input, options) {\n        const config = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(options);\n        const fullValues = await this._formatValues(input);\n        const callbackManager_ = await _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__.CallbackManager.configure(config?.callbacks, this.callbacks, config?.tags, this.tags, config?.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), fullValues, undefined, undefined, undefined, undefined, config?.runName);\n        let outputValues;\n        try {\n            outputValues = await (fullValues.signal\n                ? Promise.race([\n                    this._call(fullValues, runManager, config),\n                    new Promise((_, reject) => {\n                        fullValues.signal?.addEventListener(\"abort\", () => {\n                            reject(new Error(\"AbortError\"));\n                        });\n                    }),\n                ])\n                : this._call(fullValues, runManager, config));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        if (!(this.memory == null)) {\n            await this.memory.saveContext(this._selectMemoryInputs(input), outputValues);\n        }\n        await runManager?.handleChainEnd(outputValues);\n        // add the runManager's currentRunId to the outputValues\n        Object.defineProperty(outputValues, _langchain_core_outputs__WEBPACK_IMPORTED_MODULE_0__.RUN_KEY, {\n            value: runManager ? { runId: runManager?.runId } : undefined,\n            configurable: true,\n        });\n        return outputValues;\n    }\n    _validateOutputs(outputs) {\n        const missingKeys = this.outputKeys.filter((k) => !(k in outputs));\n        if (missingKeys.length) {\n            throw new Error(`Missing output keys: ${missingKeys.join(\", \")} from chain ${this._chainType()}`);\n        }\n    }\n    async prepOutputs(inputs, outputs, returnOnlyOutputs = false) {\n        this._validateOutputs(outputs);\n        if (this.memory) {\n            await this.memory.saveContext(inputs, outputs);\n        }\n        if (returnOnlyOutputs) {\n            return outputs;\n        }\n        return { ...inputs, ...outputs };\n    }\n    /**\n     * Return a json-like object representing this chain.\n     */\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /** @deprecated Use .invoke() instead. Will be removed in 0.2.0. */\n    async run(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, config) {\n        const inputKeys = this.inputKeys.filter((k) => !this.memory?.memoryKeys.includes(k) ?? true);\n        const isKeylessInput = inputKeys.length <= 1;\n        if (!isKeylessInput) {\n            throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const values = inputKeys.length ? { [inputKeys[0]]: input } : {};\n        const returnValues = await this.call(values, config);\n        const keys = Object.keys(returnValues);\n        if (keys.length === 1) {\n            return returnValues[keys[0]];\n        }\n        throw new Error(\"return values have multiple keys, `run` only supported when one key currently\");\n    }\n    async _formatValues(values) {\n        const fullValues = { ...values };\n        if (fullValues.timeout && !fullValues.signal) {\n            fullValues.signal = AbortSignal.timeout(fullValues.timeout);\n            delete fullValues.timeout;\n        }\n        if (!(this.memory == null)) {\n            const newValues = await this.memory.loadMemoryVariables(this._selectMemoryInputs(values));\n            for (const [key, value] of Object.entries(newValues)) {\n                fullValues[key] = value;\n            }\n        }\n        return fullValues;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    async call(values, config, \n    /** @deprecated */\n    tags) {\n        const parsedConfig = { tags, ...(0,_langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__.parseCallbackConfigArg)(config) };\n        return this.invoke(values, parsedConfig);\n    }\n    /**\n     * @deprecated Use .batch() instead. Will be removed in 0.2.0.\n     *\n     * Call the chain on all inputs in the list\n     */\n    async apply(inputs, config) {\n        return Promise.all(inputs.map(async (i, idx) => this.call(i, config?.[idx])));\n    }\n    /**\n     * Load a chain from a json-like object describing it.\n     */\n    static async deserialize(data, values = {}) {\n        switch (data._type) {\n            case \"llm_chain\": {\n                const { LLMChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\"));\n                return LLMChain.deserialize(data);\n            }\n            case \"sequential_chain\": {\n                const { SequentialChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i\").then(__webpack_require__.bind(__webpack_require__, /*! ./sequential_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/sequential_chain.js\"));\n                return SequentialChain.deserialize(data);\n            }\n            case \"simple_sequential_chain\": {\n                const { SimpleSequentialChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i\").then(__webpack_require__.bind(__webpack_require__, /*! ./sequential_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/sequential_chain.js\"));\n                return SimpleSequentialChain.deserialize(data);\n            }\n            case \"stuff_documents_chain\": {\n                const { StuffDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return StuffDocumentsChain.deserialize(data);\n            }\n            case \"map_reduce_documents_chain\": {\n                const { MapReduceDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return MapReduceDocumentsChain.deserialize(data);\n            }\n            case \"refine_documents_chain\": {\n                const { RefineDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return RefineDocumentsChain.deserialize(data);\n            }\n            case \"vector_db_qa\": {\n                const { VectorDBQAChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./vector_db_qa.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/vector_db_qa.js\"));\n                return VectorDBQAChain.deserialize(data, values);\n            }\n            case \"api_chain\": {\n                const { APIChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i\").then(__webpack_require__.bind(__webpack_require__, /*! ./api/api_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/api/api_chain.js\"));\n                return APIChain.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapReduceDocumentsChain: () => (/* binding */ MapReduceDocumentsChain),\n/* harmony export */   RefineDocumentsChain: () => (/* binding */ RefineDocumentsChain),\n/* harmony export */   StuffDocumentsChain: () => (/* binding */ StuffDocumentsChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n\n\n\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nclass StuffDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"StuffDocumentsChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey, ...this.llmChain.inputKeys].filter((key) => key !== this.documentVariableName);\n    }\n    get outputKeys() {\n        return this.llmChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        this.llmChain = fields.llmChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n    }\n    /** @ignore */\n    _prepInputs(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const texts = docs.map(({ pageContent }) => pageContent);\n        const text = texts.join(\"\\n\\n\");\n        return {\n            ...rest,\n            [this.documentVariableName]: text,\n        };\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const result = await this.llmChain.call(this._prepInputs(values), runManager?.getChild(\"combine_documents\"));\n        return result;\n    }\n    _chainType() {\n        return \"stuff_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        return new StuffDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(data.llm_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by mapping a chain over them, then combining results.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nclass MapReduceDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"MapReduceDocumentsChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey, ...this.combineDocumentChain.inputKeys];\n    }\n    get outputKeys() {\n        return this.combineDocumentChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 10\n        });\n        Object.defineProperty(this, \"ensureMapStep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"combineDocumentChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmChain = fields.llmChain;\n        this.combineDocumentChain = fields.combineDocumentChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.ensureMapStep = fields.ensureMapStep ?? this.ensureMapStep;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.maxTokens = fields.maxTokens ?? this.maxTokens;\n        this.maxIterations = fields.maxIterations ?? this.maxIterations;\n        this.returnIntermediateSteps = fields.returnIntermediateSteps ?? false;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        let currentDocs = docs;\n        let intermediateSteps = [];\n        // For each iteration, we'll use the `llmChain` to get a new result\n        for (let i = 0; i < this.maxIterations; i += 1) {\n            const inputs = currentDocs.map((d) => ({\n                [this.documentVariableName]: d.pageContent,\n                ...rest,\n            }));\n            const canSkipMapStep = i !== 0 || !this.ensureMapStep;\n            if (canSkipMapStep) {\n                // Calculate the total tokens required in the input\n                const formatted = await this.combineDocumentChain.llmChain.prompt.format(this.combineDocumentChain._prepInputs({\n                    [this.combineDocumentChain.inputKey]: currentDocs,\n                    ...rest,\n                }));\n                const length = await this.combineDocumentChain.llmChain._getNumTokens(formatted);\n                const withinTokenLimit = length < this.maxTokens;\n                // If we can skip the map step, and we're within the token limit, we don't\n                // need to run the map step, so just break out of the loop.\n                if (withinTokenLimit) {\n                    break;\n                }\n            }\n            const results = await this.llmChain.apply(inputs, \n            // If we have a runManager, then we need to create a child for each input\n            // so that we can track the progress of each input.\n            runManager\n                ? Array.from({ length: inputs.length }, (_, i) => runManager.getChild(`map_${i + 1}`))\n                : undefined);\n            const { outputKey } = this.llmChain;\n            // If the flag is set, then concat that to the intermediate steps\n            if (this.returnIntermediateSteps) {\n                intermediateSteps = intermediateSteps.concat(results.map((r) => r[outputKey]));\n            }\n            currentDocs = results.map((r) => ({\n                pageContent: r[outputKey],\n                metadata: {},\n            }));\n        }\n        // Now, with the final result of all the inputs from the `llmChain`, we can\n        // run the `combineDocumentChain` over them.\n        const newInputs = {\n            [this.combineDocumentChain.inputKey]: currentDocs,\n            ...rest,\n        };\n        const result = await this.combineDocumentChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n        // Return the intermediate steps results if the flag is set\n        if (this.returnIntermediateSteps) {\n            return { ...result, intermediateSteps };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"map_reduce_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        if (!data.combine_document_chain) {\n            throw new Error(\"Missing combine_document_chain\");\n        }\n        return new MapReduceDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(data.llm_chain),\n            combineDocumentChain: await StuffDocumentsChain.deserialize(data.combine_document_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            combine_document_chain: this.combineDocumentChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by doing a first pass and then refining on more documents.\n * @augments BaseChain\n * @augments RefineDocumentsChainInput\n */\nclass RefineDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"RefineDocumentsChain\";\n    }\n    get defaultDocumentPrompt() {\n        return new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n            inputVariables: [\"page_content\"],\n            template: \"{page_content}\",\n        });\n    }\n    get inputKeys() {\n        return [\n            ...new Set([\n                this.inputKey,\n                ...this.llmChain.inputKeys,\n                ...this.refineLLMChain.inputKeys,\n            ]),\n        ].filter((key) => key !== this.documentVariableName && key !== this.initialResponseName);\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output_text\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"initialResponseName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"existing_answer\"\n        });\n        Object.defineProperty(this, \"refineLLMChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"documentPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.defaultDocumentPrompt\n        });\n        this.llmChain = fields.llmChain;\n        this.refineLLMChain = fields.refineLLMChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.documentPrompt = fields.documentPrompt ?? this.documentPrompt;\n        this.initialResponseName =\n            fields.initialResponseName ?? this.initialResponseName;\n    }\n    /** @ignore */\n    async _constructInitialInputs(doc, rest) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { ...baseInputs, ...rest };\n        return inputs;\n    }\n    /** @ignore */\n    async _constructRefineInputs(doc, res) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { [this.initialResponseName]: res, ...baseInputs };\n        return inputs;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const currentDocs = docs;\n        const initialInputs = await this._constructInitialInputs(currentDocs[0], rest);\n        let res = await this.llmChain.predict({ ...initialInputs }, runManager?.getChild(\"answer\"));\n        const refineSteps = [res];\n        for (let i = 1; i < currentDocs.length; i += 1) {\n            const refineInputs = await this._constructRefineInputs(currentDocs[i], res);\n            const inputs = { ...refineInputs, ...rest };\n            res = await this.refineLLMChain.predict({ ...inputs }, runManager?.getChild(\"refine\"));\n            refineSteps.push(res);\n        }\n        return { [this.outputKey]: res };\n    }\n    _chainType() {\n        return \"refine_documents_chain\";\n    }\n    static async deserialize(data) {\n        const SerializedLLMChain = data.llm_chain;\n        if (!SerializedLLMChain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        const SerializedRefineDocumentChain = data.refine_llm_chain;\n        if (!SerializedRefineDocumentChain) {\n            throw new Error(\"Missing refine_llm_chain\");\n        }\n        return new RefineDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(SerializedLLMChain),\n            refineLLMChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(SerializedRefineDocumentChain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            refine_llm_chain: this.refineLLMChain.serialize(),\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LLMChain: () => (/* binding */ LLMChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/language_models/base.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _output_parsers_noop_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../output_parsers/noop.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/noop.js\");\n\n\n\n\n\nfunction isBaseLanguageModel(llmLike) {\n    return typeof llmLike._llmType === \"function\";\n}\nfunction _getLanguageModel(llmLike) {\n    if (isBaseLanguageModel(llmLike)) {\n        return llmLike;\n    }\n    else if (\"bound\" in llmLike && _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.bound)) {\n        return _getLanguageModel(llmLike.bound);\n    }\n    else if (\"runnable\" in llmLike &&\n        \"fallbacks\" in llmLike &&\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.runnable)) {\n        return _getLanguageModel(llmLike.runnable);\n    }\n    else if (\"default\" in llmLike && _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.default)) {\n        return _getLanguageModel(llmLike.default);\n    }\n    else {\n        throw new Error(\"Unable to extract BaseLanguageModel from llmLike object.\");\n    }\n}\n/**\n * @deprecated This class will be removed in 1.0.0. Use the LangChain Expression Language (LCEL) instead.\n * See the example below for how to use LCEL with the LLMChain class:\n *\n * Chain to run queries against LLMs.\n *\n * @example\n * ```ts\n * import { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const prompt = ChatPromptTemplate.fromTemplate(\"Tell me a {adjective} joke\");\n * const llm = new ChatOpenAI();\n * const chain = prompt.pipe(llm);\n *\n * const response = await chain.invoke({ adjective: \"funny\" });\n * ```\n */\nclass LLMChain extends _base_js__WEBPACK_IMPORTED_MODULE_3__.BaseChain {\n    static lc_name() {\n        return \"LLMChain\";\n    }\n    get inputKeys() {\n        return this.prompt.inputVariables;\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llmKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text\"\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n        this.llm = fields.llm;\n        this.llmKwargs = fields.llmKwargs;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.outputParser =\n            fields.outputParser ?? new _output_parsers_noop_js__WEBPACK_IMPORTED_MODULE_4__.NoOpOutputParser();\n        if (this.prompt.outputParser) {\n            if (fields.outputParser) {\n                throw new Error(\"Cannot set both outputParser and prompt.outputParser\");\n            }\n            this.outputParser = this.prompt.outputParser;\n        }\n    }\n    getCallKeys() {\n        const callKeys = \"callKeys\" in this.llm ? this.llm.callKeys : [];\n        return callKeys;\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = super._selectMemoryInputs(values);\n        const callKeys = this.getCallKeys();\n        for (const key of callKeys) {\n            if (key in values) {\n                delete valuesForMemory[key];\n            }\n        }\n        return valuesForMemory;\n    }\n    /** @ignore */\n    async _getFinalOutput(generations, promptValue, runManager) {\n        let finalCompletion;\n        if (this.outputParser) {\n            finalCompletion = await this.outputParser.parseResultWithPrompt(generations, promptValue, runManager?.getChild());\n        }\n        else {\n            finalCompletion = generations[0].text;\n        }\n        return finalCompletion;\n    }\n    /**\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    call(values, config) {\n        return super.call(values, config);\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const valuesForPrompt = { ...values };\n        const valuesForLLM = {\n            ...this.llmKwargs,\n        };\n        const callKeys = this.getCallKeys();\n        for (const key of callKeys) {\n            if (key in values) {\n                if (valuesForLLM) {\n                    valuesForLLM[key] =\n                        values[key];\n                    delete valuesForPrompt[key];\n                }\n            }\n        }\n        const promptValue = await this.prompt.formatPromptValue(valuesForPrompt);\n        if (\"generatePrompt\" in this.llm) {\n            const { generations } = await this.llm.generatePrompt([promptValue], valuesForLLM, runManager?.getChild());\n            return {\n                [this.outputKey]: await this._getFinalOutput(generations[0], promptValue, runManager),\n            };\n        }\n        const modelWithParser = this.outputParser\n            ? this.llm.pipe(this.outputParser)\n            : this.llm;\n        const response = await modelWithParser.invoke(promptValue, runManager?.getChild());\n        return {\n            [this.outputKey]: response,\n        };\n    }\n    /**\n     * Format prompt with values and pass to LLM\n     *\n     * @param values - keys to pass to prompt template\n     * @param callbackManager - CallbackManager to use\n     * @returns Completion from LLM.\n     *\n     * @example\n     * ```ts\n     * llm.predict({ adjective: \"funny\" })\n     * ```\n     */\n    async predict(values, callbackManager) {\n        const output = await this.call(values, callbackManager);\n        return output[this.outputKey];\n    }\n    _chainType() {\n        return \"llm\";\n    }\n    static async deserialize(data) {\n        const { llm, prompt } = data;\n        if (!llm) {\n            throw new Error(\"LLMChain must have llm\");\n        }\n        if (!prompt) {\n            throw new Error(\"LLMChain must have prompt\");\n        }\n        return new LLMChain({\n            llm: await _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_0__.BaseLanguageModel.deserialize(llm),\n            prompt: await _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.BasePromptTemplate.deserialize(prompt),\n        });\n    }\n    /** @deprecated */\n    serialize() {\n        const serialize = \"serialize\" in this.llm ? this.llm.serialize() : undefined;\n        return {\n            _type: `${this._chainType()}_chain`,\n            llm: serialize,\n            prompt: this.prompt.serialize(),\n        };\n    }\n    _getNumTokens(text) {\n        return _getLanguageModel(this.llm).getNumTokens(text);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvbGxtX2NoYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwRTtBQUNiO0FBQ1I7QUFDZjtBQUN1QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQywrREFBUTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0RBQVE7QUFDaEI7QUFDQTtBQUNBLHFDQUFxQywrREFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakMsWUFBWSxhQUFhO0FBQ3pCO0FBQ0EsOERBQThELFdBQVc7QUFDekU7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLG9CQUFvQjtBQUM3RDtBQUNBO0FBQ08sdUJBQXVCLCtDQUFTO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHFFQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGNBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUZBQWlCO0FBQ3hDLDBCQUEwQix1RUFBa0I7QUFDNUMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0JBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL2xsbV9jaGFpbi5qcz80NDViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VMYW5ndWFnZU1vZGVsLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbGFuZ3VhZ2VfbW9kZWxzL2Jhc2VcIjtcbmltcG9ydCB7IEJhc2VQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgUnVubmFibGUgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3J1bm5hYmxlc1wiO1xuaW1wb3J0IHsgQmFzZUNoYWluIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuaW1wb3J0IHsgTm9PcE91dHB1dFBhcnNlciB9IGZyb20gXCIuLi9vdXRwdXRfcGFyc2Vycy9ub29wLmpzXCI7XG5mdW5jdGlvbiBpc0Jhc2VMYW5ndWFnZU1vZGVsKGxsbUxpa2UpIHtcbiAgICByZXR1cm4gdHlwZW9mIGxsbUxpa2UuX2xsbVR5cGUgPT09IFwiZnVuY3Rpb25cIjtcbn1cbmZ1bmN0aW9uIF9nZXRMYW5ndWFnZU1vZGVsKGxsbUxpa2UpIHtcbiAgICBpZiAoaXNCYXNlTGFuZ3VhZ2VNb2RlbChsbG1MaWtlKSkge1xuICAgICAgICByZXR1cm4gbGxtTGlrZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoXCJib3VuZFwiIGluIGxsbUxpa2UgJiYgUnVubmFibGUuaXNSdW5uYWJsZShsbG1MaWtlLmJvdW5kKSkge1xuICAgICAgICByZXR1cm4gX2dldExhbmd1YWdlTW9kZWwobGxtTGlrZS5ib3VuZCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKFwicnVubmFibGVcIiBpbiBsbG1MaWtlICYmXG4gICAgICAgIFwiZmFsbGJhY2tzXCIgaW4gbGxtTGlrZSAmJlxuICAgICAgICBSdW5uYWJsZS5pc1J1bm5hYmxlKGxsbUxpa2UucnVubmFibGUpKSB7XG4gICAgICAgIHJldHVybiBfZ2V0TGFuZ3VhZ2VNb2RlbChsbG1MaWtlLnJ1bm5hYmxlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoXCJkZWZhdWx0XCIgaW4gbGxtTGlrZSAmJiBSdW5uYWJsZS5pc1J1bm5hYmxlKGxsbUxpa2UuZGVmYXVsdCkpIHtcbiAgICAgICAgcmV0dXJuIF9nZXRMYW5ndWFnZU1vZGVsKGxsbUxpa2UuZGVmYXVsdCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gZXh0cmFjdCBCYXNlTGFuZ3VhZ2VNb2RlbCBmcm9tIGxsbUxpa2Ugb2JqZWN0LlwiKTtcbiAgICB9XG59XG4vKipcbiAqIEBkZXByZWNhdGVkIFRoaXMgY2xhc3Mgd2lsbCBiZSByZW1vdmVkIGluIDEuMC4wLiBVc2UgdGhlIExhbmdDaGFpbiBFeHByZXNzaW9uIExhbmd1YWdlIChMQ0VMKSBpbnN0ZWFkLlxuICogU2VlIHRoZSBleGFtcGxlIGJlbG93IGZvciBob3cgdG8gdXNlIExDRUwgd2l0aCB0aGUgTExNQ2hhaW4gY2xhc3M6XG4gKlxuICogQ2hhaW4gdG8gcnVuIHF1ZXJpZXMgYWdhaW5zdCBMTE1zLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgQ2hhdFByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG4gKiBpbXBvcnQgeyBDaGF0T3BlbkFJIH0gZnJvbSBcIkBsYW5nY2hhaW4vb3BlbmFpXCI7XG4gKlxuICogY29uc3QgcHJvbXB0ID0gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShcIlRlbGwgbWUgYSB7YWRqZWN0aXZlfSBqb2tlXCIpO1xuICogY29uc3QgbGxtID0gbmV3IENoYXRPcGVuQUkoKTtcbiAqIGNvbnN0IGNoYWluID0gcHJvbXB0LnBpcGUobGxtKTtcbiAqXG4gKiBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNoYWluLmludm9rZSh7IGFkamVjdGl2ZTogXCJmdW5ueVwiIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBMTE1DaGFpbiBleHRlbmRzIEJhc2VDaGFpbiB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIkxMTUNoYWluXCI7XG4gICAgfVxuICAgIGdldCBpbnB1dEtleXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb21wdC5pbnB1dFZhcmlhYmxlcztcbiAgICB9XG4gICAgZ2V0IG91dHB1dEtleXMoKSB7XG4gICAgICAgIHJldHVybiBbdGhpcy5vdXRwdXRLZXldO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoZmllbGRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcm9tcHRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGxtXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxsbUt3YXJnc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvdXRwdXRLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwidGV4dFwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvdXRwdXRQYXJzZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9tcHQgPSBmaWVsZHMucHJvbXB0O1xuICAgICAgICB0aGlzLmxsbSA9IGZpZWxkcy5sbG07XG4gICAgICAgIHRoaXMubGxtS3dhcmdzID0gZmllbGRzLmxsbUt3YXJncztcbiAgICAgICAgdGhpcy5vdXRwdXRLZXkgPSBmaWVsZHMub3V0cHV0S2V5ID8/IHRoaXMub3V0cHV0S2V5O1xuICAgICAgICB0aGlzLm91dHB1dFBhcnNlciA9XG4gICAgICAgICAgICBmaWVsZHMub3V0cHV0UGFyc2VyID8/IG5ldyBOb09wT3V0cHV0UGFyc2VyKCk7XG4gICAgICAgIGlmICh0aGlzLnByb21wdC5vdXRwdXRQYXJzZXIpIHtcbiAgICAgICAgICAgIGlmIChmaWVsZHMub3V0cHV0UGFyc2VyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNldCBib3RoIG91dHB1dFBhcnNlciBhbmQgcHJvbXB0Lm91dHB1dFBhcnNlclwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub3V0cHV0UGFyc2VyID0gdGhpcy5wcm9tcHQub3V0cHV0UGFyc2VyO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldENhbGxLZXlzKCkge1xuICAgICAgICBjb25zdCBjYWxsS2V5cyA9IFwiY2FsbEtleXNcIiBpbiB0aGlzLmxsbSA/IHRoaXMubGxtLmNhbGxLZXlzIDogW107XG4gICAgICAgIHJldHVybiBjYWxsS2V5cztcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBfc2VsZWN0TWVtb3J5SW5wdXRzKHZhbHVlcykge1xuICAgICAgICBjb25zdCB2YWx1ZXNGb3JNZW1vcnkgPSBzdXBlci5fc2VsZWN0TWVtb3J5SW5wdXRzKHZhbHVlcyk7XG4gICAgICAgIGNvbnN0IGNhbGxLZXlzID0gdGhpcy5nZXRDYWxsS2V5cygpO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBjYWxsS2V5cykge1xuICAgICAgICAgICAgaWYgKGtleSBpbiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgdmFsdWVzRm9yTWVtb3J5W2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlc0Zvck1lbW9yeTtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfZ2V0RmluYWxPdXRwdXQoZ2VuZXJhdGlvbnMsIHByb21wdFZhbHVlLCBydW5NYW5hZ2VyKSB7XG4gICAgICAgIGxldCBmaW5hbENvbXBsZXRpb247XG4gICAgICAgIGlmICh0aGlzLm91dHB1dFBhcnNlcikge1xuICAgICAgICAgICAgZmluYWxDb21wbGV0aW9uID0gYXdhaXQgdGhpcy5vdXRwdXRQYXJzZXIucGFyc2VSZXN1bHRXaXRoUHJvbXB0KGdlbmVyYXRpb25zLCBwcm9tcHRWYWx1ZSwgcnVuTWFuYWdlcj8uZ2V0Q2hpbGQoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBmaW5hbENvbXBsZXRpb24gPSBnZW5lcmF0aW9uc1swXS50ZXh0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaW5hbENvbXBsZXRpb247XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJ1biB0aGUgY29yZSBsb2dpYyBvZiB0aGlzIGNoYWluIGFuZCBhZGQgdG8gb3V0cHV0IGlmIGRlc2lyZWQuXG4gICAgICpcbiAgICAgKiBXcmFwcyBfY2FsbCBhbmQgaGFuZGxlcyBtZW1vcnkuXG4gICAgICovXG4gICAgY2FsbCh2YWx1ZXMsIGNvbmZpZykge1xuICAgICAgICByZXR1cm4gc3VwZXIuY2FsbCh2YWx1ZXMsIGNvbmZpZyk7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwodmFsdWVzLCBydW5NYW5hZ2VyKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlc0ZvclByb21wdCA9IHsgLi4udmFsdWVzIH07XG4gICAgICAgIGNvbnN0IHZhbHVlc0ZvckxMTSA9IHtcbiAgICAgICAgICAgIC4uLnRoaXMubGxtS3dhcmdzLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBjYWxsS2V5cyA9IHRoaXMuZ2V0Q2FsbEtleXMoKTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgY2FsbEtleXMpIHtcbiAgICAgICAgICAgIGlmIChrZXkgaW4gdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlc0ZvckxMTSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZXNGb3JMTE1ba2V5XSA9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHZhbHVlc0ZvclByb21wdFtrZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9tcHRWYWx1ZSA9IGF3YWl0IHRoaXMucHJvbXB0LmZvcm1hdFByb21wdFZhbHVlKHZhbHVlc0ZvclByb21wdCk7XG4gICAgICAgIGlmIChcImdlbmVyYXRlUHJvbXB0XCIgaW4gdGhpcy5sbG0pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZ2VuZXJhdGlvbnMgfSA9IGF3YWl0IHRoaXMubGxtLmdlbmVyYXRlUHJvbXB0KFtwcm9tcHRWYWx1ZV0sIHZhbHVlc0ZvckxMTSwgcnVuTWFuYWdlcj8uZ2V0Q2hpbGQoKSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIFt0aGlzLm91dHB1dEtleV06IGF3YWl0IHRoaXMuX2dldEZpbmFsT3V0cHV0KGdlbmVyYXRpb25zWzBdLCBwcm9tcHRWYWx1ZSwgcnVuTWFuYWdlciksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1vZGVsV2l0aFBhcnNlciA9IHRoaXMub3V0cHV0UGFyc2VyXG4gICAgICAgICAgICA/IHRoaXMubGxtLnBpcGUodGhpcy5vdXRwdXRQYXJzZXIpXG4gICAgICAgICAgICA6IHRoaXMubGxtO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG1vZGVsV2l0aFBhcnNlci5pbnZva2UocHJvbXB0VmFsdWUsIHJ1bk1hbmFnZXI/LmdldENoaWxkKCkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgW3RoaXMub3V0cHV0S2V5XTogcmVzcG9uc2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZvcm1hdCBwcm9tcHQgd2l0aCB2YWx1ZXMgYW5kIHBhc3MgdG8gTExNXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWVzIC0ga2V5cyB0byBwYXNzIHRvIHByb21wdCB0ZW1wbGF0ZVxuICAgICAqIEBwYXJhbSBjYWxsYmFja01hbmFnZXIgLSBDYWxsYmFja01hbmFnZXIgdG8gdXNlXG4gICAgICogQHJldHVybnMgQ29tcGxldGlvbiBmcm9tIExMTS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBsbG0ucHJlZGljdCh7IGFkamVjdGl2ZTogXCJmdW5ueVwiIH0pXG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgcHJlZGljdCh2YWx1ZXMsIGNhbGxiYWNrTWFuYWdlcikge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBhd2FpdCB0aGlzLmNhbGwodmFsdWVzLCBjYWxsYmFja01hbmFnZXIpO1xuICAgICAgICByZXR1cm4gb3V0cHV0W3RoaXMub3V0cHV0S2V5XTtcbiAgICB9XG4gICAgX2NoYWluVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwibGxtXCI7XG4gICAgfVxuICAgIHN0YXRpYyBhc3luYyBkZXNlcmlhbGl6ZShkYXRhKSB7XG4gICAgICAgIGNvbnN0IHsgbGxtLCBwcm9tcHQgfSA9IGRhdGE7XG4gICAgICAgIGlmICghbGxtKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgbGxtXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcHJvbXB0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgcHJvbXB0XCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgTExNQ2hhaW4oe1xuICAgICAgICAgICAgbGxtOiBhd2FpdCBCYXNlTGFuZ3VhZ2VNb2RlbC5kZXNlcmlhbGl6ZShsbG0pLFxuICAgICAgICAgICAgcHJvbXB0OiBhd2FpdCBCYXNlUHJvbXB0VGVtcGxhdGUuZGVzZXJpYWxpemUocHJvbXB0KSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBAZGVwcmVjYXRlZCAqL1xuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplID0gXCJzZXJpYWxpemVcIiBpbiB0aGlzLmxsbSA/IHRoaXMubGxtLnNlcmlhbGl6ZSgpIDogdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgX3R5cGU6IGAke3RoaXMuX2NoYWluVHlwZSgpfV9jaGFpbmAsXG4gICAgICAgICAgICBsbG06IHNlcmlhbGl6ZSxcbiAgICAgICAgICAgIHByb21wdDogdGhpcy5wcm9tcHQuc2VyaWFsaXplKCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIF9nZXROdW1Ub2tlbnModGV4dCkge1xuICAgICAgICByZXR1cm4gX2dldExhbmd1YWdlTW9kZWwodGhpcy5sbG0pLmdldE51bVRva2Vucyh0ZXh0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/load.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/load.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadQAChain: () => (/* binding */ loadQAChain),\n/* harmony export */   loadQAMapReduceChain: () => (/* binding */ loadQAMapReduceChain),\n/* harmony export */   loadQARefineChain: () => (/* binding */ loadQARefineChain),\n/* harmony export */   loadQAStuffChain: () => (/* binding */ loadQAStuffChain)\n/* harmony export */ });\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/combine_docs_chain.js\");\n/* harmony import */ var _stuff_prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stuff_prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js\");\n/* harmony import */ var _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map_reduce_prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js\");\n/* harmony import */ var _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./refine_prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/refine_prompts.js\");\n\n\n\n\n\nconst loadQAChain = (llm, params = { type: \"stuff\" }) => {\n    const { type } = params;\n    if (type === \"stuff\") {\n        return loadQAStuffChain(llm, params);\n    }\n    if (type === \"map_reduce\") {\n        return loadQAMapReduceChain(llm, params);\n    }\n    if (type === \"refine\") {\n        return loadQARefineChain(llm, params);\n    }\n    throw new Error(`Invalid _type: ${type}`);\n};\n/**\n * Loads a StuffQAChain based on the provided parameters. It takes an LLM\n * instance and StuffQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a StuffQAChain.\n * @returns A StuffQAChain instance.\n */\nfunction loadQAStuffChain(llm, params = {}) {\n    const { prompt = _stuff_prompts_js__WEBPACK_IMPORTED_MODULE_2__.QA_PROMPT_SELECTOR.getPrompt(llm), verbose } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt, llm, verbose });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain({ llmChain, verbose });\n    return chain;\n}\n/**\n * Loads a MapReduceQAChain based on the provided parameters. It takes an\n * LLM instance and MapReduceQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a MapReduceQAChain.\n * @returns A MapReduceQAChain instance.\n */\nfunction loadQAMapReduceChain(llm, params = {}) {\n    const { combineMapPrompt = _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__.COMBINE_QA_PROMPT_SELECTOR.getPrompt(llm), combinePrompt = _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__.COMBINE_PROMPT_SELECTOR.getPrompt(llm), verbose, combineLLM, returnIntermediateSteps, } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt: combineMapPrompt, llm, verbose });\n    const combineLLMChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({\n        prompt: combinePrompt,\n        llm: combineLLM ?? llm,\n        verbose,\n    });\n    const combineDocumentChain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain({\n        llmChain: combineLLMChain,\n        documentVariableName: \"summaries\",\n        verbose,\n    });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.MapReduceDocumentsChain({\n        llmChain,\n        combineDocumentChain,\n        returnIntermediateSteps,\n        verbose,\n    });\n    return chain;\n}\n/**\n * Loads a RefineQAChain based on the provided parameters. It takes an LLM\n * instance and RefineQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a RefineQAChain.\n * @returns A RefineQAChain instance.\n */\nfunction loadQARefineChain(llm, params = {}) {\n    const { questionPrompt = _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__.QUESTION_PROMPT_SELECTOR.getPrompt(llm), refinePrompt = _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__.REFINE_PROMPT_SELECTOR.getPrompt(llm), refineLLM, verbose, } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt: questionPrompt, llm, verbose });\n    const refineLLMChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({\n        prompt: refinePrompt,\n        llm: refineLLM ?? llm,\n        verbose,\n    });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.RefineDocumentsChain({\n        llmChain,\n        refineLLMChain,\n        verbose,\n    });\n    return chain;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL2xvYWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ29FO0FBQ3ZEO0FBQ3VDO0FBQ1A7QUFDakYscUNBQXFDLGVBQWU7QUFDM0QsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxLQUFLO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwQ0FBMEM7QUFDakQsWUFBWSxTQUFTLGlFQUFrQiwyQkFBMkI7QUFDbEUseUJBQXlCLG1EQUFRLEdBQUcsc0JBQXNCO0FBQzFELHNCQUFzQix1RUFBbUIsR0FBRyxtQkFBbUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOENBQThDO0FBQ3JELFlBQVksbUJBQW1CLDhFQUEwQixpQ0FBaUMsMkVBQXVCLGlFQUFpRTtBQUNsTCx5QkFBeUIsbURBQVEsR0FBRyx3Q0FBd0M7QUFDNUUsZ0NBQWdDLG1EQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxxQ0FBcUMsdUVBQW1CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzQkFBc0IsMkVBQXVCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJDQUEyQztBQUNsRCxZQUFZLGlCQUFpQix3RUFBd0IsZ0NBQWdDLHNFQUFzQix1Q0FBdUM7QUFDbEoseUJBQXlCLG1EQUFRLEdBQUcsc0NBQXNDO0FBQzFFLCtCQUErQixtREFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsc0JBQXNCLHdFQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL2xvYWQuanM/MDA3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi9sbG1fY2hhaW4uanNcIjtcbmltcG9ydCB7IFN0dWZmRG9jdW1lbnRzQ2hhaW4sIE1hcFJlZHVjZURvY3VtZW50c0NoYWluLCBSZWZpbmVEb2N1bWVudHNDaGFpbiwgfSBmcm9tIFwiLi4vY29tYmluZV9kb2NzX2NoYWluLmpzXCI7XG5pbXBvcnQgeyBRQV9QUk9NUFRfU0VMRUNUT1IgfSBmcm9tIFwiLi9zdHVmZl9wcm9tcHRzLmpzXCI7XG5pbXBvcnQgeyBDT01CSU5FX1BST01QVF9TRUxFQ1RPUiwgQ09NQklORV9RQV9QUk9NUFRfU0VMRUNUT1IsIH0gZnJvbSBcIi4vbWFwX3JlZHVjZV9wcm9tcHRzLmpzXCI7XG5pbXBvcnQgeyBRVUVTVElPTl9QUk9NUFRfU0VMRUNUT1IsIFJFRklORV9QUk9NUFRfU0VMRUNUT1IsIH0gZnJvbSBcIi4vcmVmaW5lX3Byb21wdHMuanNcIjtcbmV4cG9ydCBjb25zdCBsb2FkUUFDaGFpbiA9IChsbG0sIHBhcmFtcyA9IHsgdHlwZTogXCJzdHVmZlwiIH0pID0+IHtcbiAgICBjb25zdCB7IHR5cGUgfSA9IHBhcmFtcztcbiAgICBpZiAodHlwZSA9PT0gXCJzdHVmZlwiKSB7XG4gICAgICAgIHJldHVybiBsb2FkUUFTdHVmZkNoYWluKGxsbSwgcGFyYW1zKTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09IFwibWFwX3JlZHVjZVwiKSB7XG4gICAgICAgIHJldHVybiBsb2FkUUFNYXBSZWR1Y2VDaGFpbihsbG0sIHBhcmFtcyk7XG4gICAgfVxuICAgIGlmICh0eXBlID09PSBcInJlZmluZVwiKSB7XG4gICAgICAgIHJldHVybiBsb2FkUUFSZWZpbmVDaGFpbihsbG0sIHBhcmFtcyk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBfdHlwZTogJHt0eXBlfWApO1xufTtcbi8qKlxuICogTG9hZHMgYSBTdHVmZlFBQ2hhaW4gYmFzZWQgb24gdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuIEl0IHRha2VzIGFuIExMTVxuICogaW5zdGFuY2UgYW5kIFN0dWZmUUFDaGFpblBhcmFtcyBhcyBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIGxsbSBBbiBpbnN0YW5jZSBvZiBCYXNlTGFuZ3VhZ2VNb2RlbC5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1ldGVycyBmb3IgY3JlYXRpbmcgYSBTdHVmZlFBQ2hhaW4uXG4gKiBAcmV0dXJucyBBIFN0dWZmUUFDaGFpbiBpbnN0YW5jZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRRQVN0dWZmQ2hhaW4obGxtLCBwYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IHsgcHJvbXB0ID0gUUFfUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCB2ZXJib3NlIH0gPSBwYXJhbXM7XG4gICAgY29uc3QgbGxtQ2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBwcm9tcHQsIGxsbSwgdmVyYm9zZSB9KTtcbiAgICBjb25zdCBjaGFpbiA9IG5ldyBTdHVmZkRvY3VtZW50c0NoYWluKHsgbGxtQ2hhaW4sIHZlcmJvc2UgfSk7XG4gICAgcmV0dXJuIGNoYWluO1xufVxuLyoqXG4gKiBMb2FkcyBhIE1hcFJlZHVjZVFBQ2hhaW4gYmFzZWQgb24gdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuIEl0IHRha2VzIGFuXG4gKiBMTE0gaW5zdGFuY2UgYW5kIE1hcFJlZHVjZVFBQ2hhaW5QYXJhbXMgYXMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBsbG0gQW4gaW5zdGFuY2Ugb2YgQmFzZUxhbmd1YWdlTW9kZWwuXG4gKiBAcGFyYW0gcGFyYW1zIFBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgTWFwUmVkdWNlUUFDaGFpbi5cbiAqIEByZXR1cm5zIEEgTWFwUmVkdWNlUUFDaGFpbiBpbnN0YW5jZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRRQU1hcFJlZHVjZUNoYWluKGxsbSwgcGFyYW1zID0ge30pIHtcbiAgICBjb25zdCB7IGNvbWJpbmVNYXBQcm9tcHQgPSBDT01CSU5FX1FBX1BST01QVF9TRUxFQ1RPUi5nZXRQcm9tcHQobGxtKSwgY29tYmluZVByb21wdCA9IENPTUJJTkVfUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCB2ZXJib3NlLCBjb21iaW5lTExNLCByZXR1cm5JbnRlcm1lZGlhdGVTdGVwcywgfSA9IHBhcmFtcztcbiAgICBjb25zdCBsbG1DaGFpbiA9IG5ldyBMTE1DaGFpbih7IHByb21wdDogY29tYmluZU1hcFByb21wdCwgbGxtLCB2ZXJib3NlIH0pO1xuICAgIGNvbnN0IGNvbWJpbmVMTE1DaGFpbiA9IG5ldyBMTE1DaGFpbih7XG4gICAgICAgIHByb21wdDogY29tYmluZVByb21wdCxcbiAgICAgICAgbGxtOiBjb21iaW5lTExNID8/IGxsbSxcbiAgICAgICAgdmVyYm9zZSxcbiAgICB9KTtcbiAgICBjb25zdCBjb21iaW5lRG9jdW1lbnRDaGFpbiA9IG5ldyBTdHVmZkRvY3VtZW50c0NoYWluKHtcbiAgICAgICAgbGxtQ2hhaW46IGNvbWJpbmVMTE1DaGFpbixcbiAgICAgICAgZG9jdW1lbnRWYXJpYWJsZU5hbWU6IFwic3VtbWFyaWVzXCIsXG4gICAgICAgIHZlcmJvc2UsXG4gICAgfSk7XG4gICAgY29uc3QgY2hhaW4gPSBuZXcgTWFwUmVkdWNlRG9jdW1lbnRzQ2hhaW4oe1xuICAgICAgICBsbG1DaGFpbixcbiAgICAgICAgY29tYmluZURvY3VtZW50Q2hhaW4sXG4gICAgICAgIHJldHVybkludGVybWVkaWF0ZVN0ZXBzLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIHJldHVybiBjaGFpbjtcbn1cbi8qKlxuICogTG9hZHMgYSBSZWZpbmVRQUNoYWluIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBwYXJhbWV0ZXJzLiBJdCB0YWtlcyBhbiBMTE1cbiAqIGluc3RhbmNlIGFuZCBSZWZpbmVRQUNoYWluUGFyYW1zIGFzIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gbGxtIEFuIGluc3RhbmNlIG9mIEJhc2VMYW5ndWFnZU1vZGVsLlxuICogQHBhcmFtIHBhcmFtcyBQYXJhbWV0ZXJzIGZvciBjcmVhdGluZyBhIFJlZmluZVFBQ2hhaW4uXG4gKiBAcmV0dXJucyBBIFJlZmluZVFBQ2hhaW4gaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2FkUUFSZWZpbmVDaGFpbihsbG0sIHBhcmFtcyA9IHt9KSB7XG4gICAgY29uc3QgeyBxdWVzdGlvblByb21wdCA9IFFVRVNUSU9OX1BST01QVF9TRUxFQ1RPUi5nZXRQcm9tcHQobGxtKSwgcmVmaW5lUHJvbXB0ID0gUkVGSU5FX1BST01QVF9TRUxFQ1RPUi5nZXRQcm9tcHQobGxtKSwgcmVmaW5lTExNLCB2ZXJib3NlLCB9ID0gcGFyYW1zO1xuICAgIGNvbnN0IGxsbUNoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0OiBxdWVzdGlvblByb21wdCwgbGxtLCB2ZXJib3NlIH0pO1xuICAgIGNvbnN0IHJlZmluZUxMTUNoYWluID0gbmV3IExMTUNoYWluKHtcbiAgICAgICAgcHJvbXB0OiByZWZpbmVQcm9tcHQsXG4gICAgICAgIGxsbTogcmVmaW5lTExNID8/IGxsbSxcbiAgICAgICAgdmVyYm9zZSxcbiAgICB9KTtcbiAgICBjb25zdCBjaGFpbiA9IG5ldyBSZWZpbmVEb2N1bWVudHNDaGFpbih7XG4gICAgICAgIGxsbUNoYWluLFxuICAgICAgICByZWZpbmVMTE1DaGFpbixcbiAgICAgICAgdmVyYm9zZSxcbiAgICB9KTtcbiAgICByZXR1cm4gY2hhaW47XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/load.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMBINE_PROMPT: () => (/* binding */ COMBINE_PROMPT),\n/* harmony export */   COMBINE_PROMPT_SELECTOR: () => (/* binding */ COMBINE_PROMPT_SELECTOR),\n/* harmony export */   COMBINE_QA_PROMPT_SELECTOR: () => (/* binding */ COMBINE_QA_PROMPT_SELECTOR),\n/* harmony export */   DEFAULT_COMBINE_QA_PROMPT: () => (/* binding */ DEFAULT_COMBINE_QA_PROMPT)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst qa_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:`;\nconst DEFAULT_COMBINE_QA_PROMPT = \n/*#__PURE__*/\n_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(qa_template);\nconst system_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QA_PROMPT = /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst COMBINE_QA_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_COMBINE_QA_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_QA_PROMPT],\n]);\nconst combine_prompt = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia’s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won’t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet’s use this moment to reset. Let’s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet’s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can’t change how divided we’ve been. But we can change how we move forward—on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who’d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I’ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I’m taking robust action to make sure the pain of our sanctions  is targeted at Russia’s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what’s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt’s based on DARPA—the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose—to drive breakthroughs in cancer, Alzheimer’s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans—tonight , we have gathered in a sacred space—the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:`;\nconst COMBINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(combine_prompt);\nconst system_combine_template = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n----------------\n{summaries}`;\nconst combine_messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_combine_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_COMBINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(combine_messages);\nconst COMBINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(COMBINE_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_COMBINE_PROMPT],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/refine_prompts.js":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/refine_prompts.js ***!
  \*****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_QUESTION_PROMPT: () => (/* binding */ CHAT_QUESTION_PROMPT),\n/* harmony export */   CHAT_REFINE_PROMPT: () => (/* binding */ CHAT_REFINE_PROMPT),\n/* harmony export */   DEFAULT_REFINE_PROMPT: () => (/* binding */ DEFAULT_REFINE_PROMPT),\n/* harmony export */   DEFAULT_REFINE_PROMPT_TMPL: () => (/* binding */ DEFAULT_REFINE_PROMPT_TMPL),\n/* harmony export */   DEFAULT_TEXT_QA_PROMPT: () => (/* binding */ DEFAULT_TEXT_QA_PROMPT),\n/* harmony export */   DEFAULT_TEXT_QA_PROMPT_TMPL: () => (/* binding */ DEFAULT_TEXT_QA_PROMPT_TMPL),\n/* harmony export */   QUESTION_PROMPT_SELECTOR: () => (/* binding */ QUESTION_PROMPT_SELECTOR),\n/* harmony export */   REFINE_PROMPT_SELECTOR: () => (/* binding */ REFINE_PROMPT_SELECTOR)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst DEFAULT_REFINE_PROMPT_TMPL = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst DEFAULT_REFINE_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"question\", \"existing_answer\", \"context\"],\n    template: DEFAULT_REFINE_PROMPT_TMPL,\n});\nconst refineTemplate = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.AIMessagePromptTemplate.fromTemplate(\"{existing_answer}\"),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(refineTemplate),\n];\nconst CHAT_REFINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst REFINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_REFINE_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_REFINE_PROMPT],\n]);\nconst DEFAULT_TEXT_QA_PROMPT_TMPL = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and no prior knowledge, answer the question: {question}`;\nconst DEFAULT_TEXT_QA_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"context\", \"question\"],\n    template: DEFAULT_TEXT_QA_PROMPT_TMPL,\n});\nconst chat_qa_prompt_template = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and no prior knowledge, answer any questions`;\nconst chat_messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(chat_qa_prompt_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QUESTION_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(chat_messages);\nconst QUESTION_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_TEXT_QA_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_QUESTION_PROMPT],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL3JlZmluZV9wcm9tcHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNnSztBQUNwRTtBQUNyRiwwRUFBMEU7QUFDakYsc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDTyxnREFBZ0QsbUVBQWM7QUFDckU7QUFDQTtBQUNBLENBQUM7QUFDRCw4REFBOEQ7QUFDOUQsc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwrRUFBMEIsZ0JBQWdCLFNBQVM7QUFDckUsa0JBQWtCLDRFQUF1QixnQkFBZ0IsZ0JBQWdCO0FBQ3pFLGtCQUFrQiwrRUFBMEI7QUFDNUM7QUFDTztBQUNQLGNBQWMsdUVBQWtCO0FBQ3pCO0FBQ1Asa0JBQWtCLHdGQUF5QjtBQUMzQyxLQUFLLDBFQUFXO0FBQ2hCO0FBQ087QUFDUDtBQUNBLENBQUM7QUFDRDtBQUNBLDRFQUE0RSxTQUFTO0FBQzlFLGlEQUFpRCxtRUFBYztBQUN0RTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdGQUEyQjtBQUM3QyxrQkFBa0IsK0VBQTBCLGdCQUFnQixTQUFTO0FBQ3JFO0FBQ087QUFDUCxjQUFjLHVFQUFrQjtBQUN6QjtBQUNQLGtCQUFrQix3RkFBeUI7QUFDM0MsS0FBSywwRUFBVztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL3JlZmluZV9wcm9tcHRzLmpzPzY5YTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgc3BhY2VkLWNvbW1lbnQgKi9cbmltcG9ydCB7IFByb21wdFRlbXBsYXRlLCBDaGF0UHJvbXB0VGVtcGxhdGUsIFN5c3RlbU1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUsIEFJTWVzc2FnZVByb21wdFRlbXBsYXRlLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvciwgaXNDaGF0TW9kZWwsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9leGFtcGxlX3NlbGVjdG9yc1wiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVGSU5FX1BST01QVF9UTVBMID0gYFRoZSBvcmlnaW5hbCBxdWVzdGlvbiBpcyBhcyBmb2xsb3dzOiB7cXVlc3Rpb259XG5XZSBoYXZlIHByb3ZpZGVkIGFuIGV4aXN0aW5nIGFuc3dlcjoge2V4aXN0aW5nX2Fuc3dlcn1cbldlIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIHJlZmluZSB0aGUgZXhpc3RpbmcgYW5zd2VyXG4ob25seSBpZiBuZWVkZWQpIHdpdGggc29tZSBtb3JlIGNvbnRleHQgYmVsb3cuXG4tLS0tLS0tLS0tLS1cbntjb250ZXh0fVxuLS0tLS0tLS0tLS0tXG5HaXZlbiB0aGUgbmV3IGNvbnRleHQsIHJlZmluZSB0aGUgb3JpZ2luYWwgYW5zd2VyIHRvIGJldHRlciBhbnN3ZXIgdGhlIHF1ZXN0aW9uLiBcbklmIHRoZSBjb250ZXh0IGlzbid0IHVzZWZ1bCwgcmV0dXJuIHRoZSBvcmlnaW5hbCBhbnN3ZXIuYDtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFRklORV9QUk9NUFQgPSAvKiNfX1BVUkVfXyovIG5ldyBQcm9tcHRUZW1wbGF0ZSh7XG4gICAgaW5wdXRWYXJpYWJsZXM6IFtcInF1ZXN0aW9uXCIsIFwiZXhpc3RpbmdfYW5zd2VyXCIsIFwiY29udGV4dFwiXSxcbiAgICB0ZW1wbGF0ZTogREVGQVVMVF9SRUZJTkVfUFJPTVBUX1RNUEwsXG59KTtcbmNvbnN0IHJlZmluZVRlbXBsYXRlID0gYFRoZSBvcmlnaW5hbCBxdWVzdGlvbiBpcyBhcyBmb2xsb3dzOiB7cXVlc3Rpb259XG5XZSBoYXZlIHByb3ZpZGVkIGFuIGV4aXN0aW5nIGFuc3dlcjoge2V4aXN0aW5nX2Fuc3dlcn1cbldlIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIHJlZmluZSB0aGUgZXhpc3RpbmcgYW5zd2VyXG4ob25seSBpZiBuZWVkZWQpIHdpdGggc29tZSBtb3JlIGNvbnRleHQgYmVsb3cuXG4tLS0tLS0tLS0tLS1cbntjb250ZXh0fVxuLS0tLS0tLS0tLS0tXG5HaXZlbiB0aGUgbmV3IGNvbnRleHQsIHJlZmluZSB0aGUgb3JpZ2luYWwgYW5zd2VyIHRvIGJldHRlciBhbnN3ZXIgdGhlIHF1ZXN0aW9uLiBcbklmIHRoZSBjb250ZXh0IGlzbid0IHVzZWZ1bCwgcmV0dXJuIHRoZSBvcmlnaW5hbCBhbnN3ZXIuYDtcbmNvbnN0IG1lc3NhZ2VzID0gW1xuICAgIC8qI19fUFVSRV9fKi8gSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie3F1ZXN0aW9ufVwiKSxcbiAgICAvKiNfX1BVUkVfXyovIEFJTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShcIntleGlzdGluZ19hbnN3ZXJ9XCIpLFxuICAgIC8qI19fUFVSRV9fKi8gSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKHJlZmluZVRlbXBsYXRlKSxcbl07XG5leHBvcnQgY29uc3QgQ0hBVF9SRUZJTkVfUFJPTVBUID0gXG4vKiNfX1BVUkVfXyovIENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tTWVzc2FnZXMobWVzc2FnZXMpO1xuZXhwb3J0IGNvbnN0IFJFRklORV9QUk9NUFRfU0VMRUNUT1IgPSBcbi8qI19fUFVSRV9fKi8gbmV3IENvbmRpdGlvbmFsUHJvbXB0U2VsZWN0b3IoREVGQVVMVF9SRUZJTkVfUFJPTVBULCBbXG4gICAgW2lzQ2hhdE1vZGVsLCBDSEFUX1JFRklORV9QUk9NUFRdLFxuXSk7XG5leHBvcnQgY29uc3QgREVGQVVMVF9URVhUX1FBX1BST01QVF9UTVBMID0gYENvbnRleHQgaW5mb3JtYXRpb24gaXMgYmVsb3cuIFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG57Y29udGV4dH1cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuR2l2ZW4gdGhlIGNvbnRleHQgaW5mb3JtYXRpb24gYW5kIG5vIHByaW9yIGtub3dsZWRnZSwgYW5zd2VyIHRoZSBxdWVzdGlvbjoge3F1ZXN0aW9ufWA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9URVhUX1FBX1BST01QVCA9IC8qI19fUFVSRV9fKi8gbmV3IFByb21wdFRlbXBsYXRlKHtcbiAgICBpbnB1dFZhcmlhYmxlczogW1wiY29udGV4dFwiLCBcInF1ZXN0aW9uXCJdLFxuICAgIHRlbXBsYXRlOiBERUZBVUxUX1RFWFRfUUFfUFJPTVBUX1RNUEwsXG59KTtcbmNvbnN0IGNoYXRfcWFfcHJvbXB0X3RlbXBsYXRlID0gYENvbnRleHQgaW5mb3JtYXRpb24gaXMgYmVsb3cuIFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG57Y29udGV4dH1cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuR2l2ZW4gdGhlIGNvbnRleHQgaW5mb3JtYXRpb24gYW5kIG5vIHByaW9yIGtub3dsZWRnZSwgYW5zd2VyIGFueSBxdWVzdGlvbnNgO1xuY29uc3QgY2hhdF9tZXNzYWdlcyA9IFtcbiAgICAvKiNfX1BVUkVfXyovIFN5c3RlbU1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoY2hhdF9xYV9wcm9tcHRfdGVtcGxhdGUpLFxuICAgIC8qI19fUFVSRV9fKi8gSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie3F1ZXN0aW9ufVwiKSxcbl07XG5leHBvcnQgY29uc3QgQ0hBVF9RVUVTVElPTl9QUk9NUFQgPSBcbi8qI19fUFVSRV9fKi8gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhjaGF0X21lc3NhZ2VzKTtcbmV4cG9ydCBjb25zdCBRVUVTVElPTl9QUk9NUFRfU0VMRUNUT1IgPSBcbi8qI19fUFVSRV9fKi8gbmV3IENvbmRpdGlvbmFsUHJvbXB0U2VsZWN0b3IoREVGQVVMVF9URVhUX1FBX1BST01QVCwgW1xuICAgIFtpc0NoYXRNb2RlbCwgQ0hBVF9RVUVTVElPTl9QUk9NUFRdLFxuXSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/refine_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_QA_PROMPT: () => (/* binding */ DEFAULT_QA_PROMPT),\n/* harmony export */   QA_PROMPT_SELECTOR: () => (/* binding */ QA_PROMPT_SELECTOR)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst DEFAULT_QA_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    template: \"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n{context}\\n\\nQuestion: {question}\\nHelpful Answer:\",\n    inputVariables: [\"context\", \"question\"],\n});\nconst system_template = `Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_PROMPT = /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst QA_PROMPT_SELECTOR = /*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_QA_PROMPT, [[_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_PROMPT]]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL3N0dWZmX3Byb21wdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ3VJO0FBQzNDO0FBQ3JGLDRDQUE0QyxtRUFBYztBQUNqRSxzTEFBc0wsUUFBUSxlQUFlLFNBQVM7QUFDdE47QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxRQUFRO0FBQ1Q7QUFDQSxrQkFBa0IsZ0ZBQTJCO0FBQzdDLGtCQUFrQiwrRUFBMEIsZ0JBQWdCLFNBQVM7QUFDckU7QUFDQSxrQ0FBa0MsdUVBQWtCO0FBQzdDLDZDQUE2Qyx3RkFBeUIsc0JBQXNCLDBFQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2NoYWlucy9xdWVzdGlvbl9hbnN3ZXJpbmcvc3R1ZmZfcHJvbXB0cy5qcz84ZGQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHNwYWNlZC1jb21tZW50ICovXG5pbXBvcnQgeyBDaGF0UHJvbXB0VGVtcGxhdGUsIFN5c3RlbU1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUsIFByb21wdFRlbXBsYXRlLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvciwgaXNDaGF0TW9kZWwsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9leGFtcGxlX3NlbGVjdG9yc1wiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUUFfUFJPTVBUID0gLyojX19QVVJFX18qLyBuZXcgUHJvbXB0VGVtcGxhdGUoe1xuICAgIHRlbXBsYXRlOiBcIlVzZSB0aGUgZm9sbG93aW5nIHBpZWNlcyBvZiBjb250ZXh0IHRvIGFuc3dlciB0aGUgcXVlc3Rpb24gYXQgdGhlIGVuZC4gSWYgeW91IGRvbid0IGtub3cgdGhlIGFuc3dlciwganVzdCBzYXkgdGhhdCB5b3UgZG9uJ3Qga25vdywgZG9uJ3QgdHJ5IHRvIG1ha2UgdXAgYW4gYW5zd2VyLlxcblxcbntjb250ZXh0fVxcblxcblF1ZXN0aW9uOiB7cXVlc3Rpb259XFxuSGVscGZ1bCBBbnN3ZXI6XCIsXG4gICAgaW5wdXRWYXJpYWJsZXM6IFtcImNvbnRleHRcIiwgXCJxdWVzdGlvblwiXSxcbn0pO1xuY29uc3Qgc3lzdGVtX3RlbXBsYXRlID0gYFVzZSB0aGUgZm9sbG93aW5nIHBpZWNlcyBvZiBjb250ZXh0IHRvIGFuc3dlciB0aGUgdXNlcnMgcXVlc3Rpb24uIFxuSWYgeW91IGRvbid0IGtub3cgdGhlIGFuc3dlciwganVzdCBzYXkgdGhhdCB5b3UgZG9uJ3Qga25vdywgZG9uJ3QgdHJ5IHRvIG1ha2UgdXAgYW4gYW5zd2VyLlxuLS0tLS0tLS0tLS0tLS0tLVxue2NvbnRleHR9YDtcbmNvbnN0IG1lc3NhZ2VzID0gW1xuICAgIC8qI19fUFVSRV9fKi8gU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShzeXN0ZW1fdGVtcGxhdGUpLFxuICAgIC8qI19fUFVSRV9fKi8gSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie3F1ZXN0aW9ufVwiKSxcbl07XG5jb25zdCBDSEFUX1BST01QVCA9IC8qI19fUFVSRV9fKi8gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhtZXNzYWdlcyk7XG5leHBvcnQgY29uc3QgUUFfUFJPTVBUX1NFTEVDVE9SID0gLyojX19QVVJFX18qLyBuZXcgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvcihERUZBVUxUX1FBX1BST01QVCwgW1tpc0NoYXRNb2RlbCwgQ0hBVF9QUk9NUFRdXSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/sequential_chain.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/sequential_chain.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SequentialChain: () => (/* binding */ SequentialChain),\n/* harmony export */   SimpleSequentialChain: () => (/* binding */ SimpleSequentialChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _util_set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/set.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/set.js\");\n\n\nfunction formatSet(input) {\n    return Array.from(input)\n        .map((i) => `\"${i}\"`)\n        .join(\", \");\n}\n/**\n * Chain where the outputs of one chain feed directly into next.\n * @example\n * ```typescript\n * const promptTemplate = new PromptTemplate({\n *   template: `You are a playwright. Given the title of play and the era it is set in, it is your job to write a synopsis for that title.\n * Title: {title}\n * Era: {era}\n * Playwright: This is a synopsis for the above play:`,\n *   inputVariables: [\"title\", \"era\"],\n * });\n\n * const reviewPromptTemplate = new PromptTemplate({\n *   template: `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n *     Play Synopsis:\n *     {synopsis}\n *     Review from a New York Times play critic of the above play:`,\n *   inputVariables: [\"synopsis\"],\n * });\n\n * const overallChain = new SequentialChain({\n *   chains: [\n *     new LLMChain({\n *       llm: new ChatOpenAI({ temperature: 0 }),\n *       prompt: promptTemplate,\n *       outputKey: \"synopsis\",\n *     }),\n *     new LLMChain({\n *       llm: new OpenAI({ temperature: 0 }),\n *       prompt: reviewPromptTemplate,\n *       outputKey: \"review\",\n *     }),\n *   ],\n *   inputVariables: [\"era\", \"title\"],\n *   outputVariables: [\"synopsis\", \"review\"],\n *   verbose: true,\n * });\n\n * const chainExecutionResult = await overallChain.call({\n *   title: \"Tragedy at sunset on the beach\",\n *   era: \"Victorian England\",\n * });\n * console.log(chainExecutionResult);\n * ```\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/expression_language/ | expression language}.\n * Will be removed in 0.2.0\n */\nclass SequentialChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"SequentialChain\";\n    }\n    get inputKeys() {\n        return this.inputVariables;\n    }\n    get outputKeys() {\n        return this.outputVariables;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnAll\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.inputVariables = fields.inputVariables;\n        this.outputVariables = fields.outputVariables ?? [];\n        if (this.outputVariables.length > 0 && fields.returnAll) {\n            throw new Error(\"Either specify variables to return using `outputVariables` or use `returnAll` param. Cannot apply both conditions at the same time.\");\n        }\n        this.returnAll = fields.returnAll ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        if (this.chains.length === 0) {\n            throw new Error(\"Sequential chain must have at least one chain.\");\n        }\n        const memoryKeys = this.memory?.memoryKeys ?? [];\n        const inputKeysSet = new Set(this.inputKeys);\n        const memoryKeysSet = new Set(memoryKeys);\n        const keysIntersection = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(inputKeysSet, memoryKeysSet);\n        if (keysIntersection.size > 0) {\n            throw new Error(`The following keys: ${formatSet(keysIntersection)} are overlapping between memory and input keys of the chain variables. This can lead to unexpected behaviour. Please use input and memory keys that don't overlap.`);\n        }\n        const availableKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.union)(inputKeysSet, memoryKeysSet);\n        for (const chain of this.chains) {\n            let missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(new Set(chain.inputKeys), availableKeys);\n            if (chain.memory) {\n                missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(missingKeys, new Set(chain.memory.memoryKeys));\n            }\n            if (missingKeys.size > 0) {\n                throw new Error(`Missing variables for chain \"${chain._chainType()}\": ${formatSet(missingKeys)}. Only got the following variables: ${formatSet(availableKeys)}.`);\n            }\n            const outputKeysSet = new Set(chain.outputKeys);\n            const overlappingOutputKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(availableKeys, outputKeysSet);\n            if (overlappingOutputKeys.size > 0) {\n                throw new Error(`The following output variables for chain \"${chain._chainType()}\" are overlapping: ${formatSet(overlappingOutputKeys)}. This can lead to unexpected behaviour.`);\n            }\n            for (const outputKey of outputKeysSet) {\n                availableKeys.add(outputKey);\n            }\n        }\n        if (this.outputVariables.length === 0) {\n            if (this.returnAll) {\n                const outputKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(availableKeys, inputKeysSet);\n                this.outputVariables = Array.from(outputKeys);\n            }\n            else {\n                this.outputVariables = this.chains[this.chains.length - 1].outputKeys;\n            }\n        }\n        else {\n            const missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(new Set(this.outputVariables), new Set(availableKeys));\n            if (missingKeys.size > 0) {\n                throw new Error(`The following output variables were expected to be in the final chain output but were not found: ${formatSet(missingKeys)}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = {};\n        const allChainValues = values;\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = await chain.call(allChainValues, runManager?.getChild(`step_${i}`));\n            for (const key of Object.keys(input)) {\n                allChainValues[key] = input[key];\n            }\n        }\n        const output = {};\n        for (const key of this.outputVariables) {\n            output[key] = allChainValues[key];\n        }\n        return output;\n    }\n    _chainType() {\n        return \"sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const inputVariables = data.input_variables;\n        const outputVariables = data.output_variables;\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SequentialChain({ chains, inputVariables, outputVariables });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            input_variables: this.inputVariables,\n            output_variables: this.outputVariables,\n            chains,\n        };\n    }\n}\n/**\n * @deprecated Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Simple chain where a single string output of one chain is fed directly into the next.\n * @augments BaseChain\n * @augments SimpleSequentialChainInput\n *\n * @example\n * ```ts\n * import { SimpleSequentialChain, LLMChain } from \"langchain/chains\";\n * import { OpenAI } from \"langchain/llms/openai\";\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * // This is an LLMChain to write a synopsis given a title of a play.\n * const llm = new OpenAI({ temperature: 0 });\n * const template = `You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\n *\n * Title: {title}\n * Playwright: This is a synopsis for the above play:`\n * const promptTemplate = new PromptTemplate({ template, inputVariables: [\"title\"] });\n * const synopsisChain = new LLMChain({ llm, prompt: promptTemplate });\n *\n *\n * // This is an LLMChain to write a review of a play given a synopsis.\n * const reviewLLM = new OpenAI({ temperature: 0 })\n * const reviewTemplate = `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n * Play Synopsis:\n * {synopsis}\n * Review from a New York Times play critic of the above play:`\n * const reviewPromptTemplate = new PromptTemplate({ template: reviewTemplate, inputVariables: [\"synopsis\"] });\n * const reviewChain = new LLMChain({ llm: reviewLLM, prompt: reviewPromptTemplate });\n *\n * const overallChain = new SimpleSequentialChain({chains: [synopsisChain, reviewChain], verbose:true})\n * const review = await overallChain.run(\"Tragedy at sunset on the beach\")\n * // the variable review contains resulting play review.\n * ```\n */\nclass SimpleSequentialChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"SimpleSequentialChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"trimOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.trimOutputs = fields.trimOutputs ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        for (const chain of this.chains) {\n            if (chain.inputKeys.filter((k) => !chain.memory?.memoryKeys.includes(k) ?? true).length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one input, got ${chain.inputKeys.length} for ${chain._chainType()}.`);\n            }\n            if (chain.outputKeys.length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one output, got ${chain.outputKeys.length} for ${chain._chainType()}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = values[this.inputKey];\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = (await chain.call({ [chain.inputKeys[0]]: input, signal: values.signal }, runManager?.getChild(`step_${i}`)))[chain.outputKeys[0]];\n            if (this.trimOutputs) {\n                input = input.trim();\n            }\n            await runManager?.handleText(input);\n        }\n        return { [this.outputKey]: input };\n    }\n    _chainType() {\n        return \"simple_sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SimpleSequentialChain({ chains });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            chains,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/sequential_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/vector_db_qa.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/vector_db_qa.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorDBQAChain: () => (/* binding */ VectorDBQAChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _question_answering_load_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./question_answering/load.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/question_answering/load.js\");\n\n\n/**\n * Class that represents a VectorDBQAChain. It extends the `BaseChain`\n * class and implements the `VectorDBQAChainInput` interface. It performs\n * a similarity search using a vector store and combines the search\n * results using a specified combine documents chain.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/modules/chains/ | createRetrievalChain}\n * Will be removed in 0.2.0\n */\nclass VectorDBQAChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"VectorDBQAChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.vectorstore = fields.vectorstore;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.k = fields.k ?? this.k;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.vectorstore.similaritySearch(question, this.k, values.filter, runManager?.getChild(\"vectorstore\"));\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"vector_db_qa\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"vectorstore\" in values)) {\n            throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n        }\n        const { vectorstore } = values;\n        if (!data.combine_documents_chain) {\n            throw new Error(`VectorDBQAChain must have combine_documents_chain in serialized data`);\n        }\n        return new VectorDBQAChain({\n            combineDocumentsChain: await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(data.combine_documents_chain),\n            k: data.k,\n            vectorstore,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_documents_chain: this.combineDocumentsChain.serialize(),\n            k: this.k,\n        };\n    }\n    /**\n     * Static method that creates a VectorDBQAChain instance from a\n     * BaseLanguageModel and a vector store. It also accepts optional options\n     * to customize the chain.\n     * @param llm The BaseLanguageModel instance.\n     * @param vectorstore The vector store used for similarity search.\n     * @param options Optional options to customize the chain.\n     * @returns A new instance of VectorDBQAChain.\n     */\n    static fromLLM(llm, vectorstore, options) {\n        const qaChain = (0,_question_answering_load_js__WEBPACK_IMPORTED_MODULE_1__.loadQAStuffChain)(llm);\n        return new this({\n            vectorstore,\n            combineDocumentsChain: qaChain,\n            ...options,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvdmVjdG9yX2RiX3FhLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUMwQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ08sOEJBQThCLCtDQUFTO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsZUFBZTtBQUMzRDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywrQ0FBUztBQUNsRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2RUFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvdmVjdG9yX2RiX3FhLmpzP2Y0MzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUNoYWluIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuaW1wb3J0IHsgbG9hZFFBU3R1ZmZDaGFpbiB9IGZyb20gXCIuL3F1ZXN0aW9uX2Fuc3dlcmluZy9sb2FkLmpzXCI7XG4vKipcbiAqIENsYXNzIHRoYXQgcmVwcmVzZW50cyBhIFZlY3RvckRCUUFDaGFpbi4gSXQgZXh0ZW5kcyB0aGUgYEJhc2VDaGFpbmBcbiAqIGNsYXNzIGFuZCBpbXBsZW1lbnRzIHRoZSBgVmVjdG9yREJRQUNoYWluSW5wdXRgIGludGVyZmFjZS4gSXQgcGVyZm9ybXNcbiAqIGEgc2ltaWxhcml0eSBzZWFyY2ggdXNpbmcgYSB2ZWN0b3Igc3RvcmUgYW5kIGNvbWJpbmVzIHRoZSBzZWFyY2hcbiAqIHJlc3VsdHMgdXNpbmcgYSBzcGVjaWZpZWQgY29tYmluZSBkb2N1bWVudHMgY2hhaW4uXG4gKlxuICogQGRlcHJlY2F0ZWRcbiAqIFN3aXRjaCB0byB7QGxpbmsgaHR0cHM6Ly9qcy5sYW5nY2hhaW4uY29tL2RvY3MvbW9kdWxlcy9jaGFpbnMvIHwgY3JlYXRlUmV0cmlldmFsQ2hhaW59XG4gKiBXaWxsIGJlIHJlbW92ZWQgaW4gMC4yLjBcbiAqL1xuZXhwb3J0IGNsYXNzIFZlY3RvckRCUUFDaGFpbiBleHRlbmRzIEJhc2VDaGFpbiB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlZlY3RvckRCUUFDaGFpblwiO1xuICAgIH1cbiAgICBnZXQgaW5wdXRLZXlzKCkge1xuICAgICAgICByZXR1cm4gW3RoaXMuaW5wdXRLZXldO1xuICAgIH1cbiAgICBnZXQgb3V0cHV0S2V5cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tYmluZURvY3VtZW50c0NoYWluLm91dHB1dEtleXMuY29uY2F0KHRoaXMucmV0dXJuU291cmNlRG9jdW1lbnRzID8gW1wic291cmNlRG9jdW1lbnRzXCJdIDogW10pO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoZmllbGRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwia1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogNFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5wdXRLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwicXVlcnlcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmVjdG9yc3RvcmVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY29tYmluZURvY3VtZW50c0NoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJldHVyblNvdXJjZURvY3VtZW50c1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmVjdG9yc3RvcmUgPSBmaWVsZHMudmVjdG9yc3RvcmU7XG4gICAgICAgIHRoaXMuY29tYmluZURvY3VtZW50c0NoYWluID0gZmllbGRzLmNvbWJpbmVEb2N1bWVudHNDaGFpbjtcbiAgICAgICAgdGhpcy5pbnB1dEtleSA9IGZpZWxkcy5pbnB1dEtleSA/PyB0aGlzLmlucHV0S2V5O1xuICAgICAgICB0aGlzLmsgPSBmaWVsZHMuayA/PyB0aGlzLms7XG4gICAgICAgIHRoaXMucmV0dXJuU291cmNlRG9jdW1lbnRzID1cbiAgICAgICAgICAgIGZpZWxkcy5yZXR1cm5Tb3VyY2VEb2N1bWVudHMgPz8gdGhpcy5yZXR1cm5Tb3VyY2VEb2N1bWVudHM7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwodmFsdWVzLCBydW5NYW5hZ2VyKSB7XG4gICAgICAgIGlmICghKHRoaXMuaW5wdXRLZXkgaW4gdmFsdWVzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBRdWVzdGlvbiBrZXkgJHt0aGlzLmlucHV0S2V5fSBub3QgZm91bmQuYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcXVlc3Rpb24gPSB2YWx1ZXNbdGhpcy5pbnB1dEtleV07XG4gICAgICAgIGNvbnN0IGRvY3MgPSBhd2FpdCB0aGlzLnZlY3RvcnN0b3JlLnNpbWlsYXJpdHlTZWFyY2gocXVlc3Rpb24sIHRoaXMuaywgdmFsdWVzLmZpbHRlciwgcnVuTWFuYWdlcj8uZ2V0Q2hpbGQoXCJ2ZWN0b3JzdG9yZVwiKSk7XG4gICAgICAgIGNvbnN0IGlucHV0cyA9IHsgcXVlc3Rpb24sIGlucHV0X2RvY3VtZW50czogZG9jcyB9O1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmNvbWJpbmVEb2N1bWVudHNDaGFpbi5jYWxsKGlucHV0cywgcnVuTWFuYWdlcj8uZ2V0Q2hpbGQoXCJjb21iaW5lX2RvY3VtZW50c1wiKSk7XG4gICAgICAgIGlmICh0aGlzLnJldHVyblNvdXJjZURvY3VtZW50cykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5yZXN1bHQsXG4gICAgICAgICAgICAgICAgc291cmNlRG9jdW1lbnRzOiBkb2NzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBfY2hhaW5UeXBlKCkge1xuICAgICAgICByZXR1cm4gXCJ2ZWN0b3JfZGJfcWFcIjtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIGRlc2VyaWFsaXplKGRhdGEsIHZhbHVlcykge1xuICAgICAgICBpZiAoIShcInZlY3RvcnN0b3JlXCIgaW4gdmFsdWVzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBOZWVkIHRvIHBhc3MgaW4gYSB2ZWN0b3JzdG9yZSB0byBkZXNlcmlhbGl6ZSBWZWN0b3JEQlFBQ2hhaW5gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IHZlY3RvcnN0b3JlIH0gPSB2YWx1ZXM7XG4gICAgICAgIGlmICghZGF0YS5jb21iaW5lX2RvY3VtZW50c19jaGFpbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBWZWN0b3JEQlFBQ2hhaW4gbXVzdCBoYXZlIGNvbWJpbmVfZG9jdW1lbnRzX2NoYWluIGluIHNlcmlhbGl6ZWQgZGF0YWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgVmVjdG9yREJRQUNoYWluKHtcbiAgICAgICAgICAgIGNvbWJpbmVEb2N1bWVudHNDaGFpbjogYXdhaXQgQmFzZUNoYWluLmRlc2VyaWFsaXplKGRhdGEuY29tYmluZV9kb2N1bWVudHNfY2hhaW4pLFxuICAgICAgICAgICAgazogZGF0YS5rLFxuICAgICAgICAgICAgdmVjdG9yc3RvcmUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZXJpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBfdHlwZTogdGhpcy5fY2hhaW5UeXBlKCksXG4gICAgICAgICAgICBjb21iaW5lX2RvY3VtZW50c19jaGFpbjogdGhpcy5jb21iaW5lRG9jdW1lbnRzQ2hhaW4uc2VyaWFsaXplKCksXG4gICAgICAgICAgICBrOiB0aGlzLmssXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QgdGhhdCBjcmVhdGVzIGEgVmVjdG9yREJRQUNoYWluIGluc3RhbmNlIGZyb20gYVxuICAgICAqIEJhc2VMYW5ndWFnZU1vZGVsIGFuZCBhIHZlY3RvciBzdG9yZS4gSXQgYWxzbyBhY2NlcHRzIG9wdGlvbmFsIG9wdGlvbnNcbiAgICAgKiB0byBjdXN0b21pemUgdGhlIGNoYWluLlxuICAgICAqIEBwYXJhbSBsbG0gVGhlIEJhc2VMYW5ndWFnZU1vZGVsIGluc3RhbmNlLlxuICAgICAqIEBwYXJhbSB2ZWN0b3JzdG9yZSBUaGUgdmVjdG9yIHN0b3JlIHVzZWQgZm9yIHNpbWlsYXJpdHkgc2VhcmNoLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIG9wdGlvbnMgdG8gY3VzdG9taXplIHRoZSBjaGFpbi5cbiAgICAgKiBAcmV0dXJucyBBIG5ldyBpbnN0YW5jZSBvZiBWZWN0b3JEQlFBQ2hhaW4uXG4gICAgICovXG4gICAgc3RhdGljIGZyb21MTE0obGxtLCB2ZWN0b3JzdG9yZSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBxYUNoYWluID0gbG9hZFFBU3R1ZmZDaGFpbihsbG0pO1xuICAgICAgICByZXR1cm4gbmV3IHRoaXMoe1xuICAgICAgICAgICAgdmVjdG9yc3RvcmUsXG4gICAgICAgICAgICBjb21iaW5lRG9jdW1lbnRzQ2hhaW46IHFhQ2hhaW4sXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/vector_db_qa.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/buffer_memory.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/buffer_memory.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferMemory: () => (/* binding */ BufferMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _chat_memory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/chat_memory.js\");\n\n\n/**\n * The `BufferMemory` class is a type of memory component used for storing\n * and managing previous chat messages. It is a wrapper around\n * `ChatMessageHistory` that extracts the messages into an input variable.\n * This class is particularly useful in applications like chatbots where\n * it is essential to remember previous interactions. Note: The memory\n * instance represents the history of a single conversation. Therefore, it\n * is not recommended to share the same history or memory instance between\n * two different chains. If you deploy your LangChain app on a serverless\n * environment, do not store memory instances in a variable, as your\n * hosting provider may reset it by the next time the function is called.\n * @example\n * ```typescript\n * // Initialize the memory to store chat history and set up the language model with a specific temperature.\n * const memory = new BufferMemory({ memoryKey: \"chat_history\" });\n * const model = new ChatOpenAI({ temperature: 0.9 });\n *\n * // Create a prompt template for a friendly conversation between a human and an AI.\n * const prompt =\n *   PromptTemplate.fromTemplate(`The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n *\n * Current conversation:\n * {chat_history}\n * Human: {input}\n * AI:`);\n *\n * // Set up the chain with the language model, prompt, and memory.\n * const chain = new LLMChain({ llm: model, prompt, memory });\n *\n * // Example usage of the chain to continue the conversation.\n * // The `call` method sends the input to the model and returns the AI's response.\n * const res = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({ res });\n *\n * ```\n */\nclass BufferMemory extends _chat_memory_js__WEBPACK_IMPORTED_MODULE_1__.BaseChatMemory {\n    constructor(fields) {\n        super({\n            chatHistory: fields?.chatHistory,\n            returnMessages: fields?.returnMessages ?? false,\n            inputKey: fields?.inputKey,\n            outputKey: fields?.outputKey,\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        this.humanPrefix = fields?.humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = fields?.aiPrefix ?? this.aiPrefix;\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Loads the memory variables. It takes an `InputValues` object as a\n     * parameter and returns a `Promise` that resolves with a\n     * `MemoryVariables` object.\n     * @param _values `InputValues` object.\n     * @returns A `Promise` that resolves with a `MemoryVariables` object.\n     */\n    async loadMemoryVariables(_values) {\n        const messages = await this.chatHistory.getMessages();\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: messages,\n            };\n            return result;\n        }\n        const result = {\n            [this.memoryKey]: (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(messages, this.humanPrefix, this.aiPrefix),\n        };\n        return result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9tZW1vcnkvYnVmZmVyX21lbW9yeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkQ7QUFDVDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDJCQUEyQjtBQUNoRSxrQ0FBa0Msa0JBQWtCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDRCQUE0QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsdUJBQXVCO0FBQ3pELGlCQUFpQixLQUFLO0FBQ3RCO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQiwyREFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5RUFBZTtBQUM3QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9tZW1vcnkvYnVmZmVyX21lbW9yeS5qcz81MDM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEJ1ZmZlclN0cmluZyB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbmltcG9ydCB7IEJhc2VDaGF0TWVtb3J5IH0gZnJvbSBcIi4vY2hhdF9tZW1vcnkuanNcIjtcbi8qKlxuICogVGhlIGBCdWZmZXJNZW1vcnlgIGNsYXNzIGlzIGEgdHlwZSBvZiBtZW1vcnkgY29tcG9uZW50IHVzZWQgZm9yIHN0b3JpbmdcbiAqIGFuZCBtYW5hZ2luZyBwcmV2aW91cyBjaGF0IG1lc3NhZ2VzLiBJdCBpcyBhIHdyYXBwZXIgYXJvdW5kXG4gKiBgQ2hhdE1lc3NhZ2VIaXN0b3J5YCB0aGF0IGV4dHJhY3RzIHRoZSBtZXNzYWdlcyBpbnRvIGFuIGlucHV0IHZhcmlhYmxlLlxuICogVGhpcyBjbGFzcyBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGluIGFwcGxpY2F0aW9ucyBsaWtlIGNoYXRib3RzIHdoZXJlXG4gKiBpdCBpcyBlc3NlbnRpYWwgdG8gcmVtZW1iZXIgcHJldmlvdXMgaW50ZXJhY3Rpb25zLiBOb3RlOiBUaGUgbWVtb3J5XG4gKiBpbnN0YW5jZSByZXByZXNlbnRzIHRoZSBoaXN0b3J5IG9mIGEgc2luZ2xlIGNvbnZlcnNhdGlvbi4gVGhlcmVmb3JlLCBpdFxuICogaXMgbm90IHJlY29tbWVuZGVkIHRvIHNoYXJlIHRoZSBzYW1lIGhpc3Rvcnkgb3IgbWVtb3J5IGluc3RhbmNlIGJldHdlZW5cbiAqIHR3byBkaWZmZXJlbnQgY2hhaW5zLiBJZiB5b3UgZGVwbG95IHlvdXIgTGFuZ0NoYWluIGFwcCBvbiBhIHNlcnZlcmxlc3NcbiAqIGVudmlyb25tZW50LCBkbyBub3Qgc3RvcmUgbWVtb3J5IGluc3RhbmNlcyBpbiBhIHZhcmlhYmxlLCBhcyB5b3VyXG4gKiBob3N0aW5nIHByb3ZpZGVyIG1heSByZXNldCBpdCBieSB0aGUgbmV4dCB0aW1lIHRoZSBmdW5jdGlvbiBpcyBjYWxsZWQuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogLy8gSW5pdGlhbGl6ZSB0aGUgbWVtb3J5IHRvIHN0b3JlIGNoYXQgaGlzdG9yeSBhbmQgc2V0IHVwIHRoZSBsYW5ndWFnZSBtb2RlbCB3aXRoIGEgc3BlY2lmaWMgdGVtcGVyYXR1cmUuXG4gKiBjb25zdCBtZW1vcnkgPSBuZXcgQnVmZmVyTWVtb3J5KHsgbWVtb3J5S2V5OiBcImNoYXRfaGlzdG9yeVwiIH0pO1xuICogY29uc3QgbW9kZWwgPSBuZXcgQ2hhdE9wZW5BSSh7IHRlbXBlcmF0dXJlOiAwLjkgfSk7XG4gKlxuICogLy8gQ3JlYXRlIGEgcHJvbXB0IHRlbXBsYXRlIGZvciBhIGZyaWVuZGx5IGNvbnZlcnNhdGlvbiBiZXR3ZWVuIGEgaHVtYW4gYW5kIGFuIEFJLlxuICogY29uc3QgcHJvbXB0ID1cbiAqICAgUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKGBUaGUgZm9sbG93aW5nIGlzIGEgZnJpZW5kbHkgY29udmVyc2F0aW9uIGJldHdlZW4gYSBodW1hbiBhbmQgYW4gQUkuIFRoZSBBSSBpcyB0YWxrYXRpdmUgYW5kIHByb3ZpZGVzIGxvdHMgb2Ygc3BlY2lmaWMgZGV0YWlscyBmcm9tIGl0cyBjb250ZXh0LiBJZiB0aGUgQUkgZG9lcyBub3Qga25vdyB0aGUgYW5zd2VyIHRvIGEgcXVlc3Rpb24sIGl0IHRydXRoZnVsbHkgc2F5cyBpdCBkb2VzIG5vdCBrbm93LlxuICpcbiAqIEN1cnJlbnQgY29udmVyc2F0aW9uOlxuICoge2NoYXRfaGlzdG9yeX1cbiAqIEh1bWFuOiB7aW5wdXR9XG4gKiBBSTpgKTtcbiAqXG4gKiAvLyBTZXQgdXAgdGhlIGNoYWluIHdpdGggdGhlIGxhbmd1YWdlIG1vZGVsLCBwcm9tcHQsIGFuZCBtZW1vcnkuXG4gKiBjb25zdCBjaGFpbiA9IG5ldyBMTE1DaGFpbih7IGxsbTogbW9kZWwsIHByb21wdCwgbWVtb3J5IH0pO1xuICpcbiAqIC8vIEV4YW1wbGUgdXNhZ2Ugb2YgdGhlIGNoYWluIHRvIGNvbnRpbnVlIHRoZSBjb252ZXJzYXRpb24uXG4gKiAvLyBUaGUgYGNhbGxgIG1ldGhvZCBzZW5kcyB0aGUgaW5wdXQgdG8gdGhlIG1vZGVsIGFuZCByZXR1cm5zIHRoZSBBSSdzIHJlc3BvbnNlLlxuICogY29uc3QgcmVzID0gYXdhaXQgY2hhaW4uY2FsbCh7IGlucHV0OiBcIkhpISBJJ20gSmltLlwiIH0pO1xuICogY29uc29sZS5sb2coeyByZXMgfSk7XG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBCdWZmZXJNZW1vcnkgZXh0ZW5kcyBCYXNlQ2hhdE1lbW9yeSB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGNoYXRIaXN0b3J5OiBmaWVsZHM/LmNoYXRIaXN0b3J5LFxuICAgICAgICAgICAgcmV0dXJuTWVzc2FnZXM6IGZpZWxkcz8ucmV0dXJuTWVzc2FnZXMgPz8gZmFsc2UsXG4gICAgICAgICAgICBpbnB1dEtleTogZmllbGRzPy5pbnB1dEtleSxcbiAgICAgICAgICAgIG91dHB1dEtleTogZmllbGRzPy5vdXRwdXRLZXksXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJodW1hblByZWZpeFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJIdW1hblwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJhaVByZWZpeFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJBSVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtZW1vcnlLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwiaGlzdG9yeVwiXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmh1bWFuUHJlZml4ID0gZmllbGRzPy5odW1hblByZWZpeCA/PyB0aGlzLmh1bWFuUHJlZml4O1xuICAgICAgICB0aGlzLmFpUHJlZml4ID0gZmllbGRzPy5haVByZWZpeCA/PyB0aGlzLmFpUHJlZml4O1xuICAgICAgICB0aGlzLm1lbW9yeUtleSA9IGZpZWxkcz8ubWVtb3J5S2V5ID8/IHRoaXMubWVtb3J5S2V5O1xuICAgIH1cbiAgICBnZXQgbWVtb3J5S2V5cygpIHtcbiAgICAgICAgcmV0dXJuIFt0aGlzLm1lbW9yeUtleV07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExvYWRzIHRoZSBtZW1vcnkgdmFyaWFibGVzLiBJdCB0YWtlcyBhbiBgSW5wdXRWYWx1ZXNgIG9iamVjdCBhcyBhXG4gICAgICogcGFyYW1ldGVyIGFuZCByZXR1cm5zIGEgYFByb21pc2VgIHRoYXQgcmVzb2x2ZXMgd2l0aCBhXG4gICAgICogYE1lbW9yeVZhcmlhYmxlc2Agb2JqZWN0LlxuICAgICAqIEBwYXJhbSBfdmFsdWVzIGBJbnB1dFZhbHVlc2Agb2JqZWN0LlxuICAgICAqIEByZXR1cm5zIEEgYFByb21pc2VgIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGBNZW1vcnlWYXJpYWJsZXNgIG9iamVjdC5cbiAgICAgKi9cbiAgICBhc3luYyBsb2FkTWVtb3J5VmFyaWFibGVzKF92YWx1ZXMpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZXMgPSBhd2FpdCB0aGlzLmNoYXRIaXN0b3J5LmdldE1lc3NhZ2VzKCk7XG4gICAgICAgIGlmICh0aGlzLnJldHVybk1lc3NhZ2VzKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgW3RoaXMubWVtb3J5S2V5XTogbWVzc2FnZXMsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgICBbdGhpcy5tZW1vcnlLZXldOiBnZXRCdWZmZXJTdHJpbmcobWVzc2FnZXMsIHRoaXMuaHVtYW5QcmVmaXgsIHRoaXMuYWlQcmVmaXgpLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/buffer_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/chat_memory.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/chat_memory.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChatMemory: () => (/* binding */ BaseChatMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/memory */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/memory.js\");\n/* harmony import */ var _stores_message_in_memory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stores/message/in_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/stores/message/in_memory.js\");\n\n\n/**\n * Abstract class that provides a base for implementing different types of\n * memory systems. It is designed to maintain the state of an application,\n * specifically the history of a conversation. This class is typically\n * extended by other classes to create specific types of memory systems.\n */\nclass BaseChatMemory extends _langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.BaseMemory {\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"chatHistory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chatHistory = fields?.chatHistory ?? new _stores_message_in_memory_js__WEBPACK_IMPORTED_MODULE_1__.ChatMessageHistory();\n        this.returnMessages = fields?.returnMessages ?? this.returnMessages;\n        this.inputKey = fields?.inputKey ?? this.inputKey;\n        this.outputKey = fields?.outputKey ?? this.outputKey;\n    }\n    /**\n     * Method to add user and AI messages to the chat history in sequence.\n     * @param inputValues The input values from the user.\n     * @param outputValues The output values from the AI.\n     * @returns Promise that resolves when the context has been saved.\n     */\n    async saveContext(inputValues, outputValues) {\n        // this is purposefully done in sequence so they're saved in order\n        await this.chatHistory.addUserMessage((0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getInputValue)(inputValues, this.inputKey));\n        await this.chatHistory.addAIChatMessage((0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getOutputValue)(outputValues, this.outputKey));\n    }\n    /**\n     * Method to clear the chat history.\n     * @returns Promise that resolves when the chat history has been cleared.\n     */\n    async clear() {\n        await this.chatHistory.clear();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9tZW1vcnkvY2hhdF9tZW1vcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9GO0FBQ2hCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZCQUE2Qiw4REFBVTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxzREFBc0QsNEVBQWtCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxxRUFBYTtBQUMzRCxnREFBZ0Qsc0VBQWM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L21lbW9yeS9jaGF0X21lbW9yeS5qcz8wMjk5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VNZW1vcnksIGdldElucHV0VmFsdWUsIGdldE91dHB1dFZhbHVlLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVtb3J5XCI7XG5pbXBvcnQgeyBDaGF0TWVzc2FnZUhpc3RvcnkgfSBmcm9tIFwiLi4vc3RvcmVzL21lc3NhZ2UvaW5fbWVtb3J5LmpzXCI7XG4vKipcbiAqIEFic3RyYWN0IGNsYXNzIHRoYXQgcHJvdmlkZXMgYSBiYXNlIGZvciBpbXBsZW1lbnRpbmcgZGlmZmVyZW50IHR5cGVzIG9mXG4gKiBtZW1vcnkgc3lzdGVtcy4gSXQgaXMgZGVzaWduZWQgdG8gbWFpbnRhaW4gdGhlIHN0YXRlIG9mIGFuIGFwcGxpY2F0aW9uLFxuICogc3BlY2lmaWNhbGx5IHRoZSBoaXN0b3J5IG9mIGEgY29udmVyc2F0aW9uLiBUaGlzIGNsYXNzIGlzIHR5cGljYWxseVxuICogZXh0ZW5kZWQgYnkgb3RoZXIgY2xhc3NlcyB0byBjcmVhdGUgc3BlY2lmaWMgdHlwZXMgb2YgbWVtb3J5IHN5c3RlbXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlQ2hhdE1lbW9yeSBleHRlbmRzIEJhc2VNZW1vcnkge1xuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjaGF0SGlzdG9yeVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyZXR1cm5NZXNzYWdlc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlucHV0S2V5XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm91dHB1dEtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNoYXRIaXN0b3J5ID0gZmllbGRzPy5jaGF0SGlzdG9yeSA/PyBuZXcgQ2hhdE1lc3NhZ2VIaXN0b3J5KCk7XG4gICAgICAgIHRoaXMucmV0dXJuTWVzc2FnZXMgPSBmaWVsZHM/LnJldHVybk1lc3NhZ2VzID8/IHRoaXMucmV0dXJuTWVzc2FnZXM7XG4gICAgICAgIHRoaXMuaW5wdXRLZXkgPSBmaWVsZHM/LmlucHV0S2V5ID8/IHRoaXMuaW5wdXRLZXk7XG4gICAgICAgIHRoaXMub3V0cHV0S2V5ID0gZmllbGRzPy5vdXRwdXRLZXkgPz8gdGhpcy5vdXRwdXRLZXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBhZGQgdXNlciBhbmQgQUkgbWVzc2FnZXMgdG8gdGhlIGNoYXQgaGlzdG9yeSBpbiBzZXF1ZW5jZS5cbiAgICAgKiBAcGFyYW0gaW5wdXRWYWx1ZXMgVGhlIGlucHV0IHZhbHVlcyBmcm9tIHRoZSB1c2VyLlxuICAgICAqIEBwYXJhbSBvdXRwdXRWYWx1ZXMgVGhlIG91dHB1dCB2YWx1ZXMgZnJvbSB0aGUgQUkuXG4gICAgICogQHJldHVybnMgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIGNvbnRleHQgaGFzIGJlZW4gc2F2ZWQuXG4gICAgICovXG4gICAgYXN5bmMgc2F2ZUNvbnRleHQoaW5wdXRWYWx1ZXMsIG91dHB1dFZhbHVlcykge1xuICAgICAgICAvLyB0aGlzIGlzIHB1cnBvc2VmdWxseSBkb25lIGluIHNlcXVlbmNlIHNvIHRoZXkncmUgc2F2ZWQgaW4gb3JkZXJcbiAgICAgICAgYXdhaXQgdGhpcy5jaGF0SGlzdG9yeS5hZGRVc2VyTWVzc2FnZShnZXRJbnB1dFZhbHVlKGlucHV0VmFsdWVzLCB0aGlzLmlucHV0S2V5KSk7XG4gICAgICAgIGF3YWl0IHRoaXMuY2hhdEhpc3RvcnkuYWRkQUlDaGF0TWVzc2FnZShnZXRPdXRwdXRWYWx1ZShvdXRwdXRWYWx1ZXMsIHRoaXMub3V0cHV0S2V5KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBjbGVhciB0aGUgY2hhdCBoaXN0b3J5LlxuICAgICAqIEByZXR1cm5zIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBjaGF0IGhpc3RvcnkgaGFzIGJlZW4gY2xlYXJlZC5cbiAgICAgKi9cbiAgICBhc3luYyBjbGVhcigpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5jaGF0SGlzdG9yeS5jbGVhcigpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/chat_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/prompt.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/prompt.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENTITY_EXTRACTION_PROMPT: () => (/* binding */ ENTITY_EXTRACTION_PROMPT),\n/* harmony export */   ENTITY_MEMORY_CONVERSATION_TEMPLATE: () => (/* binding */ ENTITY_MEMORY_CONVERSATION_TEMPLATE),\n/* harmony export */   ENTITY_SUMMARIZATION_PROMPT: () => (/* binding */ ENTITY_SUMMARIZATION_PROMPT),\n/* harmony export */   SUMMARY_PROMPT: () => (/* binding */ SUMMARY_PROMPT),\n/* harmony export */   _DEFAULT_ENTITY_EXTRACTION_TEMPLATE: () => (/* binding */ _DEFAULT_ENTITY_EXTRACTION_TEMPLATE),\n/* harmony export */   _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE: () => (/* binding */ _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE),\n/* harmony export */   _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE: () => (/* binding */ _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n\nconst _DEFAULT_SUMMARIZER_TEMPLATE = `Progressively summarize the lines of conversation provided, adding onto the previous summary returning a new summary.\n\nEXAMPLE\nCurrent summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good.\n\nNew lines of conversation:\nHuman: Why do you think artificial intelligence is a force for good?\nAI: Because artificial intelligence will help humans reach their full potential.\n\nNew summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good because it will help humans reach their full potential.\nEND OF EXAMPLE\n\nCurrent summary:\n{summary}\n\nNew lines of conversation:\n{new_lines}\n\nNew summary:`;\n// eslint-disable-next-line spaced-comment\nconst SUMMARY_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"summary\", \"new_lines\"],\n    template: _DEFAULT_SUMMARIZER_TEMPLATE,\n});\nconst _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE = `You are an assistant to a human, powered by a large language model trained by OpenAI.\n\nYou are designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, you are able to generate human-like text based on the input you receive, allowing you to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nYou are constantly learning and improving, and your capabilities are constantly evolving. You are able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. You have access to some personalized information provided by the human in the Context section below. Additionally, you are able to generate your own text based on the input you receive, allowing you to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, you are a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether the human needs help with a specific question or just wants to have a conversation about a particular topic, you are here to assist.\n\nContext:\n{entities}\n\nCurrent conversation:\n{history}\nLast line:\nHuman: {input}\nYou:`;\nconst ENTITY_MEMORY_CONVERSATION_TEMPLATE = \n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"entities\", \"history\", \"input\"],\n    template: _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE,\n});\nconst _DEFAULT_ENTITY_EXTRACTION_TEMPLATE = `You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: my name is Jacob. how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Jacob,Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:`;\n// eslint-disable-next-line spaced-comment\nconst ENTITY_EXTRACTION_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"history\", \"input\"],\n    template: _DEFAULT_ENTITY_EXTRACTION_TEMPLATE,\n});\nconst _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE = `You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update and add to the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), output the exact string \"UNCHANGED\" below.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary (or the exact string \"UNCHANGED\" if there is no new information about {entity} above):`;\n// eslint-disable-next-line spaced-comment\nconst ENTITY_SUMMARIZATION_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"entity\", \"summary\", \"history\", \"input\"],\n    template: _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConversationSummaryMemory: () => (/* binding */ BaseConversationSummaryMemory),\n/* harmony export */   ConversationSummaryMemory: () => (/* binding */ ConversationSummaryMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/prompt.js\");\n/* harmony import */ var _chat_memory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chat_memory.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/chat_memory.js\");\n\n\n\n\n/**\n * Abstract class that provides a structure for storing and managing the\n * memory of a conversation. It includes methods for predicting a new\n * summary for the conversation given the existing messages and summary.\n */\nclass BaseConversationSummaryMemory extends _chat_memory_js__WEBPACK_IMPORTED_MODULE_3__.BaseChatMemory {\n    constructor(fields) {\n        const { returnMessages, inputKey, outputKey, chatHistory, humanPrefix, aiPrefix, llm, prompt, summaryChatMessageClass, } = fields;\n        super({ returnMessages, inputKey, outputKey, chatHistory });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _prompt_js__WEBPACK_IMPORTED_MODULE_2__.SUMMARY_PROMPT\n        });\n        Object.defineProperty(this, \"summaryChatMessageClass\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.SystemMessage\n        });\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n        this.humanPrefix = humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = aiPrefix ?? this.aiPrefix;\n        this.llm = llm;\n        this.prompt = prompt ?? this.prompt;\n        this.summaryChatMessageClass =\n            summaryChatMessageClass ?? this.summaryChatMessageClass;\n    }\n    /**\n     * Predicts a new summary for the conversation given the existing messages\n     * and summary.\n     * @param messages Existing messages in the conversation.\n     * @param existingSummary Current summary of the conversation.\n     * @returns A promise that resolves to a new summary string.\n     */\n    async predictNewSummary(messages, existingSummary) {\n        const newLines = (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(messages, this.humanPrefix, this.aiPrefix);\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ llm: this.llm, prompt: this.prompt });\n        return await chain.predict({\n            summary: existingSummary,\n            new_lines: newLines,\n        });\n    }\n}\n/**\n * Class that provides a concrete implementation of the conversation\n * memory. It includes methods for loading memory variables, saving\n * context, and clearing the memory.\n * @example\n * ```typescript\n * const memory = new ConversationSummaryMemory({\n *   memoryKey: \"chat_history\",\n *   llm: new ChatOpenAI({ modelName: \"gpt-3.5-turbo\", temperature: 0 }),\n * });\n *\n * const model = new ChatOpenAI();\n * const prompt =\n *   PromptTemplate.fromTemplate(`The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n *\n * Current conversation:\n * {chat_history}\n * Human: {input}\n * AI:`);\n * const chain = new LLMChain({ llm: model, prompt, memory });\n *\n * const res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({ res1, memory: await memory.loadMemoryVariables({}) });\n *\n * const res2 = await chain.call({ input: \"What's my name?\" });\n * console.log({ res2, memory: await memory.loadMemoryVariables({}) });\n *\n * ```\n */\nclass ConversationSummaryMemory extends BaseConversationSummaryMemory {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Loads the memory variables for the conversation memory.\n     * @returns A promise that resolves to an object containing the memory variables.\n     */\n    async loadMemoryVariables(_) {\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: [new this.summaryChatMessageClass(this.buffer)],\n            };\n            return result;\n        }\n        const result = { [this.memoryKey]: this.buffer };\n        return result;\n    }\n    /**\n     * Saves the context of the conversation memory.\n     * @param inputValues Input values for the conversation.\n     * @param outputValues Output values from the conversation.\n     * @returns A promise that resolves when the context has been saved.\n     */\n    async saveContext(inputValues, outputValues) {\n        await super.saveContext(inputValues, outputValues);\n        const messages = await this.chatHistory.getMessages();\n        this.buffer = await this.predictNewSummary(messages.slice(-2), this.buffer);\n    }\n    /**\n     * Clears the conversation memory.\n     * @returns A promise that resolves when the memory has been cleared.\n     */\n    async clear() {\n        await super.clear();\n        this.buffer = \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary_buffer.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary_buffer.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConversationSummaryBufferMemory: () => (/* binding */ ConversationSummaryBufferMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _summary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./summary.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary.js\");\n\n\n/**\n * Class that extends BaseConversationSummaryMemory and implements\n * ConversationSummaryBufferMemoryInput. It manages the conversation\n * history in a LangChain application by maintaining a buffer of chat\n * messages and providing methods to load, save, prune, and clear the\n * memory.\n * @example\n * ```typescript\n * // Initialize the memory with a specific model and token limit\n * const memory = new ConversationSummaryBufferMemory({\n *   llm: new ChatOpenAI({ modelName: \"gpt-3.5-turbo-instruct\", temperature: 0 }),\n *   maxTokenLimit: 10,\n * });\n *\n * // Save conversation context to memory\n * await memory.saveContext({ input: \"hi\" }, { output: \"whats up\" });\n * await memory.saveContext({ input: \"not much you\" }, { output: \"not much\" });\n *\n * // Load the conversation history from memory\n * const history = await memory.loadMemoryVariables({});\n * console.log({ history });\n *\n * // Create a chat prompt using the conversation history\n * const chatPrompt = ChatPromptTemplate.fromMessages([\n *   SystemMessagePromptTemplate.fromTemplate(\n *     \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\",\n *   ),\n *   new MessagesPlaceholder(\"history\"),\n *   HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n * ]);\n *\n * // Initialize the conversation chain with the model, memory, and prompt\n * const chain = new ConversationChain({\n *   llm: new ChatOpenAI({ temperature: 0.9, verbose: true }),\n *   memory: memory,\n *   prompt: chatPrompt,\n * });\n * ```\n */\nclass ConversationSummaryBufferMemory extends _summary_js__WEBPACK_IMPORTED_MODULE_1__.BaseConversationSummaryMemory {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"movingSummaryBuffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"maxTokenLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2000\n        });\n        this.maxTokenLimit = fields?.maxTokenLimit ?? this.maxTokenLimit;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Method that loads the chat messages from the memory and returns them as\n     * a string or as a list of messages, depending on the returnMessages\n     * property.\n     * @param _ InputValues object, not used in this method.\n     * @returns Promise that resolves with MemoryVariables object containing the loaded chat messages.\n     */\n    async loadMemoryVariables(_) {\n        let buffer = await this.chatHistory.getMessages();\n        if (this.movingSummaryBuffer) {\n            buffer = [\n                new this.summaryChatMessageClass(this.movingSummaryBuffer),\n                ...buffer,\n            ];\n        }\n        let finalBuffer;\n        if (this.returnMessages) {\n            finalBuffer = buffer;\n        }\n        else {\n            finalBuffer = (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix);\n        }\n        return { [this.memoryKey]: finalBuffer };\n    }\n    /**\n     * Method that saves the context of the conversation, including the input\n     * and output values, and prunes the memory if it exceeds the maximum\n     * token limit.\n     * @param inputValues InputValues object containing the input values of the conversation.\n     * @param outputValues OutputValues object containing the output values of the conversation.\n     * @returns Promise that resolves when the context is saved and the memory is pruned.\n     */\n    async saveContext(inputValues, outputValues) {\n        await super.saveContext(inputValues, outputValues);\n        await this.prune();\n    }\n    /**\n     * Method that prunes the memory if the total number of tokens in the\n     * buffer exceeds the maxTokenLimit. It removes messages from the\n     * beginning of the buffer until the total number of tokens is within the\n     * limit.\n     * @returns Promise that resolves when the memory is pruned.\n     */\n    async prune() {\n        // Prune buffer if it exceeds max token limit\n        let buffer = await this.chatHistory.getMessages();\n        if (this.movingSummaryBuffer) {\n            buffer = [\n                new this.summaryChatMessageClass(this.movingSummaryBuffer),\n                ...buffer,\n            ];\n        }\n        let currBufferLength = await this.llm.getNumTokens((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix));\n        if (currBufferLength > this.maxTokenLimit) {\n            const prunedMemory = [];\n            while (currBufferLength > this.maxTokenLimit) {\n                const poppedMessage = buffer.shift();\n                if (poppedMessage) {\n                    prunedMemory.push(poppedMessage);\n                    currBufferLength = await this.llm.getNumTokens((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix));\n                }\n            }\n            this.movingSummaryBuffer = await this.predictNewSummary(prunedMemory, this.movingSummaryBuffer);\n        }\n    }\n    /**\n     * Method that clears the memory and resets the movingSummaryBuffer.\n     * @returns Promise that resolves when the memory is cleared.\n     */\n    async clear() {\n        await super.clear();\n        this.movingSummaryBuffer = \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/memory/summary_buffer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/fix.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/fix.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OutputFixingParser: () => (/* binding */ OutputFixingParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chains/llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/prompts.js\");\n\n\n\nfunction isLLMChain(x) {\n    return (x.prompt !== undefined && x.llm !== undefined);\n}\n/**\n * Class that extends the BaseOutputParser to handle situations where the\n * initial parsing attempt fails. It contains a retryChain for retrying\n * the parsing process in case of a failure.\n */\nclass OutputFixingParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n    static lc_name() {\n        return \"OutputFixingParser\";\n    }\n    /**\n     * Static method to create a new instance of OutputFixingParser using a\n     * given language model, parser, and optional fields.\n     * @param llm The language model to be used.\n     * @param parser The parser to be used.\n     * @param fields Optional fields which may contain a prompt.\n     * @returns A new instance of OutputFixingParser.\n     */\n    static fromLLM(llm, parser, fields) {\n        const prompt = fields?.prompt ?? _prompts_js__WEBPACK_IMPORTED_MODULE_2__.NAIVE_FIX_PROMPT;\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ llm, prompt });\n        return new OutputFixingParser({ parser, retryChain: chain });\n    }\n    constructor({ parser, retryChain, }) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"fix\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"parser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"retryChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.parser = parser;\n        this.retryChain = retryChain;\n    }\n    /**\n     * Method to parse the completion using the parser. If the initial parsing\n     * fails, it uses the retryChain to attempt to fix the output and retry\n     * the parsing process.\n     * @param completion The completion to be parsed.\n     * @param callbacks Optional callbacks to be used during parsing.\n     * @returns The parsed output.\n     */\n    async parse(completion, callbacks) {\n        try {\n            return await this.parser.parse(completion, callbacks);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (e instanceof _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException) {\n                const retryInput = {\n                    instructions: this.parser.getFormatInstructions(),\n                    completion,\n                    error: e,\n                };\n                if (isLLMChain(this.retryChain)) {\n                    const result = await this.retryChain.call(retryInput, callbacks);\n                    const newCompletion = result[this.retryChain.outputKey];\n                    return this.parser.parse(newCompletion, callbacks);\n                }\n                else {\n                    const result = await this.retryChain.invoke(retryInput, {\n                        callbacks,\n                    });\n                    return result;\n                }\n            }\n            throw e;\n        }\n    }\n    /**\n     * Method to get the format instructions for the parser.\n     * @returns The format instructions for the parser.\n     */\n    getFormatInstructions() {\n        return this.parser.getFormatInstructions();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9maXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwRjtBQUN4QztBQUNGO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQ0FBaUMsNEVBQWdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx5REFBZ0I7QUFDekQsMEJBQTBCLDBEQUFRLEdBQUcsYUFBYTtBQUNsRCx3Q0FBd0MsMkJBQTJCO0FBQ25FO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixpRkFBcUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9maXguanM/ZTg2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT3V0cHV0UGFyc2VyLCBPdXRwdXRQYXJzZXJFeGNlcHRpb24sIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuaW1wb3J0IHsgTExNQ2hhaW4gfSBmcm9tIFwiLi4vY2hhaW5zL2xsbV9jaGFpbi5qc1wiO1xuaW1wb3J0IHsgTkFJVkVfRklYX1BST01QVCB9IGZyb20gXCIuL3Byb21wdHMuanNcIjtcbmZ1bmN0aW9uIGlzTExNQ2hhaW4oeCkge1xuICAgIHJldHVybiAoeC5wcm9tcHQgIT09IHVuZGVmaW5lZCAmJiB4LmxsbSAhPT0gdW5kZWZpbmVkKTtcbn1cbi8qKlxuICogQ2xhc3MgdGhhdCBleHRlbmRzIHRoZSBCYXNlT3V0cHV0UGFyc2VyIHRvIGhhbmRsZSBzaXR1YXRpb25zIHdoZXJlIHRoZVxuICogaW5pdGlhbCBwYXJzaW5nIGF0dGVtcHQgZmFpbHMuIEl0IGNvbnRhaW5zIGEgcmV0cnlDaGFpbiBmb3IgcmV0cnlpbmdcbiAqIHRoZSBwYXJzaW5nIHByb2Nlc3MgaW4gY2FzZSBvZiBhIGZhaWx1cmUuXG4gKi9cbmV4cG9ydCBjbGFzcyBPdXRwdXRGaXhpbmdQYXJzZXIgZXh0ZW5kcyBCYXNlT3V0cHV0UGFyc2VyIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiT3V0cHV0Rml4aW5nUGFyc2VyXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QgdG8gY3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIE91dHB1dEZpeGluZ1BhcnNlciB1c2luZyBhXG4gICAgICogZ2l2ZW4gbGFuZ3VhZ2UgbW9kZWwsIHBhcnNlciwgYW5kIG9wdGlvbmFsIGZpZWxkcy5cbiAgICAgKiBAcGFyYW0gbGxtIFRoZSBsYW5ndWFnZSBtb2RlbCB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSBwYXJzZXIgVGhlIHBhcnNlciB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSBmaWVsZHMgT3B0aW9uYWwgZmllbGRzIHdoaWNoIG1heSBjb250YWluIGEgcHJvbXB0LlxuICAgICAqIEByZXR1cm5zIEEgbmV3IGluc3RhbmNlIG9mIE91dHB1dEZpeGluZ1BhcnNlci5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUxMTShsbG0sIHBhcnNlciwgZmllbGRzKSB7XG4gICAgICAgIGNvbnN0IHByb21wdCA9IGZpZWxkcz8ucHJvbXB0ID8/IE5BSVZFX0ZJWF9QUk9NUFQ7XG4gICAgICAgIGNvbnN0IGNoYWluID0gbmV3IExMTUNoYWluKHsgbGxtLCBwcm9tcHQgfSk7XG4gICAgICAgIHJldHVybiBuZXcgT3V0cHV0Rml4aW5nUGFyc2VyKHsgcGFyc2VyLCByZXRyeUNoYWluOiBjaGFpbiB9KTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoeyBwYXJzZXIsIHJldHJ5Q2hhaW4sIH0pIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5cIiwgXCJvdXRwdXRfcGFyc2Vyc1wiLCBcImZpeFwiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwYXJzZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmV0cnlDaGFpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnBhcnNlciA9IHBhcnNlcjtcbiAgICAgICAgdGhpcy5yZXRyeUNoYWluID0gcmV0cnlDaGFpbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHRvIHBhcnNlIHRoZSBjb21wbGV0aW9uIHVzaW5nIHRoZSBwYXJzZXIuIElmIHRoZSBpbml0aWFsIHBhcnNpbmdcbiAgICAgKiBmYWlscywgaXQgdXNlcyB0aGUgcmV0cnlDaGFpbiB0byBhdHRlbXB0IHRvIGZpeCB0aGUgb3V0cHV0IGFuZCByZXRyeVxuICAgICAqIHRoZSBwYXJzaW5nIHByb2Nlc3MuXG4gICAgICogQHBhcmFtIGNvbXBsZXRpb24gVGhlIGNvbXBsZXRpb24gdG8gYmUgcGFyc2VkLlxuICAgICAqIEBwYXJhbSBjYWxsYmFja3MgT3B0aW9uYWwgY2FsbGJhY2tzIHRvIGJlIHVzZWQgZHVyaW5nIHBhcnNpbmcuXG4gICAgICogQHJldHVybnMgVGhlIHBhcnNlZCBvdXRwdXQuXG4gICAgICovXG4gICAgYXN5bmMgcGFyc2UoY29tcGxldGlvbiwgY2FsbGJhY2tzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJzZXIucGFyc2UoY29tcGxldGlvbiwgY2FsbGJhY2tzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWluc3RhbmNlb2Yvbm8taW5zdGFuY2VvZlxuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBPdXRwdXRQYXJzZXJFeGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXRyeUlucHV0ID0ge1xuICAgICAgICAgICAgICAgICAgICBpbnN0cnVjdGlvbnM6IHRoaXMucGFyc2VyLmdldEZvcm1hdEluc3RydWN0aW9ucygpLFxuICAgICAgICAgICAgICAgICAgICBjb21wbGV0aW9uLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmIChpc0xMTUNoYWluKHRoaXMucmV0cnlDaGFpbikpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5yZXRyeUNoYWluLmNhbGwocmV0cnlJbnB1dCwgY2FsbGJhY2tzKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3Q29tcGxldGlvbiA9IHJlc3VsdFt0aGlzLnJldHJ5Q2hhaW4ub3V0cHV0S2V5XTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VyLnBhcnNlKG5ld0NvbXBsZXRpb24sIGNhbGxiYWNrcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnJldHJ5Q2hhaW4uaW52b2tlKHJldHJ5SW5wdXQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrcyxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gZ2V0IHRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIGZvciB0aGUgcGFyc2VyLlxuICAgICAqIEByZXR1cm5zIFRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIGZvciB0aGUgcGFyc2VyLlxuICAgICAqL1xuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VyLmdldEZvcm1hdEluc3RydWN0aW9ucygpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/fix.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/noop.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/noop.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoOpOutputParser: () => (/* binding */ NoOpOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/output_parsers.js\");\n\n/**\n * The NoOpOutputParser class is a type of output parser that does not\n * perform any operations on the output. It extends the BaseOutputParser\n * class and is part of the LangChain's output parsers module. This class\n * is useful in scenarios where the raw output of the Large Language\n * Models (LLMs) is required.\n */\nclass NoOpOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"default\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"NoOpOutputParser\";\n    }\n    /**\n     * This method takes a string as input and returns the same string as\n     * output. It does not perform any operations on the input string.\n     * @param text The input string to be parsed.\n     * @returns The same input string without any operations performed on it.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    /**\n     * This method returns an empty string. It does not provide any formatting\n     * instructions.\n     * @returns An empty string, indicating no formatting instructions.\n     */\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9ub29wLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLDRFQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L291dHB1dF9wYXJzZXJzL25vb3AuanM/OWQ2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT3V0cHV0UGFyc2VyIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuLyoqXG4gKiBUaGUgTm9PcE91dHB1dFBhcnNlciBjbGFzcyBpcyBhIHR5cGUgb2Ygb3V0cHV0IHBhcnNlciB0aGF0IGRvZXMgbm90XG4gKiBwZXJmb3JtIGFueSBvcGVyYXRpb25zIG9uIHRoZSBvdXRwdXQuIEl0IGV4dGVuZHMgdGhlIEJhc2VPdXRwdXRQYXJzZXJcbiAqIGNsYXNzIGFuZCBpcyBwYXJ0IG9mIHRoZSBMYW5nQ2hhaW4ncyBvdXRwdXQgcGFyc2VycyBtb2R1bGUuIFRoaXMgY2xhc3NcbiAqIGlzIHVzZWZ1bCBpbiBzY2VuYXJpb3Mgd2hlcmUgdGhlIHJhdyBvdXRwdXQgb2YgdGhlIExhcmdlIExhbmd1YWdlXG4gKiBNb2RlbHMgKExMTXMpIGlzIHJlcXVpcmVkLlxuICovXG5leHBvcnQgY2xhc3MgTm9PcE91dHB1dFBhcnNlciBleHRlbmRzIEJhc2VPdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcIm91dHB1dF9wYXJzZXJzXCIsIFwiZGVmYXVsdFwiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiTm9PcE91dHB1dFBhcnNlclwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCB0YWtlcyBhIHN0cmluZyBhcyBpbnB1dCBhbmQgcmV0dXJucyB0aGUgc2FtZSBzdHJpbmcgYXNcbiAgICAgKiBvdXRwdXQuIEl0IGRvZXMgbm90IHBlcmZvcm0gYW55IG9wZXJhdGlvbnMgb24gdGhlIGlucHV0IHN0cmluZy5cbiAgICAgKiBAcGFyYW0gdGV4dCBUaGUgaW5wdXQgc3RyaW5nIHRvIGJlIHBhcnNlZC5cbiAgICAgKiBAcmV0dXJucyBUaGUgc2FtZSBpbnB1dCBzdHJpbmcgd2l0aG91dCBhbnkgb3BlcmF0aW9ucyBwZXJmb3JtZWQgb24gaXQuXG4gICAgICovXG4gICAgcGFyc2UodGV4dCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRleHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCByZXR1cm5zIGFuIGVtcHR5IHN0cmluZy4gSXQgZG9lcyBub3QgcHJvdmlkZSBhbnkgZm9ybWF0dGluZ1xuICAgICAqIGluc3RydWN0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBBbiBlbXB0eSBzdHJpbmcsIGluZGljYXRpbmcgbm8gZm9ybWF0dGluZyBpbnN0cnVjdGlvbnMuXG4gICAgICovXG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/noop.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/prompts.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/prompts.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NAIVE_FIX_PROMPT: () => (/* binding */ NAIVE_FIX_PROMPT),\n/* harmony export */   NAIVE_FIX_TEMPLATE: () => (/* binding */ NAIVE_FIX_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/prompts.js\");\n\nconst NAIVE_FIX_TEMPLATE = `Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:`;\nconst NAIVE_FIX_PROMPT = \n/* #__PURE__ */ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(NAIVE_FIX_TEMPLATE);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9wcm9tcHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RDtBQUNsRDtBQUNQO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7QUFDTztBQUNQLGdCQUFnQixtRUFBYyIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9wcm9tcHRzLmpzPzBjZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvbXB0VGVtcGxhdGUgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Byb21wdHNcIjtcbmV4cG9ydCBjb25zdCBOQUlWRV9GSVhfVEVNUExBVEUgPSBgSW5zdHJ1Y3Rpb25zOlxuLS0tLS0tLS0tLS0tLS1cbntpbnN0cnVjdGlvbnN9XG4tLS0tLS0tLS0tLS0tLVxuQ29tcGxldGlvbjpcbi0tLS0tLS0tLS0tLS0tXG57Y29tcGxldGlvbn1cbi0tLS0tLS0tLS0tLS0tXG5cbkFib3ZlLCB0aGUgQ29tcGxldGlvbiBkaWQgbm90IHNhdGlzZnkgdGhlIGNvbnN0cmFpbnRzIGdpdmVuIGluIHRoZSBJbnN0cnVjdGlvbnMuXG5FcnJvcjpcbi0tLS0tLS0tLS0tLS0tXG57ZXJyb3J9XG4tLS0tLS0tLS0tLS0tLVxuXG5QbGVhc2UgdHJ5IGFnYWluLiBQbGVhc2Ugb25seSByZXNwb25kIHdpdGggYW4gYW5zd2VyIHRoYXQgc2F0aXNmaWVzIHRoZSBjb25zdHJhaW50cyBsYWlkIG91dCBpbiB0aGUgSW5zdHJ1Y3Rpb25zOmA7XG5leHBvcnQgY29uc3QgTkFJVkVfRklYX1BST01QVCA9IFxuLyogI19fUFVSRV9fICovIFByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShOQUlWRV9GSVhfVEVNUExBVEUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/output_parsers/prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/stores/message/in_memory.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/stores/message/in_memory.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatMessageHistory: () => (/* reexport safe */ _langchain_core_chat_history__WEBPACK_IMPORTED_MODULE_0__.InMemoryChatMessageHistory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_chat_history__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/chat_history */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/chat_history.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9zdG9yZXMvbWVzc2FnZS9pbl9tZW1vcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3Qvc3RvcmVzL21lc3NhZ2UvaW5fbWVtb3J5LmpzPzUyYmUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSW5NZW1vcnlDaGF0TWVzc2FnZUhpc3RvcnkgYXMgQ2hhdE1lc3NhZ2VIaXN0b3J5IH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9jaGF0X2hpc3RvcnlcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/stores/message/in_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/json.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/json.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonGetValueTool: () => (/* binding */ JsonGetValueTool),\n/* harmony export */   JsonListKeysTool: () => (/* binding */ JsonListKeysTool),\n/* harmony export */   JsonSpec: () => (/* binding */ JsonSpec)\n/* harmony export */ });\n/* harmony import */ var jsonpointer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonpointer */ \"(rsc)/./node_modules/.pnpm/jsonpointer@5.0.1/node_modules/jsonpointer/jsonpointer.js\");\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n\n\n\n/**\n * Represents a JSON object in the LangChain framework. Provides methods\n * to get keys and values from the JSON object.\n */\nclass JsonSpec extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_1__.Serializable {\n    constructor(obj, max_value_length = 4000) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"tools\", \"json\"]\n        });\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxValueLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4000\n        });\n        this.obj = obj;\n        this.maxValueLength = max_value_length;\n    }\n    /**\n     * Retrieves all keys at a given path in the JSON object.\n     * @param input The path to the keys in the JSON object, provided as a string in JSON pointer syntax.\n     * @returns A string containing all keys at the given path, separated by commas.\n     */\n    getKeys(input) {\n        const pointer = jsonpointer__WEBPACK_IMPORTED_MODULE_0__.compile(input);\n        const res = pointer.get(this.obj);\n        if (typeof res === \"object\" && !Array.isArray(res) && res !== null) {\n            return Object.keys(res)\n                .map((i) => i.replaceAll(\"~\", \"~0\").replaceAll(\"/\", \"~1\"))\n                .join(\", \");\n        }\n        throw new Error(`Value at ${input} is not a dictionary, get the value directly instead.`);\n    }\n    /**\n     * Retrieves the value at a given path in the JSON object.\n     * @param input The path to the value in the JSON object, provided as a string in JSON pointer syntax.\n     * @returns The value at the given path in the JSON object, as a string. If the value is a large dictionary or exceeds the maximum length, a message is returned instead.\n     */\n    getValue(input) {\n        const pointer = jsonpointer__WEBPACK_IMPORTED_MODULE_0__.compile(input);\n        const res = pointer.get(this.obj);\n        if (res === null || res === undefined) {\n            throw new Error(`Value at ${input} is null or undefined.`);\n        }\n        const str = typeof res === \"object\" ? JSON.stringify(res) : res.toString();\n        if (typeof res === \"object\" &&\n            !Array.isArray(res) &&\n            str.length > this.maxValueLength) {\n            return `Value is a large dictionary, should explore its keys directly.`;\n        }\n        if (str.length > this.maxValueLength) {\n            return `${str.slice(0, this.maxValueLength)}...`;\n        }\n        return str;\n    }\n}\n/**\n * A tool in the LangChain framework that lists all keys at a given path\n * in a JSON object.\n */\nclass JsonListKeysTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__.Tool {\n    static lc_name() {\n        return \"JsonListKeysTool\";\n    }\n    constructor(fields) {\n        if (!(\"jsonSpec\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { jsonSpec: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_list_keys\"\n        });\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to list all keys at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n        this.jsonSpec = fields.jsonSpec;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getKeys(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n/**\n * A tool in the LangChain framework that retrieves the value at a given\n * path in a JSON object.\n */\nclass JsonGetValueTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__.Tool {\n    static lc_name() {\n        return \"JsonGetValueTool\";\n    }\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_get_value\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getValue(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUMyQjtBQUNwQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPLHVCQUF1QiwyRUFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdEQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsT0FBTztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnREFBbUI7QUFDM0M7QUFDQTtBQUNBLHdDQUF3QyxPQUFPO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0NBQWtDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQkFBK0IsdURBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLHVEQUFJO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsTUFBTTtBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvanNvbi5qcz9iMjI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqc29ucG9pbnRlciBmcm9tIFwianNvbnBvaW50ZXJcIjtcbmltcG9ydCB7IFNlcmlhbGl6YWJsZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbG9hZC9zZXJpYWxpemFibGVcIjtcbmltcG9ydCB7IFRvb2wgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBKU09OIG9iamVjdCBpbiB0aGUgTGFuZ0NoYWluIGZyYW1ld29yay4gUHJvdmlkZXMgbWV0aG9kc1xuICogdG8gZ2V0IGtleXMgYW5kIHZhbHVlcyBmcm9tIHRoZSBKU09OIG9iamVjdC5cbiAqL1xuZXhwb3J0IGNsYXNzIEpzb25TcGVjIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcbiAgICBjb25zdHJ1Y3RvcihvYmosIG1heF92YWx1ZV9sZW5ndGggPSA0MDAwKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwidG9vbHNcIiwgXCJqc29uXCJdXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvYmpcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibWF4VmFsdWVMZW5ndGhcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDQwMDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub2JqID0gb2JqO1xuICAgICAgICB0aGlzLm1heFZhbHVlTGVuZ3RoID0gbWF4X3ZhbHVlX2xlbmd0aDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGFsbCBrZXlzIGF0IGEgZ2l2ZW4gcGF0aCBpbiB0aGUgSlNPTiBvYmplY3QuXG4gICAgICogQHBhcmFtIGlucHV0IFRoZSBwYXRoIHRvIHRoZSBrZXlzIGluIHRoZSBKU09OIG9iamVjdCwgcHJvdmlkZWQgYXMgYSBzdHJpbmcgaW4gSlNPTiBwb2ludGVyIHN5bnRheC5cbiAgICAgKiBAcmV0dXJucyBBIHN0cmluZyBjb250YWluaW5nIGFsbCBrZXlzIGF0IHRoZSBnaXZlbiBwYXRoLCBzZXBhcmF0ZWQgYnkgY29tbWFzLlxuICAgICAqL1xuICAgIGdldEtleXMoaW5wdXQpIHtcbiAgICAgICAgY29uc3QgcG9pbnRlciA9IGpzb25wb2ludGVyLmNvbXBpbGUoaW5wdXQpO1xuICAgICAgICBjb25zdCByZXMgPSBwb2ludGVyLmdldCh0aGlzLm9iaik7XG4gICAgICAgIGlmICh0eXBlb2YgcmVzID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KHJlcykgJiYgcmVzICE9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMocmVzKVxuICAgICAgICAgICAgICAgIC5tYXAoKGkpID0+IGkucmVwbGFjZUFsbChcIn5cIiwgXCJ+MFwiKS5yZXBsYWNlQWxsKFwiL1wiLCBcIn4xXCIpKVxuICAgICAgICAgICAgICAgIC5qb2luKFwiLCBcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBWYWx1ZSBhdCAke2lucHV0fSBpcyBub3QgYSBkaWN0aW9uYXJ5LCBnZXQgdGhlIHZhbHVlIGRpcmVjdGx5IGluc3RlYWQuYCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyB0aGUgdmFsdWUgYXQgYSBnaXZlbiBwYXRoIGluIHRoZSBKU09OIG9iamVjdC5cbiAgICAgKiBAcGFyYW0gaW5wdXQgVGhlIHBhdGggdG8gdGhlIHZhbHVlIGluIHRoZSBKU09OIG9iamVjdCwgcHJvdmlkZWQgYXMgYSBzdHJpbmcgaW4gSlNPTiBwb2ludGVyIHN5bnRheC5cbiAgICAgKiBAcmV0dXJucyBUaGUgdmFsdWUgYXQgdGhlIGdpdmVuIHBhdGggaW4gdGhlIEpTT04gb2JqZWN0LCBhcyBhIHN0cmluZy4gSWYgdGhlIHZhbHVlIGlzIGEgbGFyZ2UgZGljdGlvbmFyeSBvciBleGNlZWRzIHRoZSBtYXhpbXVtIGxlbmd0aCwgYSBtZXNzYWdlIGlzIHJldHVybmVkIGluc3RlYWQuXG4gICAgICovXG4gICAgZ2V0VmFsdWUoaW5wdXQpIHtcbiAgICAgICAgY29uc3QgcG9pbnRlciA9IGpzb25wb2ludGVyLmNvbXBpbGUoaW5wdXQpO1xuICAgICAgICBjb25zdCByZXMgPSBwb2ludGVyLmdldCh0aGlzLm9iaik7XG4gICAgICAgIGlmIChyZXMgPT09IG51bGwgfHwgcmVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVmFsdWUgYXQgJHtpbnB1dH0gaXMgbnVsbCBvciB1bmRlZmluZWQuYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3RyID0gdHlwZW9mIHJlcyA9PT0gXCJvYmplY3RcIiA/IEpTT04uc3RyaW5naWZ5KHJlcykgOiByZXMudG9TdHJpbmcoKTtcbiAgICAgICAgaWYgKHR5cGVvZiByZXMgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgICFBcnJheS5pc0FycmF5KHJlcykgJiZcbiAgICAgICAgICAgIHN0ci5sZW5ndGggPiB0aGlzLm1heFZhbHVlTGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gYFZhbHVlIGlzIGEgbGFyZ2UgZGljdGlvbmFyeSwgc2hvdWxkIGV4cGxvcmUgaXRzIGtleXMgZGlyZWN0bHkuYDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RyLmxlbmd0aCA+IHRoaXMubWF4VmFsdWVMZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtzdHIuc2xpY2UoMCwgdGhpcy5tYXhWYWx1ZUxlbmd0aCl9Li4uYDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH1cbn1cbi8qKlxuICogQSB0b29sIGluIHRoZSBMYW5nQ2hhaW4gZnJhbWV3b3JrIHRoYXQgbGlzdHMgYWxsIGtleXMgYXQgYSBnaXZlbiBwYXRoXG4gKiBpbiBhIEpTT04gb2JqZWN0LlxuICovXG5leHBvcnQgY2xhc3MgSnNvbkxpc3RLZXlzVG9vbCBleHRlbmRzIFRvb2wge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJKc29uTGlzdEtleXNUb29sXCI7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBpZiAoIShcImpzb25TcGVjXCIgaW4gZmllbGRzKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBmaWVsZHMgPSB7IGpzb25TcGVjOiBmaWVsZHMgfTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcImpzb25fbGlzdF9rZXlzXCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImpzb25TcGVjXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBgQ2FuIGJlIHVzZWQgdG8gbGlzdCBhbGwga2V5cyBhdCBhIGdpdmVuIHBhdGguXG4gICAgQmVmb3JlIGNhbGxpbmcgdGhpcyB5b3Ugc2hvdWxkIGJlIFNVUkUgdGhhdCB0aGUgcGF0aCB0byB0aGlzIGV4aXN0cy5cbiAgICBUaGUgaW5wdXQgaXMgYSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXRoIHRvIHRoZSBqc29uIGFzIGpzb24gcG9pbnRlciBzeW50YXggKGUuZy4gL2tleTEvMC9rZXkyKS5gXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmpzb25TcGVjID0gZmllbGRzLmpzb25TcGVjO1xuICAgIH1cbiAgICAvKiogQGlnbm9yZSAqL1xuICAgIGFzeW5jIF9jYWxsKGlucHV0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5qc29uU3BlYy5nZXRLZXlzKGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtlcnJvcn1gO1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBBIHRvb2wgaW4gdGhlIExhbmdDaGFpbiBmcmFtZXdvcmsgdGhhdCByZXRyaWV2ZXMgdGhlIHZhbHVlIGF0IGEgZ2l2ZW5cbiAqIHBhdGggaW4gYSBKU09OIG9iamVjdC5cbiAqL1xuZXhwb3J0IGNsYXNzIEpzb25HZXRWYWx1ZVRvb2wgZXh0ZW5kcyBUb29sIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiSnNvbkdldFZhbHVlVG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihqc29uU3BlYykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJqc29uU3BlY1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZToganNvblNwZWNcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwianNvbl9nZXRfdmFsdWVcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZGVzY3JpcHRpb25cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGBDYW4gYmUgdXNlZCB0byBzZWUgdmFsdWUgaW4gc3RyaW5nIGZvcm1hdCBhdCBhIGdpdmVuIHBhdGguXG4gICAgQmVmb3JlIGNhbGxpbmcgdGhpcyB5b3Ugc2hvdWxkIGJlIFNVUkUgdGhhdCB0aGUgcGF0aCB0byB0aGlzIGV4aXN0cy5cbiAgICBUaGUgaW5wdXQgaXMgYSB0ZXh0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXRoIHRvIHRoZSBqc29uIGFzIGpzb24gcG9pbnRlciBzeW50YXggKGUuZy4gL2tleTEvMC9rZXkyKS5gXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogQGlnbm9yZSAqL1xuICAgIGFzeW5jIF9jYWxsKGlucHV0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5qc29uU3BlYy5nZXRWYWx1ZShpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7ZXJyb3J9YDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/render.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/render.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderTextDescription: () => (/* binding */ renderTextDescription),\n/* harmony export */   renderTextDescriptionAndArgs: () => (/* binding */ renderTextDescriptionAndArgs)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/.pnpm/zod-to-json-schema@3.24.1_zod@3.24.1/node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/language_models/base.js\");\n\n\n/**\n * Render the tool name and description in plain text.\n *\n * Output will be in the format of:\n * ```\n * search: This tool is used for search\n * calculator: This tool is used for math\n * ```\n * @param tools\n * @returns a string of all tools and their descriptions\n */\nfunction renderTextDescription(tools) {\n    if (tools.every(_langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_1__.isOpenAITool)) {\n        return tools\n            .map((tool) => `${tool.function.name}${tool.function.description ? `: ${tool.function.description}` : \"\"}`)\n            .join(\"\\n\");\n    }\n    return tools\n        .map((tool) => `${tool.name}: ${tool.description}`)\n        .join(\"\\n\");\n}\n/**\n * Render the tool name, description, and args in plain text.\n * Output will be in the format of:'\n * ```\n * search: This tool is used for search, args: {\"query\": {\"type\": \"string\"}}\n * calculator: This tool is used for math,\n * args: {\"expression\": {\"type\": \"string\"}}\n * ```\n * @param tools\n * @returns a string of all tools, their descriptions and a stringified version of their schemas\n */\nfunction renderTextDescriptionAndArgs(tools) {\n    if (tools.every(_langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_1__.isOpenAITool)) {\n        return tools\n            .map((tool) => `${tool.function.name}${tool.function.description ? `: ${tool.function.description}` : \"\"}, args: ${JSON.stringify(tool.function.parameters)}`)\n            .join(\"\\n\");\n    }\n    return tools\n        .map((tool) => `${tool.name}: ${tool.description}, args: ${JSON.stringify((0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(tool.schema).properties)}`)\n        .join(\"\\n\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9yZW5kZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUNnQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsOEVBQVk7QUFDaEM7QUFDQSw4QkFBOEIsbUJBQW1CLEVBQUUsaUNBQWlDLDBCQUEwQixPQUFPO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixVQUFVLElBQUksaUJBQWlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxVQUFVO0FBQzFEO0FBQ0EsVUFBVSxlQUFlO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsOEVBQVk7QUFDaEM7QUFDQSw4QkFBOEIsbUJBQW1CLEVBQUUsaUNBQWlDLDBCQUEwQixPQUFPLFVBQVUseUNBQXlDO0FBQ3hLO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixVQUFVLElBQUksaUJBQWlCLFVBQVUsZUFBZSxtRUFBZSwwQkFBMEI7QUFDM0g7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9yZW5kZXIuanM/YTFhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6b2RUb0pzb25TY2hlbWEgfSBmcm9tIFwiem9kLXRvLWpzb24tc2NoZW1hXCI7XG5pbXBvcnQgeyBpc09wZW5BSVRvb2wsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9sYW5ndWFnZV9tb2RlbHMvYmFzZVwiO1xuLyoqXG4gKiBSZW5kZXIgdGhlIHRvb2wgbmFtZSBhbmQgZGVzY3JpcHRpb24gaW4gcGxhaW4gdGV4dC5cbiAqXG4gKiBPdXRwdXQgd2lsbCBiZSBpbiB0aGUgZm9ybWF0IG9mOlxuICogYGBgXG4gKiBzZWFyY2g6IFRoaXMgdG9vbCBpcyB1c2VkIGZvciBzZWFyY2hcbiAqIGNhbGN1bGF0b3I6IFRoaXMgdG9vbCBpcyB1c2VkIGZvciBtYXRoXG4gKiBgYGBcbiAqIEBwYXJhbSB0b29sc1xuICogQHJldHVybnMgYSBzdHJpbmcgb2YgYWxsIHRvb2xzIGFuZCB0aGVpciBkZXNjcmlwdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclRleHREZXNjcmlwdGlvbih0b29scykge1xuICAgIGlmICh0b29scy5ldmVyeShpc09wZW5BSVRvb2wpKSB7XG4gICAgICAgIHJldHVybiB0b29sc1xuICAgICAgICAgICAgLm1hcCgodG9vbCkgPT4gYCR7dG9vbC5mdW5jdGlvbi5uYW1lfSR7dG9vbC5mdW5jdGlvbi5kZXNjcmlwdGlvbiA/IGA6ICR7dG9vbC5mdW5jdGlvbi5kZXNjcmlwdGlvbn1gIDogXCJcIn1gKVxuICAgICAgICAgICAgLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiB0b29sc1xuICAgICAgICAubWFwKCh0b29sKSA9PiBgJHt0b29sLm5hbWV9OiAke3Rvb2wuZGVzY3JpcHRpb259YClcbiAgICAgICAgLmpvaW4oXCJcXG5cIik7XG59XG4vKipcbiAqIFJlbmRlciB0aGUgdG9vbCBuYW1lLCBkZXNjcmlwdGlvbiwgYW5kIGFyZ3MgaW4gcGxhaW4gdGV4dC5cbiAqIE91dHB1dCB3aWxsIGJlIGluIHRoZSBmb3JtYXQgb2Y6J1xuICogYGBgXG4gKiBzZWFyY2g6IFRoaXMgdG9vbCBpcyB1c2VkIGZvciBzZWFyY2gsIGFyZ3M6IHtcInF1ZXJ5XCI6IHtcInR5cGVcIjogXCJzdHJpbmdcIn19XG4gKiBjYWxjdWxhdG9yOiBUaGlzIHRvb2wgaXMgdXNlZCBmb3IgbWF0aCxcbiAqIGFyZ3M6IHtcImV4cHJlc3Npb25cIjoge1widHlwZVwiOiBcInN0cmluZ1wifX1cbiAqIGBgYFxuICogQHBhcmFtIHRvb2xzXG4gKiBAcmV0dXJucyBhIHN0cmluZyBvZiBhbGwgdG9vbHMsIHRoZWlyIGRlc2NyaXB0aW9ucyBhbmQgYSBzdHJpbmdpZmllZCB2ZXJzaW9uIG9mIHRoZWlyIHNjaGVtYXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclRleHREZXNjcmlwdGlvbkFuZEFyZ3ModG9vbHMpIHtcbiAgICBpZiAodG9vbHMuZXZlcnkoaXNPcGVuQUlUb29sKSkge1xuICAgICAgICByZXR1cm4gdG9vbHNcbiAgICAgICAgICAgIC5tYXAoKHRvb2wpID0+IGAke3Rvb2wuZnVuY3Rpb24ubmFtZX0ke3Rvb2wuZnVuY3Rpb24uZGVzY3JpcHRpb24gPyBgOiAke3Rvb2wuZnVuY3Rpb24uZGVzY3JpcHRpb259YCA6IFwiXCJ9LCBhcmdzOiAke0pTT04uc3RyaW5naWZ5KHRvb2wuZnVuY3Rpb24ucGFyYW1ldGVycyl9YClcbiAgICAgICAgICAgIC5qb2luKFwiXFxuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gdG9vbHNcbiAgICAgICAgLm1hcCgodG9vbCkgPT4gYCR7dG9vbC5uYW1lfTogJHt0b29sLmRlc2NyaXB0aW9ufSwgYXJnczogJHtKU09OLnN0cmluZ2lmeSh6b2RUb0pzb25TY2hlbWEodG9vbC5zY2hlbWEpLnByb3BlcnRpZXMpfWApXG4gICAgICAgIC5qb2luKFwiXFxuXCIpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/render.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/requests.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/requests.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestsGetTool: () => (/* binding */ RequestsGetTool),\n/* harmony export */   RequestsPostTool: () => (/* binding */ RequestsPostTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n\n/**\n * Class for making GET requests. Extends the Tool class and implements\n * the RequestTool interface. The input should be a URL string, and the\n * output will be the text response of the GET request.\n */\nclass RequestsGetTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"RequestsGetTool\";\n    }\n    constructor(headers = {}, { maxOutputLength } = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"requests_get\"\n        });\n        Object.defineProperty(this, \"maxOutputLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2000\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `A portal to the internet. Use this when you need to get specific content from a website.\n  Input should be a url string (i.e. \"https://www.google.com\"). The output will be the text response of the GET request.`\n        });\n        this.maxOutputLength = maxOutputLength ?? this.maxOutputLength;\n    }\n    /** @ignore */\n    async _call(input) {\n        const res = await fetch(input, {\n            headers: this.headers,\n        });\n        const text = await res.text();\n        return text.slice(0, this.maxOutputLength);\n    }\n}\n/**\n * Class for making POST requests. Extends the Tool class and implements\n * the RequestTool interface. The input should be a JSON string with two\n * keys: 'url' and 'data'. The output will be the text response of the\n * POST request.\n */\nclass RequestsPostTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"RequestsPostTool\";\n    }\n    constructor(headers = {}, { maxOutputLength } = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"requests_post\"\n        });\n        Object.defineProperty(this, \"maxOutputLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: Infinity\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Use this when you want to POST to a website.\n  Input should be a json string with two keys: \"url\" and \"data\".\n  The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of\n  key-value pairs you want to POST to the url as a JSON body.\n  Be careful to always use double quotes for strings in the json string\n  The output will be the text response of the POST request.`\n        });\n        this.maxOutputLength = maxOutputLength ?? this.maxOutputLength;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            const { url, data } = JSON.parse(input);\n            const res = await fetch(url, {\n                method: \"POST\",\n                headers: this.headers,\n                body: JSON.stringify(data),\n            });\n            const text = await res.text();\n            return text.slice(0, this.maxOutputLength);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9yZXF1ZXN0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhCQUE4Qix1REFBSTtBQUN6QztBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSSxrQkFBa0IsSUFBSTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQkFBK0IsdURBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksa0JBQWtCLElBQUk7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsTUFBTTtBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYW5nY2hhaW4tbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTFfQGxhbmdjaGFpbitjb3JlQDAuMy4zMV9vcGVuYWlANC43OS4xX3dzQDguMTguMF96b2RAMy4yNC4xX19fQGxhbmdjaGFpbitvbGxhbV9zcmtvY256enRwanhqazVmbDdpcTIyMnozaS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvcmVxdWVzdHMuanM/YTE4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb29sIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS90b29sc1wiO1xuLyoqXG4gKiBDbGFzcyBmb3IgbWFraW5nIEdFVCByZXF1ZXN0cy4gRXh0ZW5kcyB0aGUgVG9vbCBjbGFzcyBhbmQgaW1wbGVtZW50c1xuICogdGhlIFJlcXVlc3RUb29sIGludGVyZmFjZS4gVGhlIGlucHV0IHNob3VsZCBiZSBhIFVSTCBzdHJpbmcsIGFuZCB0aGVcbiAqIG91dHB1dCB3aWxsIGJlIHRoZSB0ZXh0IHJlc3BvbnNlIG9mIHRoZSBHRVQgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGNsYXNzIFJlcXVlc3RzR2V0VG9vbCBleHRlbmRzIFRvb2wge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJSZXF1ZXN0c0dldFRvb2xcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoaGVhZGVycyA9IHt9LCB7IG1heE91dHB1dExlbmd0aCB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogaGVhZGVyc1xuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJyZXF1ZXN0c19nZXRcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibWF4T3V0cHV0TGVuZ3RoXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAyMDAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZXNjcmlwdGlvblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogYEEgcG9ydGFsIHRvIHRoZSBpbnRlcm5ldC4gVXNlIHRoaXMgd2hlbiB5b3UgbmVlZCB0byBnZXQgc3BlY2lmaWMgY29udGVudCBmcm9tIGEgd2Vic2l0ZS5cbiAgSW5wdXQgc2hvdWxkIGJlIGEgdXJsIHN0cmluZyAoaS5lLiBcImh0dHBzOi8vd3d3Lmdvb2dsZS5jb21cIikuIFRoZSBvdXRwdXQgd2lsbCBiZSB0aGUgdGV4dCByZXNwb25zZSBvZiB0aGUgR0VUIHJlcXVlc3QuYFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tYXhPdXRwdXRMZW5ndGggPSBtYXhPdXRwdXRMZW5ndGggPz8gdGhpcy5tYXhPdXRwdXRMZW5ndGg7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwoaW5wdXQpIHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goaW5wdXQsIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICByZXR1cm4gdGV4dC5zbGljZSgwLCB0aGlzLm1heE91dHB1dExlbmd0aCk7XG4gICAgfVxufVxuLyoqXG4gKiBDbGFzcyBmb3IgbWFraW5nIFBPU1QgcmVxdWVzdHMuIEV4dGVuZHMgdGhlIFRvb2wgY2xhc3MgYW5kIGltcGxlbWVudHNcbiAqIHRoZSBSZXF1ZXN0VG9vbCBpbnRlcmZhY2UuIFRoZSBpbnB1dCBzaG91bGQgYmUgYSBKU09OIHN0cmluZyB3aXRoIHR3b1xuICoga2V5czogJ3VybCcgYW5kICdkYXRhJy4gVGhlIG91dHB1dCB3aWxsIGJlIHRoZSB0ZXh0IHJlc3BvbnNlIG9mIHRoZVxuICogUE9TVCByZXF1ZXN0LlxuICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdHNQb3N0VG9vbCBleHRlbmRzIFRvb2wge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJSZXF1ZXN0c1Bvc3RUb29sXCI7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGhlYWRlcnMgPSB7fSwgeyBtYXhPdXRwdXRMZW5ndGggfSA9IHt9KSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhlYWRlcnNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGhlYWRlcnNcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwicmVxdWVzdHNfcG9zdFwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtYXhPdXRwdXRMZW5ndGhcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IEluZmluaXR5XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZXNjcmlwdGlvblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogYFVzZSB0aGlzIHdoZW4geW91IHdhbnQgdG8gUE9TVCB0byBhIHdlYnNpdGUuXG4gIElucHV0IHNob3VsZCBiZSBhIGpzb24gc3RyaW5nIHdpdGggdHdvIGtleXM6IFwidXJsXCIgYW5kIFwiZGF0YVwiLlxuICBUaGUgdmFsdWUgb2YgXCJ1cmxcIiBzaG91bGQgYmUgYSBzdHJpbmcsIGFuZCB0aGUgdmFsdWUgb2YgXCJkYXRhXCIgc2hvdWxkIGJlIGEgZGljdGlvbmFyeSBvZlxuICBrZXktdmFsdWUgcGFpcnMgeW91IHdhbnQgdG8gUE9TVCB0byB0aGUgdXJsIGFzIGEgSlNPTiBib2R5LlxuICBCZSBjYXJlZnVsIHRvIGFsd2F5cyB1c2UgZG91YmxlIHF1b3RlcyBmb3Igc3RyaW5ncyBpbiB0aGUganNvbiBzdHJpbmdcbiAgVGhlIG91dHB1dCB3aWxsIGJlIHRoZSB0ZXh0IHJlc3BvbnNlIG9mIHRoZSBQT1NUIHJlcXVlc3QuYFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tYXhPdXRwdXRMZW5ndGggPSBtYXhPdXRwdXRMZW5ndGggPz8gdGhpcy5tYXhPdXRwdXRMZW5ndGg7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwoaW5wdXQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHsgdXJsLCBkYXRhIH0gPSBKU09OLnBhcnNlKGlucHV0KTtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzLnRleHQoKTtcbiAgICAgICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKDAsIHRoaXMubWF4T3V0cHV0TGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtlcnJvcn1gO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/requests.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/vectorstore.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/vectorstore.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStoreQATool: () => (/* binding */ VectorStoreQATool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _chains_vector_db_qa_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chains/vector_db_qa.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/chains/vector_db_qa.js\");\n\n\n/**\n * A tool for the VectorDBQA chain to interact with a Vector Store. It is\n * used to answer questions about a specific topic. The input to this tool\n * should be a fully formed question.\n */\nclass VectorStoreQATool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"VectorStoreQATool\";\n    }\n    constructor(name, description, fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n        this.description = description;\n        this.vectorStore = fields.vectorStore;\n        this.llm = fields.llm;\n        this.chain = _chains_vector_db_qa_js__WEBPACK_IMPORTED_MODULE_1__.VectorDBQAChain.fromLLM(this.llm, this.vectorStore);\n    }\n    /**\n     * Returns a string that describes what the tool does.\n     * @param name The name of the tool.\n     * @param description A description of what the tool does.\n     * @returns A string that describes what the tool does.\n     */\n    static getDescription(name, description) {\n        return `Useful for when you need to answer questions about ${name}. Whenever you need information about ${description} you should ALWAYS use this. Input should be a fully formed question.`;\n    }\n    /** @ignore */\n    async _call(input) {\n        return this.chain.run(input);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy92ZWN0b3JzdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDZTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLHVEQUFJO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0VBQWU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxLQUFLLHdDQUF3QyxhQUFhO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xhbmdjaGFpbi1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy92ZWN0b3JzdG9yZS5qcz9mM2E2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvb2wgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG5pbXBvcnQgeyBWZWN0b3JEQlFBQ2hhaW4gfSBmcm9tIFwiLi4vY2hhaW5zL3ZlY3Rvcl9kYl9xYS5qc1wiO1xuLyoqXG4gKiBBIHRvb2wgZm9yIHRoZSBWZWN0b3JEQlFBIGNoYWluIHRvIGludGVyYWN0IHdpdGggYSBWZWN0b3IgU3RvcmUuIEl0IGlzXG4gKiB1c2VkIHRvIGFuc3dlciBxdWVzdGlvbnMgYWJvdXQgYSBzcGVjaWZpYyB0b3BpYy4gVGhlIGlucHV0IHRvIHRoaXMgdG9vbFxuICogc2hvdWxkIGJlIGEgZnVsbHkgZm9ybWVkIHF1ZXN0aW9uLlxuICovXG5leHBvcnQgY2xhc3MgVmVjdG9yU3RvcmVRQVRvb2wgZXh0ZW5kcyBUb29sIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiVmVjdG9yU3RvcmVRQVRvb2xcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IobmFtZSwgZGVzY3JpcHRpb24sIGZpZWxkcykge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2ZWN0b3JTdG9yZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsbG1cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZXNjcmlwdGlvblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjaGFpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMudmVjdG9yU3RvcmUgPSBmaWVsZHMudmVjdG9yU3RvcmU7XG4gICAgICAgIHRoaXMubGxtID0gZmllbGRzLmxsbTtcbiAgICAgICAgdGhpcy5jaGFpbiA9IFZlY3RvckRCUUFDaGFpbi5mcm9tTExNKHRoaXMubGxtLCB0aGlzLnZlY3RvclN0b3JlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyB0aGF0IGRlc2NyaWJlcyB3aGF0IHRoZSB0b29sIGRvZXMuXG4gICAgICogQHBhcmFtIG5hbWUgVGhlIG5hbWUgb2YgdGhlIHRvb2wuXG4gICAgICogQHBhcmFtIGRlc2NyaXB0aW9uIEEgZGVzY3JpcHRpb24gb2Ygd2hhdCB0aGUgdG9vbCBkb2VzLlxuICAgICAqIEByZXR1cm5zIEEgc3RyaW5nIHRoYXQgZGVzY3JpYmVzIHdoYXQgdGhlIHRvb2wgZG9lcy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0RGVzY3JpcHRpb24obmFtZSwgZGVzY3JpcHRpb24pIHtcbiAgICAgICAgcmV0dXJuIGBVc2VmdWwgZm9yIHdoZW4geW91IG5lZWQgdG8gYW5zd2VyIHF1ZXN0aW9ucyBhYm91dCAke25hbWV9LiBXaGVuZXZlciB5b3UgbmVlZCBpbmZvcm1hdGlvbiBhYm91dCAke2Rlc2NyaXB0aW9ufSB5b3Ugc2hvdWxkIEFMV0FZUyB1c2UgdGhpcy4gSW5wdXQgc2hvdWxkIGJlIGEgZnVsbHkgZm9ybWVkIHF1ZXN0aW9uLmA7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hhaW4ucnVuKGlucHV0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/tools/vectorstore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/document.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/document.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDocumentsAsString: () => (/* binding */ formatDocumentsAsString)\n/* harmony export */ });\n/**\n * Given a list of documents, this util formats their contents\n * into a string, separated by newlines.\n *\n * @param documents\n * @returns A string of the documents page content, separated by newlines.\n */\nconst formatDocumentsAsString = (documents) => documents.map((doc) => doc.pageContent).join(\"\\n\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC91dGlsL2RvY3VtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L3V0aWwvZG9jdW1lbnQuanM/MmIwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgbGlzdCBvZiBkb2N1bWVudHMsIHRoaXMgdXRpbCBmb3JtYXRzIHRoZWlyIGNvbnRlbnRzXG4gKiBpbnRvIGEgc3RyaW5nLCBzZXBhcmF0ZWQgYnkgbmV3bGluZXMuXG4gKlxuICogQHBhcmFtIGRvY3VtZW50c1xuICogQHJldHVybnMgQSBzdHJpbmcgb2YgdGhlIGRvY3VtZW50cyBwYWdlIGNvbnRlbnQsIHNlcGFyYXRlZCBieSBuZXdsaW5lcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGZvcm1hdERvY3VtZW50c0FzU3RyaW5nID0gKGRvY3VtZW50cykgPT4gZG9jdW1lbnRzLm1hcCgoZG9jKSA9PiBkb2MucGFnZUNvbnRlbnQpLmpvaW4oXCJcXG5cXG5cIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/document.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/set.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/set.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   difference: () => (/* binding */ difference),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#implementing_basic_set_operations\n */\n/**\n * returns intersection of two sets\n */\nfunction intersection(setA, setB) {\n    const _intersection = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem);\n        }\n    }\n    return _intersection;\n}\n/**\n * returns union of two sets\n */\nfunction union(setA, setB) {\n    const _union = new Set(setA);\n    for (const elem of setB) {\n        _union.add(elem);\n    }\n    return _union;\n}\n/**\n * returns difference of two sets\n */\nfunction difference(setA, setB) {\n    const _difference = new Set(setA);\n    for (const elem of setB) {\n        _difference.delete(elem);\n    }\n    return _difference;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xMV9AbGFuZ2NoYWluK2NvcmVAMC4zLjMxX29wZW5haUA0Ljc5LjFfd3NAOC4xOC4wX3pvZEAzLjI0LjFfX19AbGFuZ2NoYWluK29sbGFtX3Nya29jbnp6dHBqeGprNWZsN2lxMjIyejNpL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC91dGlsL3NldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGFuZ2NoYWluLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjExX0BsYW5nY2hhaW4rY29yZUAwLjMuMzFfb3BlbmFpQDQuNzkuMV93c0A4LjE4LjBfem9kQDMuMjQuMV9fX0BsYW5nY2hhaW4rb2xsYW1fc3Jrb2Nuenp0cGp4ams1Zmw3aXEyMjJ6M2kvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L3V0aWwvc2V0LmpzPzZlZDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTb3VyY2U6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1NldCNpbXBsZW1lbnRpbmdfYmFzaWNfc2V0X29wZXJhdGlvbnNcbiAqL1xuLyoqXG4gKiByZXR1cm5zIGludGVyc2VjdGlvbiBvZiB0d28gc2V0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gaW50ZXJzZWN0aW9uKHNldEEsIHNldEIpIHtcbiAgICBjb25zdCBfaW50ZXJzZWN0aW9uID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3QgZWxlbSBvZiBzZXRCKSB7XG4gICAgICAgIGlmIChzZXRBLmhhcyhlbGVtKSkge1xuICAgICAgICAgICAgX2ludGVyc2VjdGlvbi5hZGQoZWxlbSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIF9pbnRlcnNlY3Rpb247XG59XG4vKipcbiAqIHJldHVybnMgdW5pb24gb2YgdHdvIHNldHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVuaW9uKHNldEEsIHNldEIpIHtcbiAgICBjb25zdCBfdW5pb24gPSBuZXcgU2V0KHNldEEpO1xuICAgIGZvciAoY29uc3QgZWxlbSBvZiBzZXRCKSB7XG4gICAgICAgIF91bmlvbi5hZGQoZWxlbSk7XG4gICAgfVxuICAgIHJldHVybiBfdW5pb247XG59XG4vKipcbiAqIHJldHVybnMgZGlmZmVyZW5jZSBvZiB0d28gc2V0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGlmZmVyZW5jZShzZXRBLCBzZXRCKSB7XG4gICAgY29uc3QgX2RpZmZlcmVuY2UgPSBuZXcgU2V0KHNldEEpO1xuICAgIGZvciAoY29uc3QgZWxlbSBvZiBzZXRCKSB7XG4gICAgICAgIF9kaWZmZXJlbmNlLmRlbGV0ZShlbGVtKTtcbiAgICB9XG4gICAgcmV0dXJuIF9kaWZmZXJlbmNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.11_@langchain+core@0.3.31_openai@4.79.1_ws@8.18.0_zod@3.24.1___@langchain+ollam_srkocnzztpjxjk5fl7iq222z3i/node_modules/langchain/dist/util/set.js\n");

/***/ })

};
;